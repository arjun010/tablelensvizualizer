NormText;CompletedEvents;Duration;AvgDuration;Reads;AvgReads;Writes;AvgWrites;CPU;AvgCPU
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ —Ã–_ ŒÕ“–ŒÀ‹ Œ—“¿“ Œ¬();36;159232;4423.11;1321;36.69;16;0.44;63;1.75
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ —Ã–_ ŒÕ“–ŒÀ‹ Œ—“¿“ Œ¬();18;171469;9526.06;552;30.67;0;0.00;32;1.78
SELECT RTRIM(PHYSICAL_NAME),RTRIM(TYPE_DESC),RTRIM(STATE_DESC), IS_NAME_RESERVED FROM SYS.MASTER_FILES WHERE DB_ID({STRN}) = DATABASE_ID;18;400789;22266.06;326;18.11;0;0.00;141;7.83
BPP_ACCRUAL_DEPOSITS_CALC_V2;24;12440810;518367.08;77713;3238.04;2;0.08;8674;361.42
BS_ADMIN_GET_OFFICES;4;282671;70667.75;4122;1030.50;24;6.00;156;39.00
[RPT_¡”’√_Œ“◊≈“ œŒ «¿¡¿À¿Õ—Œ¬€Ã —◊≈“¿Ã];1;13794297;13794297.00;1756128;1756128.00;52;52.00;9719;9719.00
BPP_MQ_CHECKMESSAGE;287958;44122124;153.22;863986;3.00;0;0.00;35637;0.12
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ Œ»Ã–  À»≈Õ“— »≈ œÀ¿“≈∆» œŒ ÕŒ—“–Œ();2;10076;5038.00;121;60.50;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ Œ»Ã–  À»≈Õ“— »≈ œÀ¿“≈∆» œŒ ÕŒ—“–Œ();1;15785;15785.00;107;107.00;0;0.00;16;16.00
SELECT IDENT, SWIFT, BANNAME, BANLKCODE, BANLOCATN, NOBALANCE, NOISOPENACC, NOISEMPTY, DOC_SIGN_FINISH FROM #TAB_BANKS_TABLE ORDER BY SWIFT ASC;148;981562;6632.18;24243;163.80;82;0.55;603;4.07
APP_EXCHANGECONTROLSUSAGEPARAMS_LIST;2;147763;73881.50;1160;580.00;2;1.00;62;31.00
BPP_TELEX_RELATED;1;889401;889401.00;17696;17696.00;0;0.00;532;532.00
BPP_TELEXORDER_103;354;80162140;226446.72;3548107;10022.90;65;0.18;65438;184.85
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ  ŒÕ¬≈–“¿÷»»();4;109279;27319.75;841;210.25;0;0.00;108;27.00
BACKUP DATABASE MSDB TO VIRTUAL_DEVICE={STR} WITH SNAPSHOT,BUFFERCOUNT={##},BLOCKSIZE={##};1;15802964;15802964.00;1150;1150.00;32;32.00;109;109.00
EXEC @P#=TAB_CURRENCY_BOX_PROC;167;379365;2271.65;26855;160.81;37;0.22;187;1.12
BS_OFFLINE_PRINT_CLIENTADVICE;10;284916;28491.60;1592;159.20;6;0.60;125;12.50
SELECT TOP {##} *, {STR} AS PARAMETER FROM FN_BPP_OPTIONS_TREE() CROSS JOIN FN_BPP_TRANSACTION_TREE({##}) CROSS JOIN BPP_ACCOUNTS AS ACC WHERE ACC.IDENT = {##};99;31212617;315278.96;37708;380.89;28;0.28;26087;263.51
DECLARE @MODE VARCHAR({##}) SET @MODE = {STR} IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCOUNTS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCPROPS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TRANSACTIONS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #AC_XML_RESULTS END CREATE TABLE #ACCOUNTS ( AC_IDENT INT NOT NULL , CU_CODE VARCHAR({##}), CURR_IDENT INT, CURRENCY VARCHAR({##}), AC_KIND VARCHAR({##}), AC_SUB VARCHAR({##}), AC_OPEN_DATE DATETIME, OPEN_BALANCE NUMERIC({##},{##}), MATURITY_DATE DATETIME, INT_RATE NUMERIC({##},{##}), RATETOBASE NUMERIC({##},{##}), INTBENEFICIARY CHAR({##}), INTPAYPERIOD INT, INTPAYDAY INT, DAYTOPAY DATETIME, TAX_PERCENT NUMERIC({##},{##}), DP_TYPE VARCHAR({##}), BEN_AC_IDENT INT, PRJ_VAL_DATE DATETIME ) CREATE TABLE #ACCPROPS ( AC_IDENT INT, START_DATE DATETIME, STOP_DATE DATETIME, INT_RATE NUMERIC({##},{##}), YTM_BASIS INT, CUTOFF_AMOUNT NUMERIC({##},{##}) ) CREATE TABLE #TRANSACTIONS ( AC_IDENT INT NOT NULL , VALUE_DATE DATETIME, DEBIT NUMERIC({##},{##}), CREDIT NUMERIC({##},{##}), ACCRUED NUMERIC({##},{##}), PAIDACCRUED NUMERIC({##},{##}), PAIDINTEREST NUMERIC({##},{##}), HIST_AIRATE NUMERIC({##},{##}) ) CREATE TABLE #AC_XML_RESULTS ( AC_IDENT INT NOT NULL , AC_XML_ITEMS VARCHAR({##}), AC_LOG TEXT ) INSERT INTO #ACCOUNTS ( AC_IDENT , CU_CODE , CURR_IDENT , CURRENCY , AC_KIND , AC_SUB , AC_OPEN_DATE , INT_RATE , MATURITY_DATE , TAX_PERCENT , DP_TYPE , BEN_AC_IDENT , PRJ_VAL_DATE ) SELECT AC.IDENT, CU.CU_CODE, AC.CURR_IDENT, CURR.CURRENCY, AC.AC_KIND, CAST(AC_NUMBER AS VARCHAR({##})), AC_OPEN_DATE, ACINT.AI_INTEREST, ISNULL(DP.DP_MATURITY_DATE,CAST({STR} AS DATETIME)), CASE WHEN ISNUMERIC(ISNULL(TX.AN_MONIKER,{STR})) = {##} THEN CAST(TX.AN_MONIKER AS NUMERIC({##},{##})) ELSE {##} END, ISNULL(TP.AN_DESCR_RUS,{STR}), CASE WHEN DP_INTEREST_FLAG = {##} THEN AC.IDENT ELSE ( SELECT TOP {##} IDENT FROM BPP_ACCOUNTS AS BENAC WHERE DELETED = {##} AND BENAC.CU_IDENT = AC.CU_IDENT AND BENAC.CURR_IDENT = AC.CURR_IDENT AND BENAC.AC_KIND IN(LIST) AND BENAC.AC_CLOSED <> {STR} ) END, {STR} FROM DBO.BPP_ACCOUNTS AS AC INNER JOIN DBO.BPP_CUSTOMERS AS CU ON AC.CU_IDENT = CU.IDENT INNER JOIN DBO.CURRENCY AS CURR ON AC.CURR_IDENT = CURR.IDENT INNER JOIN DBO.BPP_AC_DEPOSITS AS DP ON DP.AC_IDENT = AC.IDENT AND {STR} BETWEEN DP_START_DATE AND DP_STOP_DATE AND DP.DELETED = {##} INNER JOIN DBO.BPP_AC_INTEREST AS ACINT ON ACINT.AC_IDENT = AC.IDENT AND {STR} BETWEEN AI_START_DATE AND AI_STOP_DATE AND ACINT.DELETED = {##} AND ACINT.AI_ACCRUALS_FLAG={STR} LEFT JOIN DBO.VADE_MECUM AS TX ON CU_TAXFRPERCENT_IDENT = TX.IDENT AND TX.DELETED = {##} LEFT JOIN DBO.VADE_MECUM AS TP ON DP.DP_TYPE_IDENT = TP.IDENT AND TP.DELETED = {##} CROSS JOIN DBO.BPP_OPTIONS AS OPT WHERE AC.IDENT = {##} AND AC.CU_IDENT <> OPT.CU_IDENT AND AC.BN_IDENT = OPT.BN_IDENT AND AC_CLOSED <> {STR} AND AC.AC_KIND IN(LIST) AND (DP_INTEREST_FLAG IN(LIST) OR @MODE = {STR}) AND AI_PERIOD < {##} AND AC.DELETED = {##} AND CU.DELETED = {##} AND CURR.DELETED = {##} AND OPT.DELETED = {##};7;1384858;197836.86;4291;613.00;6;0.86;796;113.71
BPP_TRANSACTION_EXCH_CTRL_TRANSFORMERS;1542;17677229;11463.83;849931;551.19;2502;1.62;9929;6.44
BPP_GET_RIGHTS_ARRAY;964;10059735;10435.41;2162240;2242.99;0;0.00;4485;4.65
BPP_BIC_BANK_GET_DATA;182;18059328;99227.08;269380;1480.11;0;0.00;12590;69.18
BS_OFFLINE_INSERT_PACKAGE;410;2270086;5536.80;9218;22.48;309;0.75;436;1.06
DROP TABLE #AC_TURNS DROP TABLE #ACCOUNTS DROP TABLE #AC_XML_RESULTS DROP TABLE #LOANS;157;3001322;19116.70;74960;477.45;0;0.00;2112;13.45
BPP_IS_UNIQUE_LOCALNUMBER;67;77865;1162.16;317;4.73;0;0.00;0;0.00
APP_ORDER_DELETE;1;69290;69290.00;704;704.00;3;3.00;47;47.00
BDD_PURGE_DAY_DOCUMENDS;24;10090721;420446.71;1095751;45656.29;3444;143.50;7919;329.96
APP_LOGIN;80;738677;9233.46;18144;226.80;0;0.00;456;5.70
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ ¿——¿ œ¿ ≈“ ≈∆≈ƒÕ≈¬Õ€’ —œ–¿¬Œ ();32;203492;6359.13;2601;81.28;5;0.16;46;1.44
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ ¿——¿ œ¿ ≈“ ≈∆≈ƒÕ≈¬Õ€’ —œ–¿¬Œ ();16;70730;4420.63;452;28.25;1;0.06;0;0.00
BPP_BEN_UPDATE;33;69580;2108.48;159;4.82;24;0.73;48;1.45
BPP_TRANSACTION_GET_NOSTRO_IDENT;2;19476;9738.00;90;45.00;0;0.00;30;15.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ —œ»—Œ  ¬Œ«¬–¿“Œ¬();1;4140;4140.00;107;107.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ —œ»—Œ  ¬Œ«¬–¿“Œ¬();2;39752;19876.00;426;213.00;1;0.50;31;15.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ —Ã–_Ã¿–ÿ–”“»«¿÷»ﬂ œÀ¿“≈∆≈…();10;56462;5646.20;1411;141.10;0;0.00;79;7.90
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ —Ã–_Ã¿–ÿ–”“»«¿÷»ﬂ œÀ¿“≈∆≈…();5;21870;4374.00;205;41.00;0;0.00;15;3.00
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO, CORRNMB FROM DBO.FN_TAB_ACCMANAGE_OWN_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, NARRATIVE ASC;3;228955;76318.33;6712;2237.33;12;4.00;110;36.67
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_WRONG_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {##}, {##}, {##}, {##}, NULL, NULL, {##} ) ORDER BY FLAG ASC, CREDIT ASC;7;219233;31319.00;10610;1515.71;5;0.71;158;22.57
SELECT VM.IDENT AS IDENT, VM.AG_IDENT AS AG_IDENT, CASE WHEN CHILD.PARENT_ID IS NULL THEN {##} ELSE {##} END AS ISCHILD, CASE WHEN @@LANGUAGE={STR} THEN CASE WHEN ISNULL(VM.AN_DESCR_ENG,{STR}) = {STR} THEN VM.AN_NAME_ENG ELSE VM.AN_DESCR_ENG END ELSE CASE WHEN ISNULL(VM.AN_DESCR_RUS,{STR}) = {STR} THEN VM.AN_NAME_RUS ELSE VM.AN_DESCR_RUS END END AS CAPTION, VM.AN_DESCR_ENG AS AN_DESCR_ENG, VM.AN_DESCR_RUS AS AN_DESCR_RUS, VM.AN_NAME_ENG AS AN_NAME_ENG, VM.AN_NAME_RUS AS AN_NAME_RUS, VM.AN_PATH AS AN_PATH, VM.AN_MONIKER AS AN_MONIKER, VM.AN_AMNT_FLAG AS AN_AMNT_FLAG, VM.AN_SYSTEM AS AN_SYSTEM, VM.AN_ACTIVE_FLAG AS AN_ACTIVE_FLAG FROM DBO.VADE_MECUM AS VM LEFT JOIN ( SELECT DISTINCT AG_IDENT AS PARENT_ID FROM DBO.VADE_MECUM WHERE DELETED = {##} ) CHILD ON VM.IDENT = CHILD.PARENT_ID WHERE VM.DELETED = {##} AND (VM.AN_PATH IS NULL OR VM.AN_PATH IN(LIST)) AND VM.AN_MONIKER <> {STR} AND (GETDATE() BETWEEN VM.AN_START_DATE AND VM.AN_STOP_DATE) ORDER BY ISNULL(VM.AN_PATH,VM.AN_MONIKER)+{STR}+CASE WHEN VM.AN_PATH IS NULL THEN {STR} ELSE VM.AN_MONIKER END;27;15613388;578273.63;54324;2012.00;61;2.26;7622;282.30
SELECT IDENT, ANNAME, OPENBALANCE, DEBIT, CREDIT, CLOSEDBALANCE, SEARCHBY, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY, CU_CODE, AC_KIND, CURRENCY, AC_SUBACC, ANALITICS FROM DBO.FN_TAB_ACCMANAGE_LOANTERMS({STR},{STR},{STR}, {##}) ORDER BY FLAG ASC, FULL_PATH ASC;49;43342417;884539.12;409150;8350.00;25;0.51;31329;639.37
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_NUMBER AS AC_SUBACC, AC_INTEREST, BALANCE, OF_CODE, CU_CODE + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS SEARCHBY, CU_CODE + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, CC_HOLDER, CC_MATURITYDATE, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_ALLACCOUNTS ( {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CC_HOLDER ASC;2;7627165;3813582.50;92086;46043.00;165;82.50;2875;1437.50
BPP_ACCITEMPROP_NEWINFO;6;84171;14028.50;754;125.67;0;0.00;78;13.00
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_WRONG_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {##}, {##}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, CREDIT DESC;3;470074;156691.33;5411;1803.67;4;1.33;125;41.67
BPP_TRANSHEADER_ATTRIBUTES;2818;3824473;1357.16;89472;31.75;29;0.01;3021;1.07
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DECLARE @A INT END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DECLARE @B INT END;1088;152632;140.29;118;0.11;0;0.00;219;0.20
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_LOANTERMOPERS({STR},{STR},{STR}, {##}, {##}) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;60;1363742;22729.03;24843;414.05;26;0.43;499;8.32
[RPT_Œ —Ã–_ ŒÕ“–ŒÀ‹ Œ—“¿“ Œ¬];26;166478511;6403019.65;12237561;470675.42;5252;202.00;128188;4930.31
BPP_BRANCH_ATTRIBUTES_BY_LOCALCODE;122;6951509;56979.58;1206;9.89;0;0.00;5627;46.12
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, OF_CODE, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_CURRENT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, DEBIT ASC;30;5988277;199609.23;412921;13764.03;1507;50.23;4610;153.67
SELECT IDENT, {STR} AS AC_LOCAL, CU_CODE, SEQNMB, BALANCE, PRINCIPAL, INTEREST, OF_CODE, CU_CODE AS SEARCHBY, CU_CODE AS AC_NUMBER, CU_NAME, ISNULL(ISOPENACC,{##}) AS ISOPENACC, DOCSIGNDAYS, {STR} AS BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_CREDITORS ( {STR}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, CU_NAME DESC;1;1981087;1981087.00;88857;88857.00;92;92.00;1969;1969.00
SELECT IDENT, CURRENCY, MONIKER, AC_NAME, CR_BAL_IN - DR_BAL_IN AS BAL_IN, DR_TURN_CLR, CR_TURN_CLR, CR_BAL_OUT - DR_BAL_OUT AS BAL_OUT, FULL_PATH, {##} AS OBJ_CATEGORY, TOTALFLAG, {STR} AS AC_NUMBER, {STR} AS CU_NAME, {STR} AS AC_LOCAL, {STR} AS BNK_ANNAME FROM DBO.FN_TAB_ACCMANAGE_FO_ITEMCURRBALANCE ( {STR}, {STR}, {STR}, {STR}, {##} ) ORDER BY TOTALFLAG ASC, BAL_OUT ASC;2;1550335;775167.50;10537;5268.50;1;0.50;500;250.00
[RPT_”    À»≈Õ“€ - Õ¿À»◊Õ€≈ Œœ≈–¿÷»»];2;320564901;160282450.50;10713468;5356734.00;494;247.00;300204;150102.00
SELECT CAST(FTI.IS_ENABLED AS BIT) AS ISENABLED, OBJECTPROPERTY(FTI.OBJECT_ID,{STR}) AS POPULATIONSTATUS, (CASE CHANGE_TRACKING_STATE WHEN {STR} THEN {##} WHEN {STR} THEN {##} ELSE {##} END) AS CHANGETRACKING FROM SYS.TABLES AS TBL INNER JOIN SYS.FULLTEXT_INDEXES AS FTI ON FTI.OBJECT_ID=TBL.OBJECT_ID WHERE (TBL.NAME={STRN} AND SCHEMA_NAME(TBL.SCHEMA_ID)={STRN});1;137517;137517.00;145;145.00;0;0.00;31;31.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ —Ã–_Ã¿–ÿ–”“»«¿÷»ﬂ œÀ¿“≈∆≈…_BAK_20070221();17;39936;2349.18;403;23.71;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ —Ã–_Ã¿–ÿ–”“»«¿÷»ﬂ œÀ¿“≈∆≈…_BAK_20070221();34;197115;5797.50;3999;117.62;10;0.29;154;4.53
BPP_DEPOSIT_MINCREDIT;41;2155613;52575.93;25886;631.37;0;0.00;1655;40.37
TAB_CREDIT_CARDS_TABLE_PREPARE;69;113108994;1639260.78;25549480;370282.32;20151;292.04;84056;1218.20
SELECT TOP {##} *, {STR} AS PARAMETER FROM FN_BPP_OPTIONS_TREE() CROSS JOIN FN_BPP_TRANSACTION_TREE({##}) CROSS JOIN CCARDS AS ACC WHERE ACC.IDENT = {##};43;12895217;299888.77;16308;379.26;8;0.19;11328;263.44
BS_OFFLINE_INVESTIGATION_QUERYDATE;48;1080091;22501.90;12754;265.71;139;2.90;596;12.42
BPP_TELEX_GET;566;16218788;28655.10;205161;362.48;420;0.74;7779;13.74
[RPT_Œ“◊≈“ œŒ  ŒÀ»◊≈—“¬”  À»≈Õ“Œ¬ 2];1;44119671;44119671.00;875846;875846.00;360;360.00;18328;18328.00
BPP_TRANS_ORDER_HEAD_TO_BRAN;24;555208393;23133683.04;23333772;972240.50;15341;639.21;167752;6989.67
SELECT IDENT, UP_IDENT, HASCHILD, OBJ_NAME, TR_FULL_NUMBER, OBJ_CODE, OBJ_IDENT, OBJ_FLAGS, OBJ_FLAGSHEAD, OBJ_REF_TYPE, OBJ_FIRST_TYPE FROM DBO.FN_BPP_TRANSACTION_TREE_VIEW({##}.{##}) ORDER BY IDENT;2804;79790811;28456.07;1264521;450.97;975;0.35;21606;7.71
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_NBKR_¬¿Àﬁ“Õ€… ¡¿À¿Õ—();6;396235;66039.17;12970;2161.67;37;6.17;218;36.33
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_Œ —Ã–_ ŒÕ“–ŒÀ‹ Œ—“¿“ Œ¬();4;12944;3236.00;130;32.50;3;0.75;0;0.00
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_Œ —Ã–_ ŒÕ“–ŒÀ‹ Œ—“¿“ Œ¬();2;2872;1436.00;30;15.00;0;0.00;0;0.00
BPP_DEPOSITCHECK_TRANSFORMERS;97;634199;6538.13;2219;22.88;0;0.00;110;1.13
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_œ–¡Œ 9 –¿«ƒ≈À();2;47030;23515.00;257;128.50;1;0.50;46;23.00
EXECUTE AS USER = REVERT;;2;151447;75723.50;101;50.50;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    ŒÀ»◊≈—“¬≈ÕÕ€… œŒ ¿«¿“≈À‹();1;3569;3569.00;113;113.00;0;0.00;15;15.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    ŒÀ»◊≈—“¬≈ÕÕ€… œŒ ¿«¿“≈À‹();2;39200;19600.00;331;165.50;0;0.00;32;16.00
BPP_TRANSACTION_TRANSHDR_UPDATE;52;3103573;59684.10;37205;715.48;62;1.19;2016;38.77
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_DEPOSITTERMOPERS({STR},{STR},{STR}, {##}, {##}) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;66;2654239;40215.74;20474;310.21;38;0.58;564;8.55
BPP_GETMINVALUEDATE;10315;16888559;1637.28;267323;25.92;12;0.00;15327;1.49
SELECT SERVERPROPERTY({STR}), SYSTEM_USER, DB_NAME(), USER_NAME();19;7114;374.42;0;0.00;0;0.00;0;0.00
BPP_CHECK_OPERATION_DATE;541;2504425;4629.25;133825;247.37;0;0.00;2358;4.36
BPP_SYNCHRO_IBT_FR_PSB_PRE;10;21534768;2153476.80;55000;5500.00;665;66.50;12107;1210.70
BPP_TRANSACTION_GET_FLAG;225;138369;614.97;1552;6.90;0;0.00;95;0.42
CREATE TABLE #TMP_SP_DB_VARDECIMAL_STORAGE_FORMAT (DBNAME SYSNAME NULL, VARDECIMAL_ENABLED VARCHAR({##}) NULL) IF EXISTS (SELECT O.OBJECT_ID FROM SYS.SYSTEM_OBJECTS O WHERE O.NAME={STRN}) BEGIN INSERT INTO #TMP_SP_DB_VARDECIMAL_STORAGE_FORMAT EXEC SYS.SP_DB_VARDECIMAL_STORAGE_FORMAT END SELECT DTB.NAME AS NAME, (SELECT COUNT(*) FROM MASTER.DBO.SYSPROCESSES P WHERE DTB.DATABASE_ID=P.DBID) AS ACTIVECONNECTIONS, DTB.COMPATIBILITY_LEVEL AS COMPATIBILITYLEVEL, DTB.CREATE_DATE AS CREATEDATE, CAST({##} AS FLOAT) AS DATASPACEUSAGE, CAST({##} AS BIT) AS DBOLOGIN, (SELECT TOP {##} DS.NAME FROM SYS.DATA_SPACES AS DS WHERE DS.IS_DEFAULT={##}) AS DEFAULTFILEGROUP, {STR} AS DEFAULTSCHEMA, DTB.DATABASE_ID AS ID, CAST({##} AS FLOAT) AS INDEXSPACEUSAGE, CAST(HAS_DBACCESS(DTB.NAME) AS BIT) AS ISACCESSIBLE, CAST({##} AS BIT) AS ISDBACCESSADMIN, CAST({##} AS BIT) AS ISDBBACKUPOPERATOR, CAST({##} AS BIT) AS ISDBDATAREADER, CAST({##} AS BIT) AS ISDBDATAWRITER, CAST({##} AS BIT) AS ISDBDDLADMIN, CAST({##} AS BIT) AS ISDBDENYDATAREADER, CAST({##} AS BIT) AS ISDBDENYDATAWRITER, CAST({##} AS BIT) AS ISDBOWNER, CAST({##} AS BIT) AS ISDBSECURITYADMIN, DTB.IS_FULLTEXT_ENABLED AS ISFULLTEXTENABLED, CAST(CASE WHEN DTB.NAME IN(LIST) THEN {##} ELSE DTB.IS_DISTRIBUTOR END AS BIT) AS ISSYSTEMOBJECT, (SELECT MAX(BACKUP_FINISH_DATE) FROM MSDB..BACKUPSET WHERE TYPE = {STR} AND DATABASE_NAME = DTB.NAME) AS LASTBACKUPDATE, (SELECT MAX(BACKUP_FINISH_DATE) FROM MSDB..BACKUPSET WHERE TYPE = {STR} AND DATABASE_NAME = DTB.NAME) AS LASTLOGBACKUPDATE, SUSER_SNAME(DTB.OWNER_SID) AS OWNER, NULL AS PRIMARYFILEPATH, DTB.IS_PUBLISHED*{##}+DTB.IS_SUBSCRIBED*{##}+DTB.IS_MERGE_PUBLISHED*{##} AS REPLICATIONOPTIONS, CAST({##} AS FLOAT) AS SIZE, CAST({##} AS FLOAT) AS SPACEAVAILABLE, CASE WHEN DATABASEPROPERTY(DTB.NAME,{STR}) IS NULL THEN {BS} ELSE {##} END | CASE WHEN {##} = DTB.IS_IN_STANDBY THEN {BS} ELSE {##} END | CASE WHEN {##} = DTB.IS_CLEANLY_SHUTDOWN THEN {BS} ELSE {##} END | CASE DTB.STATE WHEN {##} THEN {BS} WHEN {##} THEN {BS} WHEN {##} THEN {BS} WHEN {##} THEN {BS} WHEN {##} THEN {BS} WHEN {##} THEN {BS} ELSE {##} END AS STATUS, {STR} AS USERNAME, CAST(CHARINDEX({STRN}, CAST(DATABASEPROPERTYEX(DTB.NAME, {STR}) AS NVARCHAR({##}))) AS BIT) AS CASESENSITIVE, DTB.COLLATION_NAME AS COLLATION, CAST(( CASE LOWER(CONVERT( NVARCHAR({##}), DATABASEPROPERTYEX(DTB.NAME, {STR}))) WHEN {STR} THEN {##} ELSE {##} END) AS BIT) AS ISUPDATEABLE, CAST(DATABASEPROPERTYEX(DTB.NAME, {STR}) AS INT) AS VERSION, DTB.IS_AUTO_CREATE_STATS_ON AS AUTOCREATESTATISTICSENABLED, DTB.IS_AUTO_UPDATE_STATS_ON AS AUTOUPDATESTATISTICSENABLED, DRS.DATABASE_GUID AS DATABASEGUID, ISNULL(DB_NAME(DTB.SOURCE_DATABASE_ID), {STRN}) AS DATABASESNAPSHOTBASENAME, ISNULL((SELECT TOP {##} FTC.NAME FROM SYS.FULLTEXT_CATALOGS AS FTC WHERE FTC.IS_DEFAULT={##}),{STRN}) AS DEFAULTFULLTEXTCATALOG, CAST(ISNULL(DTB.SOURCE_DATABASE_ID, {##}) AS BIT) AS ISDATABASESNAPSHOT, CAST((SELECT COUNT({##}) FROM SYS.DATABASES DTBMIR WHERE DTBMIR.SOURCE_DATABASE_ID = DTB.DATABASE_ID) AS BIT) AS ISDATABASESNAPSHOTBASE, {##} AS ISMAILHOST, CAST(CASE WHEN DMI.MIRRORING_PARTNER_NAME IS NULL THEN {##} ELSE {##} END AS BIT) AS ISMIRRORINGENABLED, CASE WHEN VARDEC.VARDECIMAL_ENABLED = {STR} THEN CAST({##} AS BIT) ELSE CAST({##} AS BIT) END AS ISVARDECIMALSTORAGEFORMATENABLED, DTB.LOG_REUSE_WAIT AS LOGREUSEWAITSTATUS, DMI.MIRRORING_FAILOVER_LSN AS MIRRORINGFAILOVERLOGSEQUENCENUMBER, DMI.MIRRORING_GUID AS MIRRORINGID, DMI.MIRRORING_PARTNER_NAME AS MIRRORINGPARTNER, DMI.MIRRORING_PARTNER_INSTANCE AS MIRRORINGPARTNERINSTANCE, DMI.MIRRORING_ROLE AS MIRRORINGROLE, DMI.MIRRORING_ROLE_SEQUENCE AS MIRRORINGROLESEQUENCE, COALESCE(DMI.MIRRORING_SAFETY_LEVEL + {##}, {##}) AS MIRRORINGSAFETYLEVEL, DMI.MIRRORING_SAFETY_SEQUENCE AS MIRRORINGSAFETYSEQUENCE, COALESCE(DMI.MIRRORING_STATE + {##}, {##}) AS MIRRORINGSTATUS, DMI.MIRRORING_WITNESS_NAME AS MIRRORINGWITNESS, COALESCE(DMI.MIRRORING_WITNESS_STATE + {##}, {##}) AS MIRRORINGWITNESSSTATUS, DRS.RECOVERY_FORK_GUID AS RECOVERYFORKGUID, DTB.SERVICE_BROKER_GUID AS SERVICEBROKERGUID, DTB.NAME AS DATABASENAME, DTB.NAME AS DATABASENAME2 FROM MASTER.SYS.DATABASES AS DTB LEFT OUTER JOIN SYS.MASTER_FILES AS DF ON DF.DATABASE_ID = DTB.DATABASE_ID AND {##}=DF.DATA_SPACE_ID AND {##} = DF.FILE_ID LEFT OUTER JOIN SYS.DATABASE_RECOVERY_STATUS AS DRS ON DRS.DATABASE_ID = DTB.DATABASE_ID LEFT OUTER JOIN SYS.DATABASE_MIRRORING AS DMI ON DMI.DATABASE_ID = DTB.DATABASE_ID LEFT OUTER JOIN #TMP_SP_DB_VARDECIMAL_STORAGE_FORMAT AS VARDEC ON DTB.NAME = VARDEC.DBNAME WHERE (DTB.NAME={STRN}) DROP TABLE #TMP_SP_DB_VARDECIMAL_STORAGE_FORMAT;2;1086300;543150.00;8309;4154.50;13;6.50;688;344.00
BPP_NOSTRO_OPERATION_CHECK_CONFIRM;774;183043;236.49;4666;6.03;0;0.00;125;0.16
SET SHOWPLAN_ALL OFF;1;74;74.00;0;0.00;0;0.00;0;0.00
APP_LOGOFF;70;48876;698.23;263;3.76;0;0.00;0;0.00
SELECT MIN(IDENT), SWF_USER FROM DBO.FN_TAB_TELEX_MESSAGES ( {STR}, {STR}, {##}, {##}, {##}, {STR}, {STR}, {##}, {STR} ) GROUP BY SWF_USER ORDER BY {##};157;13006438;82843.55;181450;1155.73;78;0.50;5842;37.21
[DOC_INCASSO_REQUEST];202;20658917;102271.87;553253;2738.88;1304;6.46;16222;80.31
BPP_TH_PURPOSE_BY_CORRESPONDENCE_GET;95;643450;6773.16;9746;102.59;11;0.12;437;4.60
[DOC_BDDOPERATIONSINFOLDER];18;2028938;112718.78;337344;18741.33;2;0.11;2593;144.06
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_WRONG_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {##}, {##}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, TRNUMBER ASC;4;237990;59497.50;23515;5878.75;56;14.00;188;47.00
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY TRDEBIT DESC;17;332465;19556.76;79685;4687.35;62;3.65;293;17.24
BPP_ACCRUAL_LOANS_CALC_V2;121;97916673;809228.70;619338;5118.50;134;1.11;66513;549.69
BS_ADMIN_GET_USERBYCODE;21;785040;37382.86;9947;473.67;133;6.33;434;20.67
[RPT_Œ —Ã–_Ã¿–ÿ–”“»«¿÷»ﬂ œÀ¿“≈∆≈…_BAK_20070221];9;30815087;3423898.56;4189893;465543.67;60;6.67;20968;2329.78
[RPT_Œœ≈–Œ —–≈ƒÕ»≈ Œ¡Œ–Œ“€ » Œ—“¿“ » œŒ  À»≈Õ“— »Ã —◊≈“¿Ã];2;77521856;38760928.00;840577;420288.50;11;5.50;102283;51141.50
BPP_CUSTOMER_TOTALS;7;25660;3665.71;415;59.29;0;0.00;31;4.43
SELECT IDENT, NAME, NAME AS CU_NAME, ACCOUNT, NAME AS AC_NUMBER, {STR} AS AC_LOCAL, {STR} AS BNK_ANNAME, ACCOUNT AS SEARCHBY, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_CASHPAYMENTSSYSTEMS ( ) ORDER BY NAME ASC;1;52233;52233.00;253;253.00;0;0.00;32;32.00
EXEC @P#=BPP_EPAYMENT_TRANS_CC_PAYMENT_LIST @P#,@P#;2;50440933;25220466.50;685647;342823.50;4;2.00;17922;8961.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ —“¿“»—“» ¿ œŒ  À»≈Õ“¿Ã();2;35926;17963.00;492;246.00;0;0.00;16;8.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ —“¿“»—“» ¿ œŒ  À»≈Õ“¿Ã();1;12003;12003.00;111;111.00;1;1.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ Õ¿◊»—À≈Õ»ﬂ œŒ  ƒ≈œŒ«»“¿Ã (≈∆≈ƒÕ≈¬ÕŒ)();4;89009;22252.25;839;209.75;2;0.50;63;15.75
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ Õ¿◊»—À≈Õ»ﬂ œŒ  ƒ≈œŒ«»“¿Ã (≈∆≈ƒÕ≈¬ÕŒ)();2;196346;98173.00;223;111.50;1;0.50;16;8.00
BPP_TELEX_TAGS_READ;45;1148408;25520.18;2058;45.73;0;0.00;421;9.36
[RPT_”¿ Œ“◊≈“ œŒ  ŒÃ»——»ﬂÃ];3;61464440;20488146.67;21397031;7132343.67;2;0.67;111124;37041.33
SELECT * FROM BPP_ACCOUNTS WHERE IDENT = {##};224;66043;294.83;687;3.07;0;0.00;95;0.42
SELECT OP1.IDENT AS IDENT, OP1.NMB AS NMB, OP1.TYPE AS TYPE, OP1.ACCOUNT AS ACCOUNT, OP1.CURRENCY AS CURRENCY, OP1.DEBIT AS DEBIT, OP1.CREDIT AS CREDIT, OP2.ACCOUNT + {STR} +OP1.NARRATIVE AS NARRATIVE, OP1.VALUEDATE AS VALUEDATE, OP1.TRSUBNMB*{##}+OP1.TROPNMB AS SORTNMB FROM ( SELECT OPERS.IDENT AS IDENT, OPERS.TW_IDENT AS TW_IDENT, CONVERT(VARCHAR,TH.TH_NUMBER)+{STR}+ CONVERT(VARCHAR,TH.TH_SEQ_NMB)+{STR}+ CONVERT(VARCHAR,OPERS.OP_SEQ_NMB) AS NMB, OPERS.OP_TYPE AS TYPE, {STR}+DBO.FN_TAB_ACCOUNT ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, VM.AN_PATH, VM.AN_MONIKER, CUSTS.CU_CODE, ACCS.AC_NUMBER, ACCS.AC_KIND, NULL )+ {STR}+DBO.FN_TAB_NAME ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, VM.AN_PATH, VM.AN_NAME_RUS, VM.AN_NAME_ENG, CUSTS.CU_NAME_RUS, CUSTS.CU_NAME_ENG, BANKS.BANNAME ) AS ACCOUNT, CURR.CURRENCY AS CURRENCY, OPERS.OP_DEBIT AS DEBIT, OPERS.OP_CREDIT AS CREDIT, OPERS.OP_NARRATIVE AS NARRATIVE, OPERS.OP_VALUE_DATE AS VALUEDATE, TH.TH_SEQ_NMB AS TRSUBNMB, OPERS.OP_SEQ_NMB AS TROPNMB FROM DBO.BPP_TR_OPERS AS OPERS INNER JOIN DBO.BPP_ACCOUNTS AS ACCS ON OPERS.AC_IDENT = ACCS.IDENT INNER JOIN DBO.BPP_TR_HEADS AS TH ON OPERS.TH_IDENT = TH.IDENT INNER JOIN DBO.CURRENCY AS CURR ON ACCS.CURR_IDENT = CURR.IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUSTS ON ACCS.CU_IDENT = CUSTS.IDENT INNER JOIN DBO.BANKS AS BANKS ON ACCS.BN_IDENT = BANKS.IDENT LEFT JOIN DBO.VADE_MECUM AS VM INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON VM.IDENT = OWN.AN_IDENT ON ACCS.IDENT = OWN.AC_IDENT LEFT JOIN DBO.BPP_OPTIONS ON BPP_OPTIONS.DELETED={##} WHERE (OPERS.TH_IDENT = {##}) ) AS OP1 INNER JOIN ( SELECT OPERS.IDENT AS IDENT, OPERS.TW_IDENT AS TW_IDENT, CONVERT(VARCHAR,TH.TH_NUMBER)+{STR}+ CONVERT(VARCHAR,TH.TH_SEQ_NMB)+{STR}+ CONVERT(VARCHAR,OPERS.OP_SEQ_NMB) AS NMB, OPERS.OP_TYPE AS TYPE, {STR}+DBO.FN_TAB_ACCOUNT ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, VM.AN_PATH, VM.AN_MONIKER, CUSTS.CU_CODE, ACCS.AC_NUMBER, ACCS.AC_KIND, NULL ) AS ACCOUNT, CURR.CURRENCY AS CURRENCY, OPERS.OP_VALUE_DATE AS VALUEDATE, TH.TH_SEQ_NMB AS TRSUBNMB, OPERS.OP_SEQ_NMB AS TROPNMB FROM DBO.BPP_TR_OPERS AS OPERS INNER JOIN DBO.BPP_ACCOUNTS AS ACCS ON OPERS.AC_IDENT = ACCS.IDENT INNER JOIN DBO.BPP_TR_HEADS AS TH ON OPERS.TH_IDENT = TH.IDENT INNER JOIN DBO.CURRENCY AS CURR ON ACCS.CURR_IDENT = CURR.IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUSTS ON ACCS.CU_IDENT = CUSTS.IDENT INNER JOIN DBO.BANKS AS BANKS ON ACCS.BN_IDENT = BANKS.IDENT LEFT JOIN DBO.VADE_MECUM AS VM INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON VM.IDENT = OWN.AN_IDENT ON ACCS.IDENT = OWN.AC_IDENT LEFT JOIN DBO.BPP_OPTIONS ON BPP_OPTIONS.DELETED={##} WHERE (OPERS.TH_IDENT = {##}) ) AS OP2 ON OP1.TW_IDENT = OP2.IDENT ORDER BY SORTNMB ASC;3421;1138601109;332826.98;1486152;434.42;1297;0.38;846040;247.31
BPP_PAYMENT_CODE_CHECK;7;2386564;340937.71;60322;8617.43;0;0.00;1187;169.57
APP_ORDER_RENEW;6;218885;36480.83;3772;628.67;14;2.33;31;5.17
BS_ADMIN_GET_USERINFOBYCODE;1;222120;222120.00;1442;1442.00;6;6.00;172;172.00
BPP_CORRSCRPTITEM_GET;2;60118;30059.00;254;127.00;0;0.00;48;24.00
BPP_USER_DATA_GET;971;3765832;3878.30;238417;245.54;0;0.00;3131;3.22
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_VERIFY_BALANCES();2;20582;10291.00;212;106.00;2;1.00;15;7.50
SP_DDOPEN;23017;668309167;29035.46;5488537;238.46;21601;0.94;496683;21.58
APP_MESSAGING_GET_INBOX;263;54812900;208414.07;7251565;27572.49;28;0.11;24158;91.86
BPP_TELEX_REQUEST_NEW;4;413608;103402.00;854;213.50;6;1.50;186;46.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_APO_DEALS_Œ–ƒ≈–();6;42142;7023.67;355;59.17;0;0.00;16;2.67
APP_SIGNIMAGE_EDIT;66;5281505;80022.80;69794;1057.48;139;2.11;2470;37.42
BPP_EPAYMENT_SETMESSAGETRANS;311;358088;1151.41;3724;11.97;3;0.01;188;0.60
SELECT IDENT, TAG_NAME, NS_MONIKER AS TAG_VALUE, NS_PATH, NS_MONIKER, SQL_EXPR FROM #SCRIPT_TAGS;2;5610;2805.00;34;17.00;2;1.00;16;8.00
BPP_ACCOUNT_ATTRIBUTES;574;24317966;42365.79;421297;733.97;46;0.08;17184;29.94
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_APO_DEALS();4;22848;5712.00;143;35.75;0;0.00;0;0.00
SELECT IDENT, ACC_CODE, ACC_NAME, ACC_CODE AS AC_NUMBER, {STR} AS AC_LOCAL, ACC_NAME AS CU_NAME, {STR} AS BNK_ANNAME, SEARCHBY, FULL_PATH, OBJ_CATEGORY, ISOPENACC FROM DBO.FN_TAB_ACCMANAGE_BK_CHILD_ACCOUNTS ( {STR}, {STR}, {##}, {##} ) ORDER BY ACC_CODE ASC;161;6535553;40593.50;49227;305.76;133;0.83;3963;24.61
SELECT IDENT, CU_CODE, CU_CODE AS AC_NUMBER, {STR} AS AC_LOCAL, CU_NAME, BALANCE, CU_CODE AS SEARCHBY, FLAG, BNK_ANNAME, FULL_PATH, OBJ_CATEGORY, OWNOFFICE, ISOPENACC FROM DBO.FN_TAB_ACCMANAGE_OWNS ( {STR}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, CU_CODE ASC;146;603014300;4130234.93;13252971;90773.77;2736;18.74;399459;2736.02
[RPT_APO_DEALS];3;116941956;38980652.00;4244235;1414745.00;3782;1260.67;296107;98702.33
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRVALDATE, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, DEBIT, CREDIT FROM DBO.FN_TAB_CREDIT_CARD_OPERATIONS ( {##}, {STR}, {STR}, {STR}, {##} ) ORDER BY CONVERT(VARCHAR,TRVALDATE,{##})+CAST(IDENT AS VARCHAR) DESC;48;2408289;50172.69;59616;1242.00;17;0.35;1630;33.96
[RPT_Œœ≈–Œ  ¿——Œ¬€≈ Œœ≈–¿÷»» Ã≈Õ≈ƒ∆≈–¿];26;286672521;11025866.19;24838480;955326.15;464;17.85;138976;5345.23
EXEC @P#=TAB_CLLIST_BOX_PROC;1;7786;7786.00;31;31.00;0;0.00;16;16.00
BPP_ISUNIQUE_CARDNMB_AND_HOLDER;41;151667;3699.20;183;4.46;0;0.00;47;1.15
EXEC @P#=TAB_CARDCURRENCY_BOX_PROC;24;765222;31884.25;6532;272.17;10;0.42;562;23.42
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    ¿——Œ¬€≈ Œœ≈–¿÷»»();6;66872;11145.33;860;143.33;3;0.50;47;7.83
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    ¿——Œ¬€≈ Œœ≈–¿÷»»();3;38399;12799.67;332;110.67;2;0.67;15;5.00
BPP_TRANS_ORDER_HEAD_FR_BRAN;6;629246;104874.33;1021;170.17;55;9.17;172;28.67
USE AUBBPPDATABASE;13;3609;277.62;0;0.00;0;0.00;0;0.00
BPP_TELEX_UPDATE;15;527206;35147.07;3157;210.47;23;1.53;251;16.73
SELECT OP1.IDENT AS IDENT, OP1.NMB AS NMB, OP1.TYPE AS TYPE, OP1.ACCOUNT AS ACCOUNT, OP1.CURRENCY AS CURRENCY, OP1.DEBIT AS DEBIT, OP1.CREDIT AS CREDIT, OP2.ACCOUNT + {STR} +OP1.NARRATIVE AS NARRATIVE, OP1.VALUEDATE AS VALUEDATE, OP1.TRSUBNMB*{##}+OP1.TROPNMB AS SORTNMB FROM ( SELECT OPERS.IDENT AS IDENT, OPERS.TW_IDENT AS TW_IDENT, CONVERT(VARCHAR,TH.TH_NUMBER)+{STR}+ CONVERT(VARCHAR,TH.TH_SEQ_NMB)+{STR}+ CONVERT(VARCHAR,OPERS.OP_SEQ_NMB) AS NMB, OPERS.OP_TYPE AS TYPE, {STR}+DBO.FN_TAB_ACCOUNT ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, VM.AN_PATH, VM.AN_MONIKER, CUSTS.CU_CODE, ACCS.AC_NUMBER, ACCS.AC_KIND, NULL )+ {STR}+DBO.FN_TAB_NAME ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, VM.AN_PATH, VM.AN_NAME_RUS, VM.AN_NAME_ENG, CUSTS.CU_NAME_RUS, CUSTS.CU_NAME_ENG, BANKS.BANNAME ) AS ACCOUNT, CURR.CURRENCY AS CURRENCY, OPERS.OP_DEBIT AS DEBIT, OPERS.OP_CREDIT AS CREDIT, OPERS.OP_NARRATIVE AS NARRATIVE, OPERS.OP_VALUE_DATE AS VALUEDATE, TH.TH_SEQ_NMB AS TRSUBNMB, OPERS.OP_SEQ_NMB AS TROPNMB FROM DBO.BPP_TR_OPERS AS OPERS INNER JOIN DBO.BPP_ACCOUNTS AS ACCS ON OPERS.AC_IDENT = ACCS.IDENT INNER JOIN DBO.BPP_TR_HEADS AS TH ON OPERS.TH_IDENT = TH.IDENT INNER JOIN DBO.CURRENCY AS CURR ON ACCS.CURR_IDENT = CURR.IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUSTS ON ACCS.CU_IDENT = CUSTS.IDENT INNER JOIN DBO.BANKS AS BANKS ON ACCS.BN_IDENT = BANKS.IDENT LEFT JOIN DBO.VADE_MECUM AS VM INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON VM.IDENT = OWN.AN_IDENT ON ACCS.IDENT = OWN.AC_IDENT LEFT JOIN DBO.BPP_OPTIONS ON BPP_OPTIONS.DELETED={##} WHERE (OPERS.TH_IDENT = {##}) ) AS OP1 INNER JOIN ( SELECT OPERS.IDENT AS IDENT, OPERS.TW_IDENT AS TW_IDENT, CONVERT(VARCHAR,TH.TH_NUMBER)+{STR}+ CONVERT(VARCHAR,TH.TH_SEQ_NMB)+{STR}+ CONVERT(VARCHAR,OPERS.OP_SEQ_NMB) AS NMB, OPERS.OP_TYPE AS TYPE, {STR}+DBO.FN_TAB_ACCOUNT ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, VM.AN_PATH, VM.AN_MONIKER, CUSTS.CU_CODE, ACCS.AC_NUMBER, ACCS.AC_KIND, NULL ) AS ACCOUNT, CURR.CURRENCY AS CURRENCY, OPERS.OP_VALUE_DATE AS VALUEDATE, TH.TH_SEQ_NMB AS TRSUBNMB, OPERS.OP_SEQ_NMB AS TROPNMB FROM DBO.BPP_TR_OPERS AS OPERS INNER JOIN DBO.BPP_ACCOUNTS AS ACCS ON OPERS.AC_IDENT = ACCS.IDENT INNER JOIN DBO.BPP_TR_HEADS AS TH ON OPERS.TH_IDENT = TH.IDENT INNER JOIN DBO.CURRENCY AS CURR ON ACCS.CURR_IDENT = CURR.IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUSTS ON ACCS.CU_IDENT = CUSTS.IDENT INNER JOIN DBO.BANKS AS BANKS ON ACCS.BN_IDENT = BANKS.IDENT LEFT JOIN DBO.VADE_MECUM AS VM INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON VM.IDENT = OWN.AN_IDENT ON ACCS.IDENT = OWN.AC_IDENT LEFT JOIN DBO.BPP_OPTIONS ON BPP_OPTIONS.DELETED={##} WHERE (OPERS.TH_IDENT = {##}) ) AS OP2 ON OP1.TW_IDENT = OP2.IDENT ORDER BY ACCOUNT ASC;4;1382442;345610.50;1962;490.50;2;0.50;1186;296.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ_¬€ƒ¿ÕÕ€≈  –≈ƒ»“€();3;1450208;483402.67;290;96.67;0;0.00;16;5.33
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ_¬€ƒ¿ÕÕ€≈  –≈ƒ»“€();6;450645;75107.50;1338;223.00;2;0.33;140;23.33
BPP_MQ_OPENQUEUEBYUSER;680;691028;1016.22;7620;11.21;0;0.00;265;0.39
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TAB_CREDIT_CARDS_TABLE END;24;198171;8257.13;7874;328.08;10;0.42;154;6.42
BPP_EPAYMENT_CHECKMESSAGEPROCESS;67;14785;220.67;207;3.09;0;0.00;16;0.24
BPP_GETLOANPENALTYPARAMS;70;3530546;50436.37;43731;624.73;0;0.00;2420;34.57
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TR2SIGN, TRSTORNOFLAG, TRWAITFLAG, TRSECSIGNFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CU_CODE, CU_NAME, TH_CODE, DEBIT, CREDIT, OPENDATE, CLOSEDATE, CURRENCY FROM DBO.FN_TAB_INVESTIGATIONS ( {##}.{##}, {STR}, {STR}, {STR} ) WHERE CU_CODE = CASE WHEN {STR} = {STR} THEN CU_CODE ELSE {STR} END ORDER BY CONVERT(VARCHAR,TRVALDATE,{##})+CAST(IDENT AS VARCHAR) DESC;41;30427658;742138.00;2072963;50560.07;93;2.27;6372;155.41
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    À»≈Õ“€ - ¬Õ≈ÿÕ»≈ œÀ¿“≈∆»();1;2676;2676.00;112;112.00;0;0.00;15;15.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    À»≈Õ“€ - ¬Õ≈ÿÕ»≈ œÀ¿“≈∆»();2;15912;7956.00;150;75.00;0;0.00;16;8.00
APP_EXCHCNTR_UNDOCHECKOUT;41;23323;568.85;112;2.73;0;0.00;0;0.00
SELECT OPERS.IDENT, BPP_OFFICES.OF_CODE AS OFFICE, DBO.FN_TAB_NAME ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, OAT.AN_PATH, OAT.AN_NAME_RUS, OAT.AN_NAME_ENG, CUSTS.CU_NAME_RUS, CUSTS.CU_NAME_ENG, BANKS.BANNAME ) AS NAME, DBO.FN_TAB_ACCOUNT ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, OAT.AN_PATH, OAT.AN_MONIKER, CUSTS.CU_CODE, ACCS.AC_NUMBER, ACCS.AC_KIND, C2.CURRENCY ) AS ACCOUNT, OPERS.OP_TYPE AS TRTYPE, CONVERT(VARCHAR,HEADS.TH_NUMBER)+{STR}+CONVERT(VARCHAR,HEADS.TH_SEQ_NMB)+{STR}+CONVERT(VARCHAR,OPERS.OP_SEQ_NMB) AS TRNUMBER, OPERS.OP_VALUE_DATE AS TRVALDATE, OPERS.OP_DEBIT AS TRDEBIT, OPERS.OP_CREDIT AS TRCREDIT, OPERS.OP_NARRATIVE AS TRBNAME, OPERS.TH_IDENT AS TH_IDENT, HEADS.TH_NUMBER AS TH_NUMBER, HEADS.TH_SEQ_NMB AS TH_SEQ_NMB, HEADS.TH_DETAILS AS TH_DETAILS FROM DBO.BPP_TR_OPERS AS OPERS INNER JOIN DBO.BPP_TR_HEADS AS HEADS ON OPERS.TH_IDENT = HEADS.IDENT INNER JOIN DBO.BPP_ACCOUNTS AS ACCS ON OPERS.AC_IDENT = ACCS.IDENT INNER JOIN DBO.CURRENCY AS C1 ON ACCS.CURR_IDENT = C1.IDENT INNER JOIN DBO.CURRENCY AS C2 ON C1.ORIGINAL = C2.ORIGINAL AND OPERS.OP_VALUE_DATE BETWEEN C2.CUR_START_DATE AND C2.CUR_STOP_DATE INNER JOIN DBO.BPP_CUSTOMERS AS CUSTS ON ACCS.CU_IDENT = CUSTS.IDENT INNER JOIN DBO.BANKS ON ACCS.BN_IDENT = BANKS.IDENT LEFT JOIN DBO.BPP_OFFICES ON ACCS.OF_IDENT = BPP_OFFICES.IDENT LEFT JOIN DBO.VADE_MECUM AS OAT INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON OAT.IDENT = OWN.AN_IDENT ON ACCS.IDENT = OWN.AC_IDENT CROSS JOIN DBO.BPP_OPTIONS WHERE (OPERS.OP_WAIT_FLAG = {STR}) AND (HEADS.TH_STORNO_FLAG <> {STR}) AND (HEADS.TH_PAY_MODE_FLAG <> {STR}) AND (HEADS.TH_SIGNATURE_FLAG <> {STR}) AND (OPERS.OP_CREDIT > CASE WHEN {##} = {##} THEN {##} ELSE {##} END) AND (OPERS.OP_TYPE LIKE {STR}) ORDER BY CONVERT(VARCHAR,OPERS.OP_VALUE_DATE,{##})+CAST(OPERS.IDENT AS VARCHAR) DESC OPTION (FAST {##});1;10033365;10033365.00;320938;320938.00;22;22.00;5250;5250.00
APP_MESSAGING_GET_OUTBOX;1;1963290;1963290.00;31147;31147.00;1162;1162.00;1156;1156.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_œ–¡Œ 26 –¿«ƒ≈À();6;50134;8355.67;360;60.00;1;0.17;15;2.50
BPP_SYNCHRO_EXPORT_GET;91;13842348;152113.71;755581;8303.09;431;4.74;5129;56.36
BS_ADMIN_GET_USERGROUPBYCODE;31;62223;2007.19;474;15.29;0;0.00;16;0.52
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ  ŒÃ»——»ŒÕÕ€≈ œŒ VIP 2();4;260858;65214.50;255;63.75;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ  ŒÃ»——»ŒÕÕ€≈ œŒ VIP 2();2;123297;61648.50;216;108.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_CCARDS_œŒœŒÀÕ≈Õ»≈  ¿–“Œ◊≈ ();10;61340;6134.00;643;64.30;1;0.10;48;4.80
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_CCARDS_œŒœŒÀÕ≈Õ»≈  ¿–“Œ◊≈ ();20;181860;9093.00;1220;61.00;8;0.40;77;3.85
UPDATE BPP_SYNCHRONIZATION_OUTBOX SET OB_DELAY_LEVEL = {##}, OB_MESSAGE = REPLACE(OB_MESSAGE, {STR}, {STR}) WHERE OB_OPEN_DATE >= {STR} AND OB_QUEUE_NAME = {STR} AND OB_FLAG = {STR};2;177567;88783.50;6740;3370.00;2;1.00;110;55.00
SELECT IDENT, IDENT AS TH_IDENT, CAST(TH_NUMBER AS VARCHAR({##})) +{STR}+ CAST(TH_SEQ_NMB AS VARCHAR({##})) AS TRNUMBER, TH_ORDER_DATE AS TRDATE, TH_CODE AS TRCODE, TH_DETAILS AS TRDETAILS, TH_SIGN_1 AS AUTHOR, AC_KIND, AI_START_DATE, AI_INTEREST, AI_YTM_BASIS, AI_PERIOD, AC_MATURITY_DATE, OF_NAME, AI_STOP, AI_COUNT FROM DBO.FN_TAB_ACC_HISTORY({STR}) WHERE TH_CODE IN(LIST) ORDER BY AI_START_DATE ASC;76;5534270;72819.34;56525;743.75;40;0.53;3486;45.87
SELECT IDENT, SWIFT, BANNAME, BANLKCODE, BANLOCATN, NOBALANCE, NOISOPENACC, NOISEMPTY, DOC_SIGN_FINISH FROM #TAB_BANKS_TABLE ORDER BY BANLOCATN ASC;2;5432;2716.00;601;300.50;4;2.00;0;0.00
BPP_GET_DAYSDIFF_CUST;2642;854608;323.47;140810;53.30;0;0.00;674;0.26
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ Œ»Ã– ¿Õ¿À»« ¡¿Õ Œ¬();4;18689;4672.25;185;46.25;0;0.00;31;7.75
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_NUMBER AS AC_SUBACC, BALANCE, RTRIM(CU_CODE) + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS SEARCHBY, RTRIM(CU_CODE) + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_OWN_ACCOUNTS ( {STR}, {STR}, {##}, {##} ) ORDER BY FLAG ASC, BALANCE ASC;1;470724;470724.00;3143;3143.00;0;0.00;250;250.00
[RPT_Œœ≈–Œ  À»–»Õ√Œ¬€… ‘¿…À];1;539358;539358.00;5207;5207.00;0;0.00;531;531.00
[RPT_œ–¡Œ 9 –¿«ƒ≈À];1;23278744;23278744.00;1088032;1088032.00;2;2.00;12969;12969.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT__ÿ“–»’- Œƒ();20;63200;3160.00;596;29.80;2;0.10;16;0.80
BPP_ADJUST_VALUE_DATE;2271;5596573;2464.37;41059;18.08;0;0.00;5021;2.21
EXEC @P#=TAB_BRANCHES_BOX_PROC;24;541454;22560.58;12402;516.75;9;0.38;237;9.88
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, OF_CODE, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_CURRENT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CREDIT ASC;17;2905783;170928.41;184752;10867.76;642;37.76;1968;115.76
BPP_TRANSACTION_STATUS_SET;4;94033;23508.25;387;96.75;33;8.25;62;15.50
[RPT_Œœ≈–Œ  ŒÕ¬≈–“¿÷»»];2;107696525;53848262.50;2864845;1432422.50;1431;715.50;38672;19336.00
[DOC_CASHWITHDRAWREPT];123;5295927;43056.32;80441;653.99;808;6.57;3544;28.81
SELECT DTB.NAME AS NAME FROM MASTER.DBO.SYSDATABASES AS DTB ORDER BY NAME ASC;1;37011;37011.00;7;7.00;0;0.00;16;16.00
BPP_TELEX_GET_ATTRS;372;3874280;10414.73;80133;215.41;0;0.00;3594;9.66
BS_OFFLINE_GET_STORAGE;745;19048201;25568.06;313527;420.84;3982;5.34;14169;19.02
BPP_ACCOUNT_UPDATE;18;596694;33149.67;2259;125.50;139;7.72;204;11.33
BPP_TRANSACTIONS_MORE_DATE;15;175243;11682.87;1324;88.27;0;0.00;62;4.13
DECLARE @VALUEDATE DATETIME SELECT @VALUEDATE = CONVERT(DATETIME, @MINVALUEDATE, {##}) EXEC EXCHCTRL_SIMILARITY_INSERT @CU_CODE, @VALUEDATE, @KEY_VALUE, @DETAILS, @ORDER_XML;550;8211320;14929.67;73339;133.34;162;0.29;6383;11.61
BPP_DEPOSIT_MINTHRESHOLD;3;465664;155221.33;2230;743.33;0;0.00;342;114.00
SELECT BPP_TRORDERS.IDENT, (CASE TRO_STATUS WHEN {##} THEN (CASE WHEN TH_IDENT IS NULL THEN {STR} ELSE CAST(BPP_TR_HEADS.TH_NUMBER AS VARCHAR) + {STR} + CAST(BPP_TR_HEADS.TH_SEQ_NMB AS VARCHAR) END) WHEN {##} THEN (CASE WHEN TH_IDENT IS NULL THEN {STR} ELSE CAST(BPP_TR_HEADS.TH_NUMBER AS VARCHAR) + {STR} + CAST(BPP_TR_HEADS.TH_SEQ_NMB AS VARCHAR) END) ELSE {STR} END) AS TRNUM, DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) AS DOCNMB, (CASE WHEN ISDATE(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) = {##} THEN NULL ELSE CONVERT(DATETIME, DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}), {##}) END) AS VALUEDATE, CONVERT(NUMERIC({##},{##}), ISNULL( CASE ISNUMERIC(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) WHEN {##} THEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) ELSE NULL END, CASE ISNUMERIC(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) WHEN {##} THEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) ELSE NULL END ) ) AS AMOUNT, CASE WHEN NOT ( DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) IS NULL OR RTRIM(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) = {STR}) THEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) WHEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) IS NULL OR RTRIM(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) = {STR} THEN CASE WHEN NOT ( DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) IS NULL OR RTRIM(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) = {STR}) THEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) ELSE (SELECT TOP {##} BASE CURRENCY FROM DBO.BPP_OPTIONS WHERE DELETED = {##}) END ELSE (SELECT TOP {##} BASE CURRENCY FROM DBO.BPP_OPTIONS WHERE DELETED = {##}) END AS CURR, DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) AS CODE, DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) AS NM, BPP_EPAYFILE.FIL_NAME AS FL, CASE TRO_STATUS WHEN {##} THEN {##} WHEN {##} THEN {##} WHEN {##} THEN {##} WHEN {##} THEN {##} ELSE {##} END AS MES_ISPROCESSED, CNT_IDENT, PRT_IDENT, BPP_TR_HEADS.TH_NUMBER AS TRNUMBER, CASE WHEN (CNT_IDENT <> {##} AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLOROWNDEBIT, CASE WHEN (CNT_IDENT IS NULL AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORDEBITOUR, CASE WHEN (CNT_IDENT <> {##} AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORCREDIT, CASE WHEN (CNT_IDENT IS NULL AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORCREDITOUR, CASE WHEN (CNT_IDENT <> {##} AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORDEBITCONFIRMATION, CASE WHEN (CNT_IDENT IS NULL AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORCONFIRMATIONOUR, CASE WHEN (CNT_IDENT IS NULL AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLOROURNOSTRO, CASE WHEN (TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORUNKNOWN, CASE WHEN (TRO_STATUS = {##}) THEN {##} ELSE {##} END AS COLORREJECTED, CASE WHEN (TRO_STATUS = {##}) THEN {##} ELSE {##} END AS COLORPROCESSED, CASE WHEN (TRO_STATUS = {##}) THEN {##} ELSE {##} END AS COLORDELETED FROM DBO.BPP_TRORDERS LEFT OUTER JOIN DBO.BPP_TR_HEADS ON BPP_TR_HEADS.IDENT = BPP_TRORDERS.TH_IDENT LEFT OUTER JOIN DBO.BPP_EPAYFILE ON FIL_IDENT = BPP_EPAYFILE.IDENT AND FIL_IDENT IS NOT NULL LEFT OUTER JOIN DBO.BPP_EPAYPART ON PRT_IDENT = BPP_EPAYPART.IDENT WHERE TRO_START_DATE <= GETDATE() AND TRO_STOP_DATE > GETDATE() AND ISNULL(BPP_TRORDERS.CNT_IDENT, {##}) = {##} AND BPP_EPAYFILE.FIL_CREATE BETWEEN CONVERT(DATETIME, {STR}, {##}) AND CONVERT(DATETIME, {STR}, {##}) AND (CASE TRO_STATUS WHEN {##} THEN {##} WHEN {##} THEN {##} WHEN {##} THEN {##} ELSE {##} END) != {##} AND CONVERT(INT, BPP_EPAYFILE.FIL_ISOUTPUT) != {##} AND ((CONVERT(UNIQUEIDENTIFIER, BPP_EPAYPART.PRT_DRIVER) = CONVERT(UNIQUEIDENTIFIER, {STR})) OR ( {##} = {##})) AND {##} = {##} AND BPP_TRORDERS.IDENT IN(SELECT MIN(TRO.IDENT) FROM DBO.BPP_TRORDERS TRO LEFT OUTER JOIN DBO.BPP_EPAYFILE ON FIL_IDENT = BPP_EPAYFILE.IDENT AND FIL_IDENT IS NOT NULL WHERE TRO.TRO_START_DATE <= GETDATE() AND TRO.TRO_STOP_DATE > GETDATE() AND ISNULL(TRO.CNT_IDENT, {##}) = {##} AND BPP_EPAYFILE.FIL_CREATE BETWEEN CONVERT(DATETIME, {STR}, {##}) AND CONVERT(DATETIME, {STR}, {##}) GROUP BY CASE WHEN {##} = {##} THEN {##} ELSE TRO.IDENT END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END ) ORDER BY TRNUM DESC;1;19185;19185.00;66;66.00;0;0.00;16;16.00
BPP_TRANSACTION_TRANSACTION_GET_ATTRIBUTES;3022;48170341;15939.89;352471;116.64;46;0.02;36357;12.03
APP_CHECKIMPORTTRANSACTIONS;2;801128;400564.00;881;440.50;0;0.00;155;77.50
EXEC @P#=BPP_TRANSACTION_GET_DATA_COUNT @P#,@P#;117;187296;1600.82;2034;17.38;0;0.00;110;0.94
BPP_VADEMECUM_GETBYMONIKER;115;66057;574.41;936;8.14;0;0.00;77;0.67
BS_ADMIN_INSERT_PINENVELOPE;2;34437;17218.50;167;83.50;1;0.50;32;16.00
TAB_ACCMANAGE_CUSTOMERS_PREPARE;339;1013485935;2989634.03;41113378;121278.40;289116;852.85;715188;2109.70
BPP_TRANSACTION_OPERATION_STACK_CREATE;6789;51097096;7526.45;308334;45.42;33;0.00;37949;5.59
[RPT_”    À»≈Õ“€ - ¬—≈ œÀ¿“≈∆» œŒ “»œ¿Ã];19;741074498;39003920.95;60685810;3193990.00;379;19.95;349482;18393.79
BPP_CUST_GET_PAYMENTS_LIMS;112;103671;925.63;591;5.28;2;0.02;15;0.13
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ œÀ¿ÕŒ¬€≈ œŒ√¿ÿ≈Õ»ﬂ();1;21971;21971.00;109;109.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ œÀ¿ÕŒ¬€≈ œŒ√¿ÿ≈Õ»ﬂ();2;9785;4892.50;117;58.50;0;0.00;0;0.00
SELECT * FROM #TAB_CREDIT_CARDS_TABLE ORDER BY CCHOLDER DESC;2;5699;2849.50;235;117.50;5;2.50;0;0.00
INSERT INTO EXCHCTRL_ORDERS ( CU_CODE, CURR_CODE, ORDER_DATE, KEY_NAME ) VALUES(LIST);60;40061;667.68;251;4.18;0;0.00;30;0.50
BS_OFFLINE_INVESTIGATION_RECALL;1;332877;332877.00;537;537.00;12;12.00;78;78.00
BPP_EPAYMENT_CENTER_COUNT;1;4022;4022.00;37;37.00;0;0.00;0;0.00
[RPT_Œœ≈–Œ Œ“ –€“€≈ ƒ≈œŒ«»“€];11;233206670;21200606.36;19720523;1792774.82;3861;351.00;259923;23629.36
BPP_TRANSACTION_SET_FLAG;717;1370645;1911.64;29752;41.50;333;0.46;550;0.77
BS_ADMIN_GET_USERGROUPS;21;417764;19893.52;5799;276.14;6;0.29;173;8.24
SELECT IDENT, NSACCOUNT, ACCCURR, ACCKIND, ACCAMNT, ACCMATUR, NSAREPCODE, ACCCLOSEDFLAG, ACCOUNT, ACCREFTYPE, ACCSUB, ACCLOCALNMB FROM DBO.FN_TAB_CASH_ACCOUNTS_TABLE ( {##} ) ORDER BY NSACCOUNT ASC;1;24977119;24977119.00;25762001;25762001.00;1;1.00;24172;24172.00
SELECT IDENT, {STR} AS AC_LOCAL, CU_CODE, CU_NAME, SEQNMB, MAX(ISOPENACC) AS ISOPENACC, DOCSTATUS, OF_CODE, CU_CODE AS SEARCHBY, CU_CODE AS AC_NUMBER, {STR} AS BNK_ANNAME, FULL_PATH, OBJ_CATEGORY FROM #TAB_ACCMANAGE_CUSTOMERS GROUP BY IDENT,CU_CODE,CU_NAME,SEQNMB,DOCSTATUS,OF_CODE,FULL_PATH,OBJ_CATEGORY ORDER BY CU_NAME ASC;10;8887394;888739.40;95213;9521.30;717;71.70;6608;660.80
BPP_GET_TRANSIT_ACCOUNT_CODE;70;47698;681.40;1442;20.60;0;0.00;79;1.13
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_œ–¡Œ 26 –¿«ƒ≈À();12;218053;18171.08;1873;156.08;4;0.33;172;14.33
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ “≈–Ã»Õ¿À‹Õ€≈  À»≈Õ“€();4;172604;43151.00;896;224.00;0;0.00;109;27.25
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ “≈–Ã»Õ¿À‹Õ€≈  À»≈Õ“€();2;108040;54020.00;216;108.00;1;0.50;32;16.00
BPP_CORRSCRPTITEM_QUERY_NS;2;5458;2729.00;344;172.00;0;0.00;15;7.50
SELECT IDENT , SWF_DATE, SWF_TIME, SWF_USER, SWF_FORM, SWF_FLAG, SWF_PHASE, SWF_LEN, SWF_IDENT, SWF_ACTUAL, SWF_TYPE, SWF_SENT_FLAG, TR_NMB, AMOUNT, CURRENCY, SWF_TR_NMB, SWF_TR_SEQ_NMB, SWX_MONIKER, SWX_CLASS, URG_FLAG, PAYMODE_FLAG, NOTFOUND_LIST FROM DBO.FN_TAB_TELEX_MESSAGES ( {STR}, {STR}, {##}, {##}, {##}, {STR}, {STR}, {##}, {STR} ) ORDER BY SWF_USER,CURRENCY,AMOUNT ASC;5;400361;80072.20;15511;3102.20;8;1.60;282;56.40
APP_MAINTENANCE_TREE_GET;45;2405036;53445.24;278282;6184.04;0;0.00;1766;39.24
BS_OFFLINE_GET_BUSINESSINFO;1;77799;77799.00;136;136.00;0;0.00;16;16.00
DBO.LNS_VERIFYACCOUNTNUMBER;134;231179;1725.22;870;6.49;0;0.00;123;0.92
BPP_GET_BANK_CHAINS_FORMATTED;3172;1713519;540.20;63134;19.90;15;0.00;1490;0.47
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_NBKR_—ŒÃŒ¬€… ¡¿À¿Õ—_«¿_œ≈–»Œƒ();1;2690;2690.00;111;111.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_NBKR_—ŒÃŒ¬€… ¡¿À¿Õ—_«¿_œ≈–»Œƒ();2;38285;19142.50;213;106.50;0;0.00;16;8.00
BPP_OPERATION_SEL_STMT_ATTRIBUTES;2170;517832;238.63;13060;6.02;0;0.00;375;0.17
BPP_WORK_COMPLETE;1;11282;11282.00;10;10.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ Õ¿◊»—À≈Õ»ﬂ œŒ  ƒ≈œŒ«»“¿Ã();3;25858;8619.33;319;106.33;1;0.33;31;10.33
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ Õ¿◊»—À≈Õ»ﬂ œŒ  ƒ≈œŒ«»“¿Ã();6;110563;18427.17;1115;185.83;0;0.00;62;10.33
SELECT AC_IDENT, CU_CODE, CURR_IDENT, CURRENCY, AC_KIND, AC_SUB, AC_OPEN_DATE, TA.INT_RATE AS ACTUAL_INT_RATE, MATURITY_DATE, TAX_PERCENT, DP_TYPE, BEN_AC_IDENT, PRJ_VAL_DATE, VALDATE, PROPSTOPDATE, ISNULL(MV.INT_RATE,{##}) AS INT_RATE, ISNULL(DBO.FN_BPP_YTM_DAYSINYEAR(YTM_BASIS, NULL, NULL),{##}) AS YTMDAYSINYEAR, ISNULL(CUTOFF_AMOUNT,{##}) AS CUTOFF_AMOUNT, DEBIT, CREDIT, ACCRUED, PAIDACCRUED, PAIDINTEREST, HIST_AIRATE, RATETOBASE, INTBENEFICIARY, DAYTOPAY FROM #ACCOUNTS AS TA INNER JOIN ( SELECT ISNULL(AP.AC_IDENT, TR.AC_IDENT) AS ACCIDENT, ISNULL(ISNULL(AP.START_DATE, TR.VALUE_DATE), DBO.FN_BPP_OPTIONS_FIELD(NULL, NULL, {STR}, NULL)) AS VALDATE, STOP_DATE AS PROPSTOPDATE, INT_RATE , YTM_BASIS , CUTOFF_AMOUNT, DEBIT , CREDIT , ACCRUED , PAIDACCRUED, PAIDINTEREST, HIST_AIRATE FROM #ACCPROPS AS AP FULL JOIN #TRANSACTIONS AS TR ON AP.AC_IDENT = TR.AC_IDENT AND CONVERT(CHAR({##}),AP.START_DATE,{##}) = CONVERT(CHAR({##}),TR.VALUE_DATE,{##}) ) MV ON MV.ACCIDENT = TA.AC_IDENT ORDER BY AC_IDENT,VALDATE;7;403573;57653.29;1494;213.43;10;1.43;312;44.57
SELECT IDENT ,SR_PRIM_IDENT ,OB_OPEN_DATE ,SR_OPEN_DATE ,OB_SERVER_UUID ,OB_QUEUE_NAME ,OB_TOPIC_UUID ,OB_GROUP ,OB_FLAG ,OB_DELAY_LEVEL ,OB_MESSAGE ,OB_ERROR FROM AUBBPPDATABASE.DBO.BPP_SYNCHRONIZATION_OUTBOX WHERE OB_OPEN_DATE >= {STR};1;163914;163914.00;3332;3332.00;0;0.00;15;15.00
APP_EXCHCNTR_CUSTINFO;8;474307;59288.38;577;72.13;0;0.00;281;35.13
EXEC @P#=TAB_CARDTYPES_BOX_PROC;24;158443;6601.79;1492;62.17;7;0.29;16;0.67
BPP_LOANPAYREQUEST_CALC;334;206086441;617025.27;1711212;5123.39;10;0.03;149447;447.45
SELECT AC.AC_IDENT, AC.CU_IDENT, AC.CURR_IDENT, AC.CU_CODE, AC.AC_KIND, AC.CURRENCY, AC.AC_SUB, AC.INT_IRR, AC.OPEN_DATE, AC.CLOSE_DATE, AC.MATURITY_DATE, AC.ACCRUED_METHOD, AC.OPEN_BALANCE, AC.YTMDAYSINYEAR, AC.ISSCHEDULED, ISNULL(AC.CORR_ORDER,{##}) AS CORR_ORDER, ISNULL(AC.ACCR_ORDER,{##}) AS ACCR_ORDER, ISNULL(AC.CORR_FLAG,{##}) AS CORR_FLAG, ISNULL(AC.NEW_FLAG,{##}) AS NEW_FLAG, ISNULL(AC.TRNUMBER,{STR}) AS TRNUMBER, ISNULL(TU.BAL_DATE, CONVERT(DATETIME,{STR},{##}) {##} ) AS BAL_DATE, ISNULL(TU.DEBIT,{##}) AS DEBIT, ISNULL(TU.CREDIT,{##}) AS CREDIT, ISNULL(TU.INT_PAID,{##}) AS INT_PAID, ISNULL(TU.INT_ACCRUED,{##}) AS INT_ACCRUED, ISNULL(TU.CASHFLOW,{##}) AS CASHFLOW, ISNULL(TU.INT_RATE,{##}) AS INT_RATE FROM #ACCOUNTS AS AC LEFT JOIN #AC_TURNS AS TU ON AC.AC_IDENT = TU.AC_IDENT ORDER BY AC.AC_IDENT, TU.BAL_DATE;121;2423628;20029.98;10497;86.75;99;0.82;1736;14.35
SELECT SEL.IDENT AS IDENT, SEL.CODE AS CODE, SEL.CURRENCY AS CURRENCY, SEL.LOCALACC+{STR}+SEL.FULLACC+{STR} AS LOCALFULLACC FROM ( SELECT DISTINCT ISNULL(-OAT.IDENT, CUS.IDENT) AS IDENT, CAST(CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_CODE ELSE OAT.AN_MONIKER END AS VARCHAR({##})) AS CODE, CURR.CURRENCY AS CURRENCY, DBO.FN_BPP_LOCAL_NUMBER_DIRECT(ACC.IDENT,NULL, NULL) AS LOCALACC, RTRIM(CAST(CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_CODE ELSE OAT.AN_MONIKER END AS VARCHAR({##})))+{STR}+ACC.AC_KIND+{STR}+CURR.CURRENCY+{STR}+(CASE WHEN ACC.AC_NUMBER = {STR} THEN {STR} ELSE ACC.AC_NUMBER END) AS FULLACC FROM DBO.BPP_OPTIONS AS OPT INNER JOIN (SELECT * FROM DBO.BPP_ACCOUNTS WHERE DELETED={##} AND AC_CLOSED <> {STR}) AS ACC ON OPT.BN_IDENT = ACC.BN_IDENT INNER JOIN DBO.CURRENCY AS CURR ON CURR.IDENT = ACC.CURR_IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUS ON ACC.CU_IDENT = CUS.IDENT LEFT JOIN DBO.BPP_OFFICES AS OFC ON ACC.OF_IDENT = OFC.IDENT LEFT JOIN DBO.BPP_OWN_TAG_LINKS AS OWN INNER JOIN DBO.VADE_MECUM AS OAT ON OAT.IDENT = OWN.AN_IDENT ON OWN.AC_IDENT = ACC.IDENT WHERE (OFC.IDENT IS NULL OR ( {STR} = {STR}) OR (OFC.OF_CODE = {STR})) AND ACC.AC_KIND = {STR} ) AS SEL WHERE DBO.FN_TAB_LOCAL_ACCOUNTS_BOX_FILTER ( SEL.IDENT, SEL.CODE, {STR} ) = {##} ORDER BY SEL.LOCALACC;1;401861;401861.00;632;632.00;1;1.00;407;407.00
BPP_TRANSACTION_OPERATION_UPDATE;556;37767175;67926.57;237621;427.38;1504;2.71;15063;27.09
BPP_SWIFT_NBKRFILES_INSERT;27;857401;31755.59;4721;174.85;27;1.00;517;19.15
APP_SYNCHRONIZATION_OUTBOX_LIST;30;4026130;134204.33;184805;6160.17;17;0.57;2469;82.30
BPP_SYNCHRO_FILTER_PUT;28;31364096;1120146.29;1362178;48649.21;224;8.00;17875;638.39
BPP_GET_RATE;8807;20409195;2317.38;1558220;176.93;0;0.00;17720;2.01
[RPT_ ¿——¿ œ¿ ≈“ ≈∆≈ƒÕ≈¬Õ€’ —œ–¿¬Œ ];20;2804224510;140211225.50;157002063;7850103.15;164;8.20;2085108;104255.40
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, TR_NUMBER, TH_SEQ_NUMBER, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_LOANOPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;206;14619374;70967.83;136541;662.82;151;0.73;3013;14.63
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY TRORGNAME ASC;11;1999289;181753.55;95650;8695.45;263;23.91;844;76.73
APP_CUTOFFTIME_LIST;2;1340731;670365.50;13539;6769.50;3;1.50;562;281.00
SP_CONFIGURE;1;443422;443422.00;116;116.00;0;0.00;15;15.00
[RPT_”   ¿Õ ≈“€  À»≈Õ“Œ¬];17;2945461309;173262429.94;178567269;10503957.00;6931;407.71;2486454;146262.00
BPP_TRANSQUEUE_INVALIDATE;1929;2809931;1456.68;22108;11.46;224;0.12;1351;0.70
BPP_CHARGES_TRANS_GETLIST;5767;62769916;10884.33;10825255;1877.10;0;0.00;28675;4.97
SELECT IDENT AS IDENT, THIDENT AS THIDENT, BALACCOUNT AS BALACCOUNT, TRNUMBER AS TRNUMBER, OPTYPE AS OPTYPE, VALUE_DATE AS VALUE_DATE, DEBIT AS DEBIT, CREDIT AS CREDIT, NARRATIVE AS NARRATIVE, DETAILS AS DETAILS, TOTALFLAG FROM DBO.FN_TAB_FO_ITEMOPERATIONS( {BS}, {STR}, {STR}, {STR}, {STR}, {STR}, {##} ) ORDER BY TOTALFLAG ASC,TRNUMBER DESC;1;4283875;4283875.00;456829;456829.00;0;0.00;2859;2859.00
SELECT FLD.IDENT AS IDENT, FLD.TRF_BPPNAME AS FLDNAME, CAST(FLD.TRF_VALUE AS VARCHAR({##})) AS FLDVALUE, CASE WHEN LEFT(FLD.TRF_BPPNAME, {##}) = {STR} THEN {STR} + CAST(FLD.IDENT AS VARCHAR({##})) ELSE FLD.TRF_BPPNAME END AS FLDSORT FROM DBO.BPP_TRORDERS AS ORD INNER JOIN DBO.BPP_TRORDERFIELDS AS FLD ON ORD.IDENT = FLD.TRO_IDENT WHERE ORD.IDENT = {##} AND YEAR(ORD.TRO_STOP_DATE) = {##} AND FLD.DELETED = {##} ORDER BY FLDSORT, FLDNAME ASC;148;3595926;24296.80;19128;129.24;75;0.51;1647;11.13
SELECT DB_NAME(AF.DBID), RTRIM(AF.FILENAME), CASE DATABASEPROPERTYEX(DB_NAME(AF.DBID),{STR}) WHEN {STR} THEN {##} ELSE {##} END, CONVERT (INT, DATABASEPROPERTYEX(DB_NAME(AF.DBID),{STR})), CONVERT (INT, DATABASEPROPERTYEX(DB_NAME(AF.DBID),{STR})), CASE DB.STATUS & {##} WHEN {##} THEN {##} ELSE {##} END FROM MASTER..SYSALTFILES AF, MASTER..SYSDATABASES DB WHERE AF.DBID = DB.DBID AND AF.DBID != DB_ID({STR}) ORDER BY AF.DBID;1;904523;904523.00;309;309.00;0;0.00;47;47.00
SELECT IDENT, ACCKIND, NSACCOUNT, ACCCURR, ACCAMNT, ACCMATUR, ACCINTER, NSAREPCODE, NOACCCASH, NOACCCASHLESS, ACCCLOSEDFLAG, ACCOUNT, ACCREFTYPE, ACCSUB, ACCLOCALNMB FROM DBO.FN_TAB_NOSTRO_ACCOUNTS ( {##}, {STR}, {STR}, {##} ) ORDER BY NSACCOUNT ASC;1;417668;417668.00;280016;280016.00;1;1.00;406;406.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√ –¿«¡»¬ ¿ œŒ —–Œ ¿Ã  –≈ƒ»“ÕŒ√Œ œŒ–“‘≈Àﬂ();1;19692;19692.00;111;111.00;0;0.00;16;16.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√ –¿«¡»¬ ¿ œŒ —–Œ ¿Ã  –≈ƒ»“ÕŒ√Œ œŒ–“‘≈Àﬂ();2;62254;31127.00;440;220.00;0;0.00;78;39.00
[RPT_Œœ≈–Œ —“¿“»—“» ¿ œŒ  À»≈Õ“¿Ã];3;7532178;2510726.00;505734;168578.00;5;1.67;6703;2234.33
DECLARE @VALUEDATE DATETIME SELECT @VALUEDATE = CONVERT(DATETIME, @MINVALUEDATE, {##}) DECLARE @SIMILARIDENT INT EXEC EXCHCTRL_SIMILARITY_CHECK @VALUEDATE, @BENNAME, @DETAILS, @ORDER_XML, @SIMILARITY, @SIMILARIDENT OUTPUT SELECT @SIMILARIDENT;280;30616682;109345.29;490401;1751.43;30;0.11;14279;51.00
BPP_PERIODCOUNTOVER;1;379760538;379760538.00;17014152;17014152.00;214115;214115.00;855861;855861.00
SELECT IDENT, CU_CODE, CU_CODE AS AC_NUMBER, {STR} AS AC_LOCAL, CU_NAME, SEQNMB, ISNULL(ISOPENACC,{##}) AS ISOPENACC, DOCSIGNDAYS, {STR} AS BNK_ANNAME, BALANCE, CU_CODE AS SEARCHBY, OF_CODE, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_CURRENTS ( {STR}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, CU_CODE ASC;61;499107406;8182088.62;25157972;412425.77;27649;453.26;307280;5037.38
SELECT IDENT AS IDENT, THIDENT AS THIDENT, BALACCOUNT AS BALACCOUNT, TRNUMBER AS TRNUMBER, OPTYPE AS OPTYPE, VALUE_DATE AS VALUE_DATE, DEBIT AS DEBIT, CREDIT AS CREDIT, NARRATIVE AS NARRATIVE, DETAILS AS DETAILS, TOTALFLAG FROM DBO.FN_TAB_FO_ITEMOPERATIONS( {BS}, {STR}, {STR}, {STR}, {STR}, {STR}, {##} ) ORDER BY TOTALFLAG ASC,CREDIT ASC;2;24154935;12077467.50;211531;105765.50;12;6.00;17860;8930.00
BPP_BANK_TOTALS;1469;146914089;100009.59;17534039;11936.04;0;0.00;38705;26.35
BPP_TRANSACTION_ORDER_INSERT;4430;115376011;26044.25;2562232;578.38;16072;3.63;51790;11.69
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”   ¿Õ ≈“€  À»≈Õ“Œ¬();13;32523;2501.77;203;15.62;0;0.00;0;0.00
BPP_DEPOSIT_DAILYCREDIT;4;293748;73437.00;2687;671.75;0;0.00;251;62.75
APP_ORDERS_GET;794;1525217491;1920928.83;126135602;158860.96;3032;3.82;860500;1083.75
[RPT_Œ“◊≈“ œŒ Œ“ –€“€Ã » «¿ –€“€Ã —◊≈“¿Ã];2;40050069;20025034.50;1690808;845404.00;413;206.50;37156;18578.00
SELECT COL.NAME AS NAME FROM SYS.TABLES AS TBL INNER JOIN SYS.FULLTEXT_INDEXES AS FTI ON FTI.OBJECT_ID=TBL.OBJECT_ID INNER JOIN SYS.FULLTEXT_INDEX_COLUMNS AS ICOL ON ICOL.OBJECT_ID=FTI.OBJECT_ID INNER JOIN SYS.COLUMNS AS COL ON COL.OBJECT_ID = ICOL.OBJECT_ID AND COL.COLUMN_ID = ICOL.COLUMN_ID WHERE (TBL.NAME={STRN} AND SCHEMA_NAME(TBL.SCHEMA_ID)={STRN});1;68420;68420.00;111;111.00;0;0.00;63;63.00
[RPT_CCARDS_œŒœŒÀÕ≈Õ»≈  ¿–“Œ◊≈ ];18;114631529;6368418.28;11691257;649514.28;136;7.56;35875;1993.06
BPP_TRANSACTION_SET_OP_FLAG;774;481560;622.17;7178;9.27;271;0.35;283;0.37
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_APO_DEALS();2;2084;1042.00;61;30.50;0;0.00;0;0.00
[RPT_ –≈ƒ_¬€ƒ¿ÕÕ€≈  –≈ƒ»“€];3;51519823;17173274.33;2239633;746544.33;1911;637.00;27141;9047.00
BPP_ACCOUNT_BINARY_PATH;438;799518;1825.38;5716;13.05;0;0.00;373;0.85
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ  –≈ƒ»“€ —Œ“–”ƒÕ» ¿Ã();2;24044;12022.00;209;104.50;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ  –≈ƒ»“€ —Œ“–”ƒÕ» ¿Ã();4;335779;83944.75;8458;2114.50;28;7.00;141;35.25
BPP_LOCAL_NUMBER_BY_ACCKEY;1291;27908887;21618.04;104525;80.96;0;0.00;13246;10.26
BPP_NOSTROATTRIBUTESBYBANKANDCURR;285;17844132;62610.99;251807;883.53;15;0.05;11486;40.30
SELECT IDENT, {STR} AS AC_LOCAL, CU_CODE, SEQNMB, BALANCE, PRINCIPAL, INTEREST, OF_CODE, CU_CODE AS SEARCHBY, CU_CODE AS AC_NUMBER, CU_NAME, ISNULL(ISOPENACC,{##}) AS ISOPENACC, DOCSIGNDAYS, {STR} AS BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_CREDITORS ( {STR}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, CU_CODE ASC;11;30777343;2797940.27;1046889;95171.73;967;87.91;24453;2223.00
[DOC_INCASSO_ORDER];15;1272488;84832.53;11739;782.60;105;7.00;545;36.33
[RPT_Œœ≈–Œ Ã”À‹“»¬€œ»— ¿];4;94630934;23657733.50;375364;93841.00;45;11.25;73656;18414.00
BPP_ACCOUNT_LAST_INTEREST_DAYS;4;36948930;9237232.50;1236374;309093.50;0;0.00;10938;2734.50
[RPT_Œœ≈–Œ Õ¿◊»—À≈Õ»ﬂ œŒ  ƒ≈œŒ«»“¿Ã (≈∆≈ƒÕ≈¬ÕŒ)];2;14634694;7317347.00;759482;379741.00;5;2.50;6797;3398.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ Œ“ –€“€≈ ƒ≈œŒ«»“€();22;425126;19323.91;3901;177.32;12;0.55;310;14.09
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ Œ“ –€“€≈ ƒ≈œŒ«»“€();11;81732;7430.18;451;41.00;2;0.18;31;2.82
BPP_TELEX_TEMPLATES_GET;241;6772448;28101.44;81863;339.68;344;1.43;4208;17.46
BPP_TRANSACTION_STATUS_CHANGE;370;104033461;281171.52;7305996;19745.94;551;1.49;91737;247.94
SELECT IDENT, ANNAME, OVERDUE, DUE, RESIDUE, BALANCE, SEARCHBY, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY, CU_CODE, AC_KIND, CURRENCY, AC_SUBACC FROM DBO.FN_TAB_ACCMANAGE_LOANANALYTICS({STR},{STR},{STR}, {##}) ORDER BY FLAG ASC, OVERDUE ASC;1;1669925;1669925.00;27028;27028.00;1;1.00;1656;1656.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_–¿—◊≈“ –œœ”();1;2823;2823.00;113;113.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_¡¿À¿Õ—Œ¬¿ﬂ ¬≈ƒŒÃŒ—“‹();1;9544;9544.00;111;111.00;0;0.00;16;16.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_¡¿À¿Õ—Œ¬¿ﬂ ¬≈ƒŒÃŒ—“‹();2;119319;59659.50;642;321.00;0;0.00;78;39.00
BPP_PAYMPLAN_ATTRIBUTES;364;556585;1529.08;9824;26.99;7;0.02;312;0.86
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_WRONG_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {##}, {##}, {##}, {##}, NULL, NULL, {##} ) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;66;9600270;145458.64;148792;2254.42;173;2.62;2123;32.17
SELECT {##} * ISNULL(FLD.IDENT, {##}) + RPT.IDENT AS IDENT, ISNULL(FLD.AN_MONIKER, {STR}) AS FOLDER, RPT.NAME AS REPORT_NAME, ISNULL(FLD.AN_NAME_RUS, {STR}) AS FOLDER_NAME, RPT.REPORT AS REPORT_PROC, RPT.FLAG AS REPORT_FLAG, {STR} AS UUID FROM DBO.FN_BDD_REPORT_LIST() AS RPT LEFT JOIN ( SELECT IDENT, AN_MONIKER, AN_NAME_RUS, DD_FOLDER FROM DBO.VADE_MECUM LEFT JOIN ( SELECT DISTINCT DD_FOLDER FROM DBO.BPP_DAY_DOCUMENTS WHERE DD_UUID = {STR} ) AS SEL ON AN_MONIKER = DD_FOLDER WHERE AN_PATH = {STR} ) AS FLD ON RPT.FLAG = {STR} WHERE (RPT.FLAG = {STR}) OR (RPT.FLAG = {STR} AND DD_FOLDER IS NOT NULL) ORDER BY FOLDER ASC;26;11158740;429182.31;506783;19491.65;90;3.46;5109;196.50
[RPT_IT_SWIFTLIST];8;12293335;1536666.88;633162;79145.25;393;49.13;6453;806.63
BPP_COUNTRY_GET_BY_CODE;3;20786;6928.67;54;18.00;0;0.00;31;10.33
BS_OFFLINE_GET_MESSAGES;279;35937299;128807.52;104034;372.88;0;0.00;1295;4.64
SET XACT_ABORT OFF SET NOCOUNT ON DECLARE @ACTDATE DATETIME SELECT @ACTDATE = GETDATE() SELECT USR_CODE FROM BPP_SDC AS S INNER JOIN VADE_MECUM AS V ON S.SDC_TYPE=V.IDENT INNER JOIN BPP_USERS AS U ON S.USR_IDENT=U.IDENT WHERE (SDC_START_DATE <= @ACTDATE AND SDC_STOP_DATE > @ACTDATE) AND (V.AN_PATH = {STR} AND V.AN_MONIKER={STR}) AND (SDC_VALID_DATE <= @ACTDATE AND SDC_EXP_DATE > @ACTDATE) AND CAST({STR} + CHAR({##}) + {STR} AS NVARCHAR({##})) = CAST(SDC_CERTIFICATE2 AS NVARCHAR({##}));8;319625;39953.13;2159;269.88;0;0.00;122;15.25
APP_ORDER_ANALYTIC_REMOVE;2;212450;106225.00;1616;808.00;4;2.00;32;16.00
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, CU_CODE, FLAG, STORNO_FLAG, WAIT_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_CASH_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, TRNUMBER ASC;4;195560;48890.00;5651;1412.75;13;3.25;141;35.25
BPP_APPLOCK_RELEASE;6792;1708008;251.47;435;0.06;0;0.00;1611;0.24
BS_OFFLINE_INVESTIGATION_AMEND;101;3367688;33343.45;53357;528.29;152;1.50;2219;21.97
BPP_CREDIT_CARD_ACCOUNT_ATTRIBUTES_BY_NUMBER;83;4542216;54725.49;117080;1410.60;193;2.33;2467;29.72
SELECT IDENT, TRNUMBER, URGENCY, ORG_NAME, ACCOUNT, VALDATE, PLANDATE, CURRENCY, AMOUNT, NOACCOUNT, NSACCFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, NSACODE, ANALITICS, EXCH_FLAG, INCASSO_FLAG, TOPROCESS, PROCESSED, NOTES, COMMISSION, PAYMODE_FLAG FROM DBO.FN_TAB_PAYMPLAN_CASHLESS_TABLE ( {STR}, {STR}, {##}, {STR}, {##}, {STR}, {STR}, {STR}, {STR}, {STR}, {##}, {##}, {STR} ) ORDER BY AMOUNT ASC;20;14233418;711670.90;168981;8449.05;61;3.05;7847;392.35
SET NOCOUNT ON DECLARE @ABORT INT SET @ABORT = {##} DECLARE @READY INT DECLARE @FLAGS CHAR({##}) DECLARE @VALUE VARCHAR({##}) DECLARE @NAME VARCHAR({##}) DECLARE @ERR_E VARCHAR({##}) DECLARE @ERR_R VARCHAR({##}) DECLARE @F1 CHAR({##}) DECLARE @F2 CHAR({##}) DECLARE @F3 CHAR({##}) DECLARE @F4 CHAR({##}) DECLARE @F5 CHAR({##}) DECLARE @F6 CHAR({##}) DECLARE @F7 CHAR({##}) DECLARE @F8 CHAR({##}) DECLARE @F9 CHAR({##}) SET @F1 = {STR} DECLARE @T TABLE ( IDENT INT NOT NULL IDENTITY({##},{##}), XPATH VARCHAR({##}) NOT NULL, FIELD VARCHAR({##}) NOT NULL ) SET @READY = {##} SET @VALUE = NULL IF (@ABORT = {##}) BEGIN SET @NAME = {STR} IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( FORM <> {STR} AND FORM <> {STR} AND FORM <> {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END END SET @READY = {##} SET @VALUE = NULL IF (@ABORT = {##}) BEGIN SET @NAME = {STR} IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END END SET @READY = {##} SET @VALUE = NULL IF (@ABORT = {##}) BEGIN SET @NAME = {STR} IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DIRECTION <> {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DIRECTION = {STR} AND SENT = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DIRECTION = {STR} AND SENT <> {STR} AND CHANNEL <> {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DIRECTION = {STR} AND SENT <> {STR} AND CHANNEL = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END END SET @READY = {##} SET @VALUE = NULL IF (@ABORT = {##}) BEGIN SET @NAME = {STR} IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_MIN_VALUE_DATE(DBO.FN_TELEX_DATE_FORMAT(TAG_32_DATE)), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END END SET @READY = {##} SET @VALUE = NULL IF (@ABORT = {##}) BEGIN SET @NAME = {STR} IF (@READY = {##}) BEGIN SELECT @VALUE = TAG_20_LINE_1, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END END SET @READY = {##} SET @VALUE = NULL IF (@ABORT = {##}) BEGIN SET @NAME = {STR} IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = TAG_51_LINE_2, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND TAG_51_OPTION = {STR} AND LEFT(TAG_51_LINE_1,{##}) = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = TAG_51_LINE_1, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND TAG_51_OPTION = {STR} AND LEFT(TAG_51_LINE_1,{##}) <> {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = TAG_SENDER_HEADER, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND TAG_51_OPTION <> {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END END SET @READY = {##} SET @VALUE = NULL IF (@ABORT = {##}) BEGIN SET @NAME = {STR} IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = SUBSTRING(TAG_51_LINE_1, {##}, {##}), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND TAG_51_OPTION <> {STR} AND LEFT(TAG_51_LINE_1,{##}) = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND (TAG_51_OPTION = {STR} OR LEFT(TAG_51_LINE_1,{##}) <> {STR}) AND TAG_52_OPTION = {STR} AND TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR} AND TAG_57_OPTION = {STR} AND DBO.FN_TELEX_COUNT_CORRACCOUNTS(TAG_SENDER_HEADER, TAG_32_CURRENCY) <> {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_SENDER_CORRACCOUNT(TAG_SENDER_HEADER, TAG_32_CURRENCY), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND (TAG_51_OPTION = {STR} OR LEFT(TAG_51_LINE_1,{##}) <> {STR}) AND TAG_52_OPTION = {STR} AND TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR} AND TAG_57_OPTION = {STR} AND DBO.FN_TELEX_COUNT_CORRACCOUNTS(TAG_SENDER_HEADER, TAG_32_CURRENCY) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_SENDER_CORRACCOUNT(TAG_SENDER_HEADER, TAG_32_CURRENCY), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND (TAG_51_OPTION = {STR} OR LEFT(TAG_51_LINE_1,{##}) <> {STR}) AND (TAG_52_OPTION <> {STR} OR TAG_53_OPTION <> {STR} OR TAG_54_OPTION <> {STR} OR TAG_56_OPTION <> {STR} OR TAG_57_OPTION <> {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2, NULL, NULL, NULL) = {##} AND DBO.FN_TELEX_COUNT_CORRACCOUNTS(TAG_SENDER_HEADER, TAG_32_CURRENCY) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND (TAG_51_OPTION = {STR} OR LEFT(TAG_51_LINE_1,{##}) <> {STR}) AND (TAG_52_OPTION <> {STR} OR TAG_53_OPTION <> {STR} OR TAG_54_OPTION <> {STR} OR TAG_56_OPTION <> {STR} OR TAG_57_OPTION <> {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2, NULL, NULL, NULL) = {##} AND DBO.FN_TELEX_COUNT_CORRACCOUNTS(TAG_SENDER_HEADER, TAG_32_CURRENCY) <> {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND (TAG_51_OPTION = {STR} OR LEFT(TAG_51_LINE_1,{##}) <> {STR}) AND (TAG_52_OPTION <> {STR} OR TAG_53_OPTION <> {STR} OR TAG_54_OPTION <> {STR} OR TAG_56_OPTION <> {STR} OR TAG_57_OPTION <> {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2, NULL, NULL, NULL) <> {##} AND DBO.FN_TELEX_COUNT_CORRACCOUNTS(TAG_SENDER_HEADER, TAG_32_CURRENCY) <> {##} AND DBO.FN_TELEX_ACCOUNT_FROM_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_SENDER_CORRACCOUNT(TAG_SENDER_HEADER, TAG_32_CURRENCY), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND (TAG_51_OPTION = {STR} OR LEFT(TAG_51_LINE_1,{##}) <> {STR}) AND (TAG_52_OPTION <> {STR} OR TAG_53_OPTION <> {STR} OR TAG_54_OPTION <> {STR} OR TAG_56_OPTION <> {STR} OR TAG_57_OPTION <> {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2, NULL, NULL, NULL) <> {##} AND DBO.FN_TELEX_COUNT_CORRACCOUNTS(TAG_SENDER_HEADER, TAG_32_CURRENCY) = {##} AND DBO.FN_TELEX_ACCOUNT_FROM_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = NULL, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND (TAG_51_OPTION = {STR} OR LEFT(TAG_51_LINE_1,{##}) <> {STR}) AND (TAG_52_OPTION <> {STR} OR TAG_53_OPTION <> {STR} OR TAG_54_OPTION <> {STR} OR TAG_56_OPTION <> {STR} OR TAG_57_OPTION <> {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2, NULL, NULL, NULL) <> {##} AND DBO.FN_TELEX_ACCOUNT_FROM_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) <> {STR} AND DBO.FN_IS_OUR_CORRACCOUNT(TAG_SENDER_HEADER, DBO.FN_TELEX_ACCOUNT_FROM_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_ACCOUNT_FROM_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( DBO.FN_IS_OUR_CORRBANK(TAG_SENDER_HEADER) = {##} AND (TAG_51_OPTION = {STR} OR LEFT(TAG_51_LINE_1,{##}) <> {STR}) AND (TAG_52_OPTION <> {STR} OR TAG_53_OPTION <> {STR} OR TAG_54_OPTION <> {STR} OR TAG_56_OPTION <> {STR} OR TAG_57_OPTION <> {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2, NULL, NULL, NULL) <> {##} AND DBO.FN_TELEX_ACCOUNT_FROM_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) <> {STR} AND DBO.FN_IS_OUR_CORRACCOUNT(TAG_SENDER_HEADER, DBO.FN_TELEX_ACCOUNT_FROM_TAGS(TAG_SENDER_HEADER, TAG_52_OPTION, TAG_52_LINE_1, TAG_52_LINE_2, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2)) <> {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END END SET @READY = {##} SET @VALUE = NULL IF (@ABORT = {##}) BEGIN SET @NAME = {STR} IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( @F1 = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_CUSTLORONAME_FROM_TAG(TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_59_LINE_3, TAG_59_LINE_4, TAG_59_LINE_5), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) <> {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_54_OPTION <> {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, NULL, NULL, NULL)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_54_OPTION <> {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, NULL, NULL, NULL)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_54_OPTION = {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_54_OPTION = {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION <> {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION <> {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION = {STR} AND TAG_54_OPTION <> {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, NULL, NULL, NULL)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION = {STR} AND TAG_54_OPTION <> {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, NULL, NULL, NULL)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION = {STR} AND TAG_54_OPTION = {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( (TAG_57_OPTION = {STR} OR TAG_59_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2) = {##} AND NOT (TAG_53_OPTION = {STR} AND TAG_54_OPTION = {STR} AND TAG_56_OPTION = {STR}) AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION = {STR} AND TAG_54_OPTION = {STR} AND DBO.FN_IS_OUR_LORO_BANK(DBO.FN_TELEX_BIC_FROM_TAGS(TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, NULL, NULL, NULL)) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_CUSTLORONAME_FROM_TAG(TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2, TAG_59_LINE_3, TAG_59_LINE_4, TAG_59_LINE_5), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND TAG_53_OPTION = {STR} AND TAG_56_OPTION = {STR} AND TAG_54_OPTION = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_CUSTLORO_ACCOUNT_FROM_TAG(TAG_59_OPTION, TAG_59_LINE_1, TAG_59_LINE_2), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND ( (TAG_53_OPTION <> {STR} AND TAG_53_OPTION <> {STR}) OR (TAG_54_OPTION <> {STR} AND TAG_54_OPTION <> {STR}) OR (TAG_56_OPTION <> {STR} AND TAG_56_OPTION <> {STR}) ) ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_57_OPTION = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_CUSTLORONAME_FROM_TAG(TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2, TAG_57_LINE_3, TAG_57_LINE_4, TAG_57_LINE_5), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_57_OPTION <> {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_54_OPTION = {STR} AND TAG_57_OPTION = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_CUSTLORONAME_FROM_TAG(TAG_57_OPTION, TAG_57_LINE_1, TAG_57_LINE_2, TAG_57_LINE_3, TAG_57_LINE_4, TAG_57_LINE_5), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_54_OPTION = {STR} AND TAG_57_OPTION <> {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_CUSTLORONAME_FROM_TAG(TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_54_LINE_3, TAG_54_LINE_4, TAG_54_LINE_5), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_54_OPTION <> {STR} AND TAG_54_OPTION = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_54_OPTION <> {STR} AND TAG_54_OPTION <> {STR} AND LEFT(TAG_54_LINE_1,{##}) = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_54_OPTION <> {STR} AND TAG_54_OPTION <> {STR} AND LEFT(TAG_54_LINE_1,{##}) <> {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_CUSTLORONAME_FROM_TAG(TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, TAG_56_LINE_3, TAG_56_LINE_4, TAG_56_LINE_5), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION <> {STR} AND TAG_56_OPTION = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = {STR}, @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION <> {STR} AND TAG_56_OPTION <> {STR} AND LEFT(TAG_56_LINE_1,{##}) = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_WRONG_ACC_NAME(), @FLAGS = {STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION <> {STR} AND TAG_56_OPTION <> {STR} AND LEFT(TAG_56_LINE_1,{##}) <> {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SELECT @VALUE = DBO.FN_TELEX_CUSTLORONAME_FROM_TAG(TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_54_LINE_3, TAG_54_LINE_4, TAG_54_LINE_5), @FLAGS = {STR}+@F1+{STR}, @ERR_E = {STR}, @ERR_R = {STR} FROM #TELEX_MESSAGE WHERE ( TAG_57_OPTION <> {STR} AND TAG_59_OPTION <> {STR} AND DBO.FN_TELEX_BIC_BELONGS_TO_TAGS(NULL, NULL, NULL, NULL, TAG_53_OPTION, TAG_53_LINE_1, TAG_53_LINE_2, TAG_54_OPTION, TAG_54_LINE_1, TAG_54_LINE_2, TAG_56_OPTION, TAG_56_LINE_1, TAG_56_LINE_2, NULL, NULL, NULL, NULL, NULL, NULL) = {##} AND TAG_56_OPTION = {STR} AND TAG_54_OPTION <> {STR} AND TAG_54_OPTION = {STR} ) SET @F1 = SUBSTRING(@FLAGS, {##}, {##}) SET @F2 = SUBSTRING(@FLAGS, {##}, {##}) SET @F3 = SUBSTRING(@FLAGS, {##}, {##}) SET @F4 = SUBSTRING(@FLAGS, {##}, {##}) SET @F5 = SUBSTRING(@FLAGS, {##}, {##}) SET @F6 = SUBSTRING(@FLAGS, {##}, {##}) SET @F7 = SUBSTRING(@FLAGS, {##}, {##}) SET @F8 = SUBSTRING(@FLAGS, {##}, {##}) SET @F9 = SUBSTRING(@FLAGS, {##}, {##}) IF (@VALUE IS NOT NULL) BEGIN INSERT INTO @T (XPATH, FIELD) SELECT @NAME, @VALUE SET @READY = {##} END ELSE BEGIN SET @ABORT = CASE WHEN LEFT(@FLAGS, {##}) = {STR} THEN {##} ELSE @ABORT END IF (@ABORT = {##}) BEGIN SET @READY = {##} END ELSE BEGIN SET @READY = @READY END END END IF (@READY = {##}) BEGIN SE;45;132713565;2949190.33;523596;11635.47;66;1.47;100779;2239.53
SELECT IR.IDENT, IR.IDENT AS TH_IDENT, CAST(IR.TH_NUMBER AS VARCHAR({##})) +{STR}+ CAST(IR.TH_SEQ_NMB AS VARCHAR({##})) AS TRNUMBER, IR.TRO_IDENT AS TRO_IDENT, IR.TH_ORG_NAME AS TRORGNAME, IR.TH_CASH_ACC AS TRCASHACC, IR.TH_ORG_ACC AS THORGACC, IR.TH_AMOUNT_TO_PAY AS TRAMOUNT, IR.TH_CURR AS THCURR, IR.TH_DATE AS TRDATE, IR.TH_DETAILS AS THDETAILS, IR.TH_INCASSO_BAG AS THINCASSOBAG, IR.TH_PENDING AS WAITFLAG, IR.TH_STORNO AS STORNOFLAG, IR.TH_STORNO AS STORNO_FLAG, IR.TH_NUMBER AS TR_NUMBER, IR.TH_SEQ_NMB AS TH_SEQ_NUMBER, ISNULL(CAST(TH.TH_NUMBER AS VARCHAR({##})) +{STR}+ CAST(TH.TH_SEQ_NMB AS VARCHAR({##})),{STR}) AS INCOMETHNUMBER , ISNULL(IR.TH_REL_IDENT,{##}) AS TH_REL_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_CSREQUESTS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##}, {##} ) AS IR LEFT JOIN DBO.BPP_TR_HEADS AS TH ON IR.TH_REL_IDENT = TH.IDENT ORDER BY FLAG ASC, TRDATE DESC;963;325023126;337511.03;26656724;27680.92;2562;2.66;72215;74.99
EXEC @P#=TAB_COUNTRY_BOX_PROC;517;5769999;11160.54;271630;525.40;904;1.75;4159;8.04
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ Œ»Ã– ¿“–»¡”“€  Œ––—◊≈“Œ¬();2;6506;3253.00;114;57.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ Œ»Ã– ¿“–»¡”“€  Œ––—◊≈“Œ¬();1;19609;19609.00;80;80.00;1;1.00;0;0.00
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TAB_ACCMANAGE_CUSTOMERS END;302;5051370;16726.39;135029;447.12;157;0.52;1580;5.23
SELECT IDENT AS IDENT, THIDENT AS THIDENT, BALACCOUNT AS BALACCOUNT, TRNUMBER AS TRNUMBER, OPTYPE AS OPTYPE, VALUE_DATE AS VALUE_DATE, DEBIT AS DEBIT, CREDIT AS CREDIT, NARRATIVE AS NARRATIVE, DETAILS AS DETAILS, TOTALFLAG FROM DBO.FN_TAB_FO_ITEMOPERATIONS( {BS}, {STR}, {STR}, {STR}, {STR}, {STR}, {##} ) ORDER BY TOTALFLAG ASC,TRNUMBER ASC;217;1533996765;7069109.52;143746070;662424.29;291;1.34;1057914;4875.18
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_À» ¬»ƒÕŒ—“‹_ 3();3;14165;4721.67;322;107.33;0;0.00;16;5.33
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_SUBACC, BALANCE, SEARCHBY, AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY, CASHOFFICE FROM DBO.FN_TAB_ACCMANAGE_CASH_ACCOUNTS ( {STR}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CURRENCY ASC;1;206000;206000.00;3964;3964.00;1;1.00;204;204.00
DROP TABLE #PERIOD_WORKS;2;6837;3418.50;370;185.00;1;0.50;16;8.00
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TAB_ACCMANAGE_FO_ITEMACCOUNTSBALANCE END;3;59045;19681.67;1305;435.00;6;2.00;47;15.67
BACKUP DATABASE MASTER TO VIRTUAL_DEVICE={STR} WITH SNAPSHOT,BUFFERCOUNT={##},BLOCKSIZE={##};1;15813539;15813539.00;293;293.00;16;16.00;141;141.00
BS_ADMIN_INSERT_LOGINTYPE;6;79350;13225.00;200;33.33;2;0.33;31;5.17
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TR2SIGN, TRSTORNOFLAG, TRWAITFLAG, TRSECSIGNFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, DEBIT, CREDIT FROM DBO.FN_TAB_CUSTOMER_OPERATIONS ( {##}, {STR}, {STR}, {STR}, {STR}, {##} ) ORDER BY CONVERT(VARCHAR,TRVALDATE,{##})+CAST(IDENT AS VARCHAR) DESC;4;72698;18174.50;539;134.75;3;0.75;31;7.75
BPP_VADEMECUM_GET_DATA;367;51597355;140592.25;888627;2421.33;0;0.00;33839;92.20
BPP_TELEX_CHANNELS_GET;513;1198803;2336.85;35533;69.27;0;0.00;977;1.90
BPP_ACCOUNT_ATTRIBUTES_BY_ACCKEY;7819;170647074;21824.67;4293368;549.09;160;0.02;118340;15.13
SELECT IDENT, {STR} AS AC_LOCAL, CU_CODE, CU_NAME, SEQNMB, MAX(ISOPENACC) AS ISOPENACC, DOCSTATUS, OF_CODE, CU_CODE AS SEARCHBY, CU_CODE AS AC_NUMBER, {STR} AS BNK_ANNAME, FULL_PATH, OBJ_CATEGORY FROM #TAB_ACCMANAGE_CUSTOMERS GROUP BY IDENT,CU_CODE,CU_NAME,SEQNMB,DOCSTATUS,OF_CODE,FULL_PATH,OBJ_CATEGORY ORDER BY CU_NAME DESC;1;303518;303518.00;7472;7472.00;54;54.00;312;312.00
APP_ORDER_FIELSDS_GET;541;8258424;15265.11;377939;698.59;24;0.04;6245;11.54
SELECT * FROM #TAB_CREDIT_CARDS_TABLE ORDER BY ACCMATUR ASC;8;505049;63131.13;34674;4334.25;594;74.25;266;33.25
SELECT BIC.IDENT, BIC.INSTNAME1, RTRIM(BIC.BANKCODE)+BIC.BRANCHCODE AS BANKCODE, BIC.CITYHEAD, ISNULL(PB.BN_RATING,{##}) AS ISPROBLEMBANK FROM DBO.BICDBFIT AS BIC WITH (INDEX (BICSWIFTBR)) LEFT JOIN DBO.BPP_PROBLEM_BANKS AS PB ON BIC.BICSYSTEM = PB.BN_SYSTEM AND BIC.BANKCODE = PB.BN_CODE AND BIC.BRANCHCODE = PB.BN_BRANCH_CODE AND PB.DELETED = {##} AND PB.BN_RATING = ISNULL(NULL,PB.BN_RATING) WHERE BIC.BICSYSTEM = {STR} AND (ISNULL(PB.BN_RATING,{##}) IN(LIST)) ORDER BY BANKCODE ASC;9;11522089;1280232.11;1579722;175524.67;2644;293.78;9033;1003.67
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ »—“≈ ¿ﬁŸ»≈ ƒ≈œŒ«»“€();3;33230;11076.67;218;72.67;0;0.00;15;5.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ »—“≈ ¿ﬁŸ»≈ ƒ≈œŒ«»“€();6;108050;18008.33;1031;171.83;3;0.50;94;15.67
SELECT IDENT , NSASWIFT , NSACCOUNT , NSACURR , NSABALANCE, NSATOTAL FROM DBO.FN_BPP_NOSTRO_PLANBALANCES ( {##}, {STR}, {STR}, {STR}, {##}, {STR} ) ORDER BY NSASWIFT ASC;505;317796515;629300.03;56741802;112360.00;273;0.54;238359;472.00
UTL_REFUSE_OLD_PAYMENTS;1;9549009;9549009.00;111438;111438.00;0;0.00;8187;8187.00
BPP_BEN_ATTRIBUTES;639;421754;660.02;5355;8.38;0;0.00;280;0.44
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”¿ Œ“◊≈“ œŒ  ŒÃ»——»ﬂÃ();6;14692;2448.67;228;38.00;0;0.00;31;5.17
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”¿ Œ“◊≈“ œŒ  ŒÃ»——»ﬂÃ();3;9589;3196.33;108;36.00;0;0.00;0;0.00
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_NUMBER AS AC_SUBACC, AC_INTEREST, BALANCE, OF_CODE, CU_CODE + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS SEARCHBY, CU_CODE + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, CC_HOLDER, CC_MATURITYDATE, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_ALLACCOUNTS ( {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, AC_LOCAL ASC;2191;2405480160;1097891.45;14839751;6773.05;1854;0.85;1743804;795.89
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TAB_ACCMANAGE_CUSTOMERS END CREATE TABLE #TAB_ACCMANAGE_CUSTOMERS ( IDENT INT, CU_CODE VARCHAR({##}) NOT NULL, CU_NAME VARCHAR({##}) NULL, SEQNMB INT NULL, ISOPENACC INT NULL, DOCSTATUS VARCHAR({##}) NULL, OF_CODE VARCHAR({##}), FULL_PATH VARCHAR({##}) NULL, OBJ_CATEGORY INT NULL, OF_IDENT INT NULL );298;1061376;3561.66;34801;116.78;36;0.12;658;2.21
BPP_BIC_BANK_ATTRIBUTES;14;29659;2118.50;60;4.29;0;0.00;0;0.00
BPP_CUSTOMER_GETXML;274;910623104;3323441.99;9925062;36222.85;268523;980.01;427736;1561.08
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_Œœ≈–Œ Ã”À‹“»¬€œ»— ¿();2;56832;28416.00;218;109.00;1;0.50;0;0.00
SELECT IDENT, AG_IDENT, ISCHILD, CAPTION, BN_BN_CODE, BN_BR_CODE, RTRIM(BN_BN_CODE)+BN_BR_CODE AS SWIFTCODE, SWF_IDENT, SWF_DATE, SWF_TIME, SWF_FLAG, SWF_LEN, SWF_ACTUAL, RECORD, FOUND, SWF_TR_NMB, SWF_TR_SEQ_NMB FROM DBO.FN_TAB_TELEX_MANAGEMENT_TREE ( {STR}, {##}, {##}, {##}, {STR}, {STR}, {##}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR} ) ORDER BY SORTKEY;15;40351147;2690076.47;499281;33285.40;95;6.33;34359;2290.60
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, TR_NUMBER, TH_SEQ_NUMBER, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_DEPOSITOPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, DEBIT ASC;2;128237;64118.50;766;383.00;1;0.50;32;16.00
BPP_CUSTOMER_ATTRIBUTES;11944;472399495;39551.20;56059414;4693.52;0;0.00;360464;30.18
BPP_SYNCHRO_IBT_FR_PSB_GET;48;10399403;216654.23;382466;7968.04;214;4.46;3480;72.50
SELECT IDENT, AG_IDENT, ISCHILD, AN_NAME_RUS, AN_PATH, AN_MONIKER, AN_PATH+{STR}+AN_MONIKER AS AN_PATH_VIEW, FOUND, TAG_NAME, TAG_VALUE, SQL_EXPR FROM FN_TAB_CORRSCRPTITEM_BANKOBJ_NS_TREE({STR},{STR}) ORDER BY AN_PATH+{STR}+AN_MONIKER;2;609568;304784.00;4963;2481.50;0;0.00;563;281.50
SELECT IDENT , SWF_DATE, SWF_TIME, SWF_USER, SWF_FORM, SWF_FLAG, SWF_PHASE, SWF_LEN, SWF_IDENT, SWF_ACTUAL, SWF_TYPE, SWF_SENT_FLAG, TR_NMB, AMOUNT, CURRENCY, SWF_TR_NMB, SWF_TR_SEQ_NMB, SWX_MONIKER, SWX_CLASS, URG_FLAG, PAYMODE_FLAG, NOTFOUND_LIST FROM DBO.FN_TAB_TELEX_MESSAGES ( {STR}, {STR}, {##}, {##}, {##}, {STR}, {STR}, {##}, {STR} ) ORDER BY SWF_TIME ASC;351;13147245;37456.54;245805;700.30;83;0.24;11226;31.98
SELECT IDENT, FOUND, CU_CODE, CU_NAME, OF_CODE, FULL_PATH, OBJ_CATEGORY, FLAG, {STR} AS AC_NUMBER, {STR} AS AC_LOCAL, {STR} AS BNK_ANNAME, CU_CODE AS SEARCHBY, ISOPENACC FROM #TAB_ACCMANAGE_FSEARCHRESULT ORDER BY FLAG ASC, FOUND ASC;1;5676;5676.00;19;19.00;1;1.00;15;15.00
BPP_BANK_ATTRIBUTES_BY_IDENT;485;1173394;2419.37;49282;101.61;0;0.00;888;1.83
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”   »—“Œ–»ﬂ œÀ¿“≈∆¿();6;30203;5033.83;351;58.50;2;0.33;31;5.17
APP_EXCHCNTR_INFO;138;41247580;298895.51;2794503;20250.02;882;6.39;40767;295.41
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_œ— —œ»—Œ   ¿–“Œ◊Õ€’ —◊≈“Œ¬();5;77576;15515.20;448;89.60;4;0.80;15;3.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_œ— —œ»—Œ   ¿–“Œ◊Õ€’ —◊≈“Œ¬();10;2512244;251224.40;15437;1543.70;5;0.50;1766;176.60
CREATE TABLE #PERIOD_WORKS ( IDENT INT NULL , VM_IDENT INT NULL , WK_NAME VARCHAR({##}) NULL , WK_START DATETIME NULL , WK_FINAL DATETIME NULL , WK_CONDITION VARCHAR({##}) NULL, WK_ORDER INT ) DECLARE @UR_CODE T_USER EXECUTE BP_USER_GETBYACTIVE @UR_CODE = @UR_CODE OUTPUT INSERT INTO #PERIOD_WORKS ( IDENT , VM_IDENT, WK_NAME, WK_CONDITION, WK_ORDER ) SELECT CAST (VMFORD.AF_VALUE AS INT) AS IDENT, VM.IDENT AS VM_IDENT, VM.AN_NAME_RUS AS WK_NAME, CAST (VMFCOND.AF_VALUE AS VARCHAR({##})) AS WK_CONDITION, CAST (VMFORD.AF_VALUE AS INT) AS WK_ORDER FROM VADE_MECUM AS VM LEFT JOIN DBO.VADE_MECUM_FIELDS AS VMFORD ON VMFORD.AN_IDENT = VM.IDENT AND VMFORD.AF_NAME = {STR} AND VMFORD.DELETED ={##} LEFT JOIN DBO.VADE_MECUM_FIELDS AS VMFCOND ON VMFCOND.AN_IDENT = VM.IDENT AND VMFCOND.AF_NAME = {STR} AND VMFCOND.DELETED ={##} LEFT JOIN DBO.VADE_MECUM_FIELDS AS VMFRIGHT ON VMFRIGHT.AN_IDENT = VM.IDENT AND VMFRIGHT.AF_NAME = {STR} AND VMFRIGHT.DELETED ={##} WHERE VM.AN_PATH = {STR} AND VM.DELETED ={##} AND ISNULL(UPPER(VMFCOND.AF_VALUE),{STR}) <> {STR} AND DBO.FN_BPP_USER_HAS_RIGHT(@UR_CODE, ISNULL(VMFRIGHT.AF_VALUE, {STR})) = {##};2;74492;37246.00;692;346.00;6;3.00;62;31.00
BPP_LOAN_PENALTY_CALCULATE;31;12873525;415275.00;123587;3986.68;16;0.52;5844;188.52
UPDATE BPP_SYNCHRONIZATION_OUTBOX SET OB_DELAY_LEVEL = {##} WHERE OB_OPEN_DATE >= {STR} AND OB_QUEUE_NAME = {STR} AND OB_FLAG = {STR};4;145883;36470.75;13328;3332.00;4;1.00;140;35.00
SELECT IDENT, TRNUMBER, URGENCY, ORG_NAME, ACCOUNT, VALDATE, PLANDATE, CURRENCY, AMOUNT, NOACCOUNT, NSACCFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, NSACODE, ANALITICS, EXCH_FLAG, INCASSO_FLAG, TOPROCESS, PROCESSED, NOTES, COMMISSION, PAYMODE_FLAG FROM DBO.FN_TAB_PAYMPLAN_CASHLESS_TABLE ( {STR}, {STR}, {##}, {STR}, {##}, {STR}, {STR}, {STR}, {STR}, {STR}, {##}, {##}, {STR} ) ORDER BY CURRENCY ASC;39;23610145;605388.33;360413;9241.36;149;3.82;15552;398.77
BPP_REGISTERHBINTERCHANGE;1209;61970285;51257.47;245481;203.04;9;0.01;46835;38.74
[AUBBPPDATABASE]..SP_PROCEDURE_PARAMS_ROWSET;19833;58615176;2955.44;1139997;57.48;45;0.00;41746;2.10
SET NOEXEC, PARSEONLY, FMTONLY OFF;1;141;141.00;0;0.00;0;0.00;0;0.00
SELECT IDENT, CU_CODE, CU_CODE AS AC_NUMBER, {STR} AS AC_LOCAL, CU_NAME, {STR} AS BNK_ANNAME, BALANCE, CU_CODE AS SEARCHBY, FLAG, FULL_PATH, OBJ_CATEGORY, WRONGOFFICE FROM DBO.FN_TAB_ACCMANAGE_WRONGS ( {STR}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CU_CODE ASC;21;66754333;3178777.76;431961;20569.57;34;1.62;51845;2468.81
BPP_RENEWLIMITEDORDERS;1;353771;353771.00;11237;11237.00;0;0.00;47;47.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT__ÿ“–»’- Œƒ();10;57408;5740.80;487;48.70;3;0.30;31;3.10
SELECT DTB.IS_ANSI_NULL_DEFAULT_ON AS ANSINULLDEFAULT, DTB.IS_ANSI_NULLS_ON AS ANSINULLSENABLED, DTB.IS_ANSI_PADDING_ON AS ANSIPADDINGENABLED, DTB.IS_ANSI_WARNINGS_ON AS ANSIWARNINGSENABLED, DTB.IS_ARITHABORT_ON AS ARITHMETICABORTENABLED, DTB.IS_AUTO_CLOSE_ON AS AUTOCLOSE, DTB.IS_AUTO_CREATE_STATS_ON AS AUTOCREATESTATISTICS, DTB.IS_AUTO_SHRINK_ON AS AUTOSHRINK, DTB.IS_AUTO_UPDATE_STATS_ON AS AUTOUPDATESTATISTICS, DTB.IS_CURSOR_CLOSE_ON_COMMIT_ON AS CLOSECURSORSONCOMMITENABLED, DTB.IS_CONCAT_NULL_YIELDS_NULL_ON AS CONCATENATENULLYIELDSNULL, DTB.IS_NUMERIC_ROUNDABORT_ON AS NUMERICROUNDABORTENABLED, DTB.IS_QUOTED_IDENTIFIER_ON AS QUOTEDIDENTIFIERSENABLED, DTB.IS_READ_ONLY AS READONLY, DTB.IS_RECURSIVE_TRIGGERS_ON AS RECURSIVETRIGGERSENABLED, DTB.IS_LOCAL_CURSOR_DEFAULT AS LOCALCURSORSDEFAULT, DTB.PAGE_VERIFY_OPTION AS PAGEVERIFY, DTB.RECOVERY_MODEL AS RECOVERYMODEL, DTB.USER_ACCESS AS USERACCESS, DTB.SNAPSHOT_ISOLATION_STATE AS SNAPSHOTISOLATIONSTATE, DTB.IS_DB_CHAINING_ON AS DATABASEOWNERSHIPCHAINING, DTB.IS_AUTO_UPDATE_STATS_ASYNC_ON AS AUTOUPDATESTATISTICSASYNC, DTB.IS_DATE_CORRELATION_ON AS DATECORRELATIONOPTIMIZATION, DTB.IS_BROKER_ENABLED AS BROKERENABLED, DTB.IS_TRUSTWORTHY_ON AS TRUSTWORTHY, DTB.IS_PARAMETERIZATION_FORCED AS ISPARAMETERIZATIONFORCED, (CASE DMI.MIRRORING_REDO_QUEUE_TYPE WHEN {STRN} THEN {##} ELSE DMI.MIRRORING_REDO_QUEUE END) AS MIRRORINGREDOQUEUEMAXSIZE, DMI.MIRRORING_CONNECTION_TIMEOUT AS MIRRORINGTIMEOUT FROM MASTER.SYS.DATABASES AS DTB LEFT OUTER JOIN SYS.DATABASE_MIRRORING AS DMI ON DMI.DATABASE_ID = DTB.DATABASE_ID WHERE (DTB.NAME={STRN}) DROP TABLE #TMP_SP_DB_VARDECIMAL_STORAGE_FORMAT;2;25189;12594.50;37;18.50;0;0.00;15;7.50
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TAB_BANKS_TABLE END;143;1789835;12516.33;32147;224.80;147;1.03;811;5.67
SELECT IDENT, AN_PATH+{STR}+AN_MONIKER AS REF_PATH_CODE, AN_DESCR AS RFFULLNM, AN_NAME+{STR}+AN_DESCR AS REF_NAME_RFFULLNM, AG_PATH, AN_TERMINAL_FLAG FROM DBO.FN_BPP_VADE_MECUM_TREE({##},{STR}, {STR}) WHERE ((DATALENGTH(AG_PATH) / {##}) - {##}) <> {##} AND AN_ACTIVE_FLAG = {STR} AND AN_TERMINAL_FLAG = {STR} ORDER BY AG_PATH;1018;1123154775;1103295.46;136601942;134186.58;73584;72.28;825084;810.50
SELECT IDENT, CU_CODE, ACC_FULL, BALANCE, SH_DATE, AC_NUMBER AS SEARCHBY, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, OF_CODE, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_DEBTORS_SCHEDULES ( {STR}, {STR}, {##} ) ORDER BY FLAG ASC, ACC_FULL ASC;1;702914522;702914522.00;4238465;4238465.00;680;680.00;552343;552343.00
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_APO_DEALS();1;2364;2364.00;79;79.00;0;0.00;0;0.00
APP_SIGNIMAGE_SET;12;542075;45172.92;11986;998.83;385;32.08;331;27.58
SELECT IDENT, TRNUMBER, URGENCY, ORG_NAME, ACCOUNT, VALDATE, PLANDATE, CURRENCY, AMOUNT, NOACCOUNT, NSACCFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, NSACODE, ANALITICS, EXCH_FLAG, INCASSO_FLAG, TOPROCESS, PROCESSED, NOTES, COMMISSION, PAYMODE_FLAG FROM DBO.FN_TAB_PAYMPLAN_CASHLESS_TABLE ( {STR}, {STR}, {##}, {STR}, {##}, {STR}, {STR}, {STR}, {STR}, {STR}, {##}, {##}, {STR} ) ORDER BY ORG_NAME ASC;1;1746855;1746855.00;8693;8693.00;4;4.00;703;703.00
BPP_LOCAL_NUMBER_DIRECT;70;318421;4548.87;952;13.60;0;0.00;63;0.90
BS_OFFLINE_INSERT_ORDER;321;83042129;258698.22;857107;2670.12;3279;10.21;58905;183.50
BPP_EPAYMENT_FILE_INSERT;1;34057;34057.00;38;38.00;3;3.00;16;16.00
SELECT IDENT, AG_IDENT, ISCHILD, CAPTION, BN_BN_CODE, BN_BR_CODE, RTRIM(BN_BN_CODE)+BN_BR_CODE AS SWIFTCODE, SWF_IDENT, SWF_DATE, SWF_TIME, SWF_FLAG, SWF_LEN, SWF_ACTUAL, RECORD, FOUND, SWF_TR_NMB, SWF_TR_SEQ_NMB FROM DBO.FN_TAB_TELEX_MANAGEMENT_TREE ( {STR}, NULL, NULL, NULL, {STR}, {STR}, NULL, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR} ) ORDER BY SORTKEY;95;9739801;102524.22;223569;2353.36;317;3.34;2299;24.20
BPP_TRANSQUEUE_RETRIEVE;373;6476111;17362.23;27276;73.13;0;0.00;3591;9.63
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_NBKR_–¿—◊≈“ À»Ã»“¿ œŒ«»÷»»();4;1079106;269776.50;9069;2267.25;26;6.50;172;43.00
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_NBKR_–¿—◊≈“ À»Ã»“¿ œŒ«»÷»»();2;6581;3290.50;218;109.00;0;0.00;0;0.00
[RPT_Œœ≈–Œ »—“≈ ¿ﬁŸ»≈ ƒ≈œŒ«»“€];3;269369;89789.67;1423;474.33;0;0.00;125;41.67
BPP_SWIFT_NBKRFILES_CHECK;30;7397900;246596.67;45335;1511.17;0;0.00;5095;169.83
SELECT SEL.IDENT AS IDENT, SEL.CODE AS CODE, SEL.NAME AS NAME, SEL.CURRENCY AS CURRENCY, SEL.FULLACC AS FULLACC FROM ( SELECT ISNULL(-OAT.IDENT, CUS.IDENT) AS IDENT, CAST(CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_CODE ELSE OAT.AN_MONIKER END AS VARCHAR({##})) AS CODE, CURR.CURRENCY AS CURRENCY, RTRIM(CAST(CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_CODE ELSE OAT.AN_MONIKER END AS VARCHAR({##})))+{STR}+ACC.AC_KIND+{STR}+CURR.CURRENCY+{STR}+(CASE WHEN ACC.AC_NUMBER = {STR} THEN {STR} ELSE ACC.AC_NUMBER END) AS FULLACC, CONVERT ( VARCHAR({##}), DBO.FN_CHOOSE_LANGUAGE ( CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_NAME_RUS ELSE OAT.AN_NAME_RUS END, CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_NAME_ENG ELSE OAT.AN_NAME_ENG END ) ) AS NAME FROM DBO.BPP_OPTIONS AS OPT INNER JOIN DBO.BPP_ACCOUNTS AS ACC ON OPT.BN_IDENT = ACC.BN_IDENT INNER JOIN DBO.CURRENCY AS CURR ON CURR.IDENT = ACC.CURR_IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUS ON ACC.CU_IDENT = CUS.IDENT LEFT JOIN DBO.BPP_OWN_TAG_LINKS AS OWN INNER JOIN DBO.VADE_MECUM AS OAT ON OAT.IDENT = OWN.AN_IDENT ON OWN.AC_IDENT = ACC.IDENT WHERE (ACC.AC_CLOSED <> {STR}) AND (ACC.DELETED = {##}) ) AS SEL WHERE DBO.FN_TAB_FULL_ACCOUNTS_BOX_FILTER ( SEL.IDENT, SEL.CODE, {STR} ) = {##} ORDER BY FULLACC;347;435154203;1254046.69;2463672;7099.92;98;0.28;337474;972.55
BPP_TRANSIT_ACCOUNT_FOUND;70;36469;520.99;284;4.06;0;0.00;16;0.23
BPP_OVERDRAFTPROVISION_GET;680;47310481;69574.24;144044;211.83;1;0.00;40632;59.75
BPP_PAYMPLAN_UPDATE_VALDATE;26;82135;3159.04;225;8.65;0;0.00;31;1.19
BS_OFFLINE_GET_STATEMENT;368;78596954;213578.68;402579;1093.96;2097;5.70;47344;128.65
APP_SYNCHRONIZATION_INBOX_LIST;1;604247;604247.00;17572;17572.00;0;0.00;172;172.00
APP_SYNCREQUESTS_LIST;2;1132429;566214.50;8053;4026.50;1;0.50;751;375.50
BPP_BRANCHTRANSACTIONSYNCHRONIZATION;122;962370;7888.28;7729;63.35;8;0.07;342;2.80
BPP_NEWTREE_GETNODE;27585;39849636;1444.61;2614592;94.78;0;0.00;27103;0.98
SELECT IDENT, FOUND, CU_CODE, CU_NAME, OF_CODE, FULL_PATH, OBJ_CATEGORY, FLAG, {STR} AS AC_NUMBER, {STR} AS AC_LOCAL, {STR} AS BNK_ANNAME, CU_CODE AS SEARCHBY, ISOPENACC FROM #TAB_ACCMANAGE_FSEARCHRESULT ORDER BY FLAG ASC, CU_CODE ASC;1725;2720456;1577.08;48698;28.23;404;0.23;1094;0.63
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_IT_SWIFTLIST();18;70700;3927.78;665;36.94;3;0.17;16;0.89
BPP_MESSAGES_GET_LIST;336;2344516;6977.73;6232;18.55;0;0.00;235;0.70
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¿”ƒ»“ œ–¿¬¿ √–”œœ » œŒÀ‹«Œ¬¿“≈À≈…();1;14049;14049.00;112;112.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¿”ƒ»“ œ–¿¬¿ √–”œœ » œŒÀ‹«Œ¬¿“≈À≈…();2;198936;99468.00;8402;4201.00;62;31.00;156;78.00
BPP_TRANSACTION_CARD_ACCOUNT_INSERT;2;219985;109992.50;1186;593.00;6;3.00;204;102.00
BPP_GET_BUSINESS_TYPES;112;6983663;62354.13;187892;1677.61;287;2.56;4735;42.28
CREATE TABLE #AC_TURNS ( IDENT INT IDENTITY ({##}, {##}) NOT NULL , AC_IDENT INT NULL , BAL_DATE DATETIME NULL, DEBIT NUMERIC({##},{##}) NULL , CREDIT NUMERIC({##},{##}) NULL, INT_PAID NUMERIC({##},{##}) NULL, INT_ACCRUED NUMERIC({##},{##}) NULL, INT_RATE NUMERIC({##},{##}) NULL, CASHFLOW NUMERIC({##},{##}) NULL ) CREATE TABLE #ACCOUNTS ( IDENT INT IDENTITY ({##}, {##}) NOT NULL , AC_IDENT INT NOT NULL , CU_IDENT INT NOT NULL , CURR_IDENT INT NOT NULL , CU_CODE VARCHAR({##}) NULL , AC_KIND VARCHAR({##}) NULL , CURRENCY CHAR({##}) NULL, AC_SUB VARCHAR({##}) NULL, INT_IRR NUMERIC({##},{##}) NULL, INT_RATE NUMERIC({##},{##}) NULL, OPEN_DATE DATETIME NULL, CLOSE_DATE DATETIME NULL, MATURITY_DATE DATETIME NULL, ACCRUED_METHOD CHAR({##}) NOT NULL, OPEN_BALANCE NUMERIC({##},{##}) NULL, YTMDAYSINYEAR INT, ISSCHEDULED INT NULL, BALANCE_CURRENT NUMERIC({##},{##}) NULL, CORR_ORDER NUMERIC({##},{##}) NULL, ACCR_ORDER NUMERIC({##},{##}) NULL, CORR_FLAG NUMERIC({##}) NULL, NEW_FLAG NUMERIC({##}) NULL, TRNUMBER VARCHAR({##}) NULL ) CREATE TABLE #AC_XML_RESULTS ( AC_IDENT INT NOT NULL , AC_XML_ITEMS VARCHAR({##}), AC_LOG TEXT );157;2459869;15667.96;63474;404.29;83;0.53;1199;7.64
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, OF_CODE, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_CURRENT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, DEBIT DESC;20;1345723;67286.15;25090;1254.50;64;3.20;642;32.10
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCOUNTS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCTURNOVERS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCPROPERTIES END CREATE TABLE #ACCOUNTS ( AC_IDENT INT NOT NULL , CU_CODE VARCHAR({##}), CURR_IDENT INT, CURRENCY VARCHAR({##}), AC_KIND VARCHAR({##}), AC_SUB VARCHAR({##}), AC_OPEN_DATE DATETIME ) CREATE TABLE #ACCTURNOVERS ( AC_IDENT INT, VALUE_DATE DATETIME, PR_RESIDUE NUMERIC({##},{##}), PR_DUE NUMERIC({##},{##}), PR_OVERDUE NUMERIC({##},{##}), INT_RESIDUE NUMERIC({##},{##}), INT_DUE NUMERIC({##},{##}), INT_OVERDUE NUMERIC({##},{##}), PENALTY_PAID NUMERIC({##},{##}) ) CREATE TABLE #ACCPROPERTIES ( AC_IDENT INT NOT NULL , VALUE_DATE DATETIME, PENALTY_PARAMS VARCHAR({##}) ) INSERT INTO #ACCOUNTS ( AC_IDENT , CU_CODE , CURR_IDENT , CURRENCY , AC_KIND , AC_SUB , AC_OPEN_DATE ) SELECT AC.IDENT, CU.CU_CODE, AC.CURR_IDENT, CURR.CURRENCY, AC.AC_KIND, AC_NUMBER, AC_OPEN_DATE FROM DBO.BPP_ACCOUNTS AS AC INNER JOIN DBO.BPP_CUSTOMERS AS CU ON AC.CU_IDENT = CU.IDENT INNER JOIN DBO.CURRENCY AS CURR ON AC.CURR_IDENT = CURR.IDENT CROSS JOIN DBO.BPP_OPTIONS AS OPT WHERE AC.IDENT IN(LIST) AND AC.CU_IDENT <> OPT.CU_IDENT AND AC.BN_IDENT = OPT.BN_IDENT AND AC_CLOSED <> {STR} AND AC.AC_KIND IN(LIST) AND AC.DELETED = {##} AND CU.DELETED = {##} AND CURR.DELETED = {##} AND OPT.DELETED = {##};38;2281287;60033.87;13152;346.11;17;0.45;1872;49.26
BPP_TELEX_GET_LENGTH;71;807794;11377.38;1871;26.35;0;0.00;108;1.52
BPP_BRANCHES_LIST;5;47865;9573.00;85;17.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_¬€œ»— ¿ œŒ —◊≈“”();3;30875;10291.67;327;109.00;0;0.00;15;5.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_¬€œ»— ¿ œŒ —◊≈“”();6;175703;29283.83;1925;320.83;0;0.00;188;31.33
SELECT IDENT, AN_PATH+{STR}+AN_MONIKER AS REF_PATH_CODE, AN_DESCR AS RFFULLNM, AN_NAME+{STR}+AN_DESCR AS REF_NAME_RFFULLNM, AG_PATH, AN_TERMINAL_FLAG FROM DBO.FN_BPP_VADE_MECUM_TREE({##},{STR}, {##}) WHERE ((DATALENGTH(AG_PATH) / {##}) - {##}) <> {##} AND AN_ACTIVE_FLAG = {STR} AND AN_TERMINAL_FLAG = {STR} ORDER BY AG_PATH;655;789415670;1205214.76;87889286;134182.12;47509;72.53;548640;837.62
DECLARE @SIMILARORDER VARCHAR({##}) EXEC EXCHCTRL_GET_ORDER_BY_IDENT @SIMILARIDENT, @SIMILARORDER OUTPUT SELECT @SIMILARORDER;560;177300;316.61;1174;2.10;0;0.00;126;0.23
BPP_WORK_COMPLETE_TRANS_IMPORT;2;72025;36012.50;46;23.00;0;0.00;0;0.00
BS_OFFLINE_GET_ORDERSTATUS;42;10516464;250392.00;6109200;145457.14;19;0.45;15823;376.74
BS_ADMIN_GET_PINSTATISTICS;2;6528;3264.00;71;35.50;0;0.00;0;0.00
SELECT IR.IDENT, IR.IDENT AS TH_IDENT, CAST(IR.TH_NUMBER AS VARCHAR({##})) +{STR}+ CAST(IR.TH_SEQ_NMB AS VARCHAR({##})) AS TRNUMBER, IR.TH_ORG_NAME AS TRORGNAME, IR.TH_CASH_ACC AS TRCASHACC, IR.TH_AMOUNT_TO_PAY AS TRAMOUNT, IR.TH_DATE AS TRDATE, IR.TH_DETAILS AS THDETAILS, IR.TH_INCASSO_BAG AS THINCASSOBAG, IR.TH_MODE AS THMODE, IR.TH_TOTAL_AMOUNT AS TOTALAM, IR.TH_PENDING AS WAITFLAG, IR.TH_STORNO AS STORNOFLAG, IR.TH_STORNO AS STORNO_FLAG, IR.TH_NUMBER AS TR_NUMBER, IR.TH_SEQ_NMB AS TH_SEQ_NUMBER, ISNULL(CAST(TH.TH_NUMBER AS VARCHAR({##})) +{STR}+ CAST(TH.TH_SEQ_NMB AS VARCHAR({##})),{STR}) AS INCOMETHNUMBER, ISNULL(IR.TH_REL_IDENT,{##}) AS TH_REL_IDENT, IR.TH_CASH_ACC AS AC_NUMBER, IR.TH_ORG_NAME AS CU_NAME, IR.TH_CASH_ACC AS AC_LOCAL, {STR} AS BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_REQUESTS ( {STR}, {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##}, {##} ) AS IR LEFT JOIN DBO.BPP_TR_HEADS AS TH ON IR.TH_REL_IDENT = TH.IDENT ORDER BY FLAG ASC, TRDATE DESC;318;16512947;51927.51;1586813;4989.98;187;0.59;10941;34.41
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_APO_DEALS();2;16533;8266.50;109;54.50;0;0.00;0;0.00
BPP_TRANSACTION_OPERATION_STACK_DROP;1989;5864260;2948.35;15814;7.95;0;0.00;5158;2.59
SELECT ACC.IDENT, VM.AN_MONIKER AS ACCOUNT, ACC.AC_KIND AS ACCKIND, ACC.AC_NUMBER AS ACCSUB, CURRENCY.CURRENCY AS ACCCURR, DBO.FN_BPP_LOCAL_NUMBER_DIRECT(ACC.IDENT,NULL, NULL) AS ACCLOCALNMB, ISNULL(AMT_ACC.AMOUNT, {##}) AS ACCAMNT, CASE WHEN ACC.AC_CLOSED = {STR} THEN {##} ELSE {##} END AS ACCCLOSEDFLAG, {##}.{##} AS ACCINTER, {STR} AS ACCMATUR, {STR} AS ACCREFTYPE, DBO.FN_CHOOSE_LANGUAGE(VM.AN_NAME_RUS, VM.AN_NAME_ENG) AS CLNAME FROM (SELECT * FROM DBO.BPP_ACCOUNTS WHERE DELETED = {##}) AS ACC INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OTL ON ACC.IDENT = OTL.AC_IDENT RIGHT OUTER JOIN DBO.VADE_MECUM AS VM ON VM.IDENT = OTL.AN_IDENT AND (VM.DELETED = {##}) LEFT JOIN DBO.CURRENCY ON ACC.CURR_IDENT = CURRENCY.IDENT LEFT JOIN ( SELECT AMT.FO_IDENT - {##} AS FO_IDENT, ISNULL(AMT.AM_CR_BAL_OUT, {##}) - ISNULL(AMT.AM_DR_BAL_OUT, {##}) AS AMOUNT FROM DBO.BPP_AMOUNTS AMT INNER JOIN DBO.BKPERIOD PR_FACT ON (AMT.PR_IDENT = PR_FACT.IDENT) AND (PR_FACT.BPTODATE = {STR}) INNER JOIN DBO.BPP_FOREST_TREES AS FT ON CAST(SUBSTRING(AMT.FO_BIN_IDENT,{##},{##}) AS INT) = FT.IDENT INNER JOIN DBO.BPP_FOREST_GENERATORS AS FG ON FT.FT_GENERATOR_IDENT = FG.IDENT AND FG.FG_TREE_NAME = {STR} ) AMT_ACC ON ACC.IDENT = AMT_ACC.FO_IDENT WHERE (VM.AN_PATH LIKE {STR}) AND (VM.AN_MONIKER LIKE RTRIM(DBO.FN_OWNACCPATTERN({STR}))) AND (CASE WHEN ACC.AC_CLOSED = {STR} THEN {##} ELSE {##} END IN(LIST)) ORDER BY ACCOUNT ASC;1;1069800;1069800.00;285783;285783.00;0;0.00;1078;1078.00
[AUBBPPDATABASE].[SYS].[SP_PROCEDURE_PARAMS_MANAGED];561;8505680;15161.64;50748;90.46;23;0.04;5451;9.72
BPP_REPORTS_PARAMETERS_GET;1;79217;79217.00;1369;1369.00;5;5.00;78;78.00
BPP_TRANSACTION_GET_NOSTRO;590;432650;733.31;27870;47.24;0;0.00;251;0.43
BS_ADMIN_GET_USERSBYGROUP;28;1091993;38999.75;5763;205.82;4;0.14;793;28.32
BS_ADMIN_INSERT_USER;3;8901629;2967209.67;106040;35346.67;103;34.33;3625;1208.33
SELECT IDENT, AN_PATH+{STR}+AN_MONIKER AS REF_PATH_CODE, SPACE({##}*(DATALENGTH(AG_PATH)/{##}{##}))+AN_DESCR AS RFFULLNM, SPACE({##}*(DATALENGTH(AG_PATH)/{##}{##}))+AN_NAME+{STR}+AN_DESCR AS REF_NAME_RFFULLNM, AG_PATH, AN_TERMINAL_FLAG FROM DBO.FN_BPP_VADE_MECUM_TREE({##},{STR}, {STR}) WHERE ((DATALENGTH(AG_PATH) / {##}) - {##}) <> {##} AND AN_ACTIVE_FLAG = {STR} ORDER BY AG_PATH;1220;15430289;12647.78;547965;449.15;168;0.14;6880;5.64
BPP_TRANSACTION_TELEX_IS_SENT;1183;547924;463.16;20192;17.07;0;0.00;469;0.40
BPP_CHECK_RESOURCE;5;71677;14335.40;38;7.60;0;0.00;0;0.00
BPP_MQ_SENDMESSAGE;15;199871;13324.73;311;20.73;24;1.60;15;1.00
BPP_TRANSACTION_SET_CROSS_IDENTS;774;1499259;1937.03;7296;9.43;97;0.13;221;0.29
BPP_BRANCH_MAIN_FLAG;964;258232;267.88;5079;5.27;0;0.00;300;0.31
BPP_BANK_ATTRIBUTES_BY_SWIFT;1936;12570115;6492.83;161139;83.23;0;0.00;9008;4.65
USE AUBBPPDATABASE SELECT IS_MEMBER({STRN}) AS ISDBACCESSADMIN, IS_MEMBER({STRN}) AS ISDBBACKUPOPERATOR, IS_MEMBER({STRN}) AS ISDBDATAREADER, IS_MEMBER({STRN}) AS ISDBDATAWRITER, IS_MEMBER({STRN}) AS ISDBOWNER, IS_MEMBER({STRN}) AS ISDBSECURITYADMIN, IS_MEMBER({STRN}) AS ISDBDDLADMIN, IS_MEMBER({STRN}) AS ISDBDENYDATAREADER, IS_MEMBER({STRN}) AS ISDBDENYDATAWRITER, IS_MEMBER({STRN}) AS DBOLOGIN, USER_NAME() AS USERNAME, (SELECT SUM(CAST(DF.SIZE AS FLOAT)) FROM SYS.DATABASE_FILES AS DF WHERE DF.TYPE IN(LIST) ) AS DBSIZE, SUM(A.TOTAL_PAGES) AS SPACEUSED, (SELECT SUM(CAST(DF.SIZE AS FLOAT)) FROM SYS.DATABASE_FILES AS DF WHERE DF.TYPE IN(LIST)) AS LOGSIZE, SUM(CASE WHEN A.TYPE <> {##} THEN A.USED_PAGES WHEN P.INDEX_ID < {##} THEN A.DATA_PAGES ELSE {##} END) AS DATASPACEUSAGE, SUM(A.USED_PAGES) AS INDEXSPACETOTAL, (SELECT COUNT({##}) FROM SYS.SERVICES WHERE NAME ={STR}) AS ISMAILHOST, (SELECT DEFAULT_SCHEMA_NAME FROM SYS.DATABASE_PRINCIPALS WHERE NAME = USER_NAME()) AS DEFAULTSCHEMA, (SELECT DF.PHYSICAL_NAME FROM SYS.DATABASE_FILES AS DF WHERE {##}=DF.DATA_SPACE_ID AND {##} = DF.FILE_ID) AS PRIMARYFILEPATH FROM SYS.ALLOCATION_UNITS AS A INNER JOIN SYS.PARTITIONS AS P ON (A.TYPE = {##} AND P.PARTITION_ID = A.CONTAINER_ID) OR (A.TYPE IN(LIST) AND P.HOBT_ID = A.CONTAINER_ID);2;326008;163004.00;996;498.00;3;1.50;157;78.50
SELECT BIC.IDENT, BIC.INSTNAME1, RTRIM(BIC.BANKCODE)+BIC.BRANCHCODE AS BANKCODE, BIC.CITYHEAD, ISNULL(PB.BN_RATING,{##}) AS ISPROBLEMBANK FROM DBO.BICDBFIT AS BIC WITH (INDEX (BICSWIFTBR)) LEFT JOIN DBO.BPP_PROBLEM_BANKS AS PB ON BIC.BICSYSTEM = PB.BN_SYSTEM AND BIC.BANKCODE = PB.BN_CODE AND BIC.BRANCHCODE = PB.BN_BRANCH_CODE AND PB.DELETED = {##} AND PB.BN_RATING = ISNULL(NULL,PB.BN_RATING) WHERE BIC.BICSYSTEM = {STR} AND LEFT(BIC.BANKCODE + ISNULL(BIC.BRANCHCODE,{STR}),LEN({STR})) = {STR} AND (ISNULL(PB.BN_RATING,{##}) IN(LIST)) ORDER BY BANKCODE ASC;16;2018074;126129.63;22797;1424.81;9;0.56;1858;116.13
BPP_ORDER_FIELDS_WITH_PREFIX;659;335927;509.75;2785;4.23;0;0.00;284;0.43
[RPT_APO_DEALS_Œ–ƒ≈–];2;16058854;8029427.00;1740158;870079.00;1852;926.00;13013;6506.50
SELECT RT.IDENT AS IDENT, RT.RT_DATE AS RTDATE, CURRFR.CURRENCY AS RTFRCURRCY, CURRTO.CURRENCY AS RTTOCURRCY, RT.RT_RATE AS RTRATE, CONVERT(NUMERIC({##},{##}),RT.RT_RATE * ({##}.{##} - (CAST(DBO.FN_BPP_OPTIONS_FIELD(NULL, NULL, {STR}, NULL) AS NUMERIC({##},{##}))) / {##}.{##})) AS BUYINGRATE, CONVERT(NUMERIC({##},{##}),RT.RT_RATE * ({##}.{##} + (CAST(DBO.FN_BPP_OPTIONS_FIELD(NULL, NULL, {STR}, NULL) AS NUMERIC({##},{##}))) / {##}.{##})) AS SELLINGRATE FROM DBO.BPP_RATES AS RT INNER JOIN DBO.CURRENCY AS CURRFR ON RT.RT_FR_CURRCY = CURRFR.IDENT INNER JOIN DBO.CURRENCY AS CURRTO ON RT.RT_TO_CURRCY = CURRTO.IDENT WHERE RT.DELETED = {##} AND (CURRFR.CURRENCY IN(LIST)) AND (CURRTO.CURRENCY IN(LIST)) AND (CONVERT(CHAR, RT.RT_DATE, {##}) >= CONVERT(CHAR, {STR}, {##})) AND (CONVERT(CHAR, RT.RT_DATE, {##}) <= CONVERT(CHAR, {STR}, {##})) ORDER BY CONVERT(VARCHAR,RT.RT_DATE,{##})+CAST(RT.IDENT AS VARCHAR) DESC;12;4499256;374938.00;25541;2128.42;7;0.58;2890;240.83
SELECT CT.IDENT, CT.CTTYPE AS CTTYPE, BN.BANNAME AS BNNAME, ACC.AC_NUMBER AS NSACCOUNT, CURRENCY.CURRENCY AS NSACURR, EP.CNT_NAME AS PROC_CNTR, BNEP.BANNAME AS CLEAR_BANK FROM DBO.CCTYPES AS CT INNER JOIN DBO.BPP_ACCOUNTS AS ACC ON CT.EPAYCNT_ACC_IDENT = ACC.IDENT INNER JOIN DBO.CURRENCY ON ACC.CURR_IDENT = CURRENCY.IDENT INNER JOIN DBO.BANKS AS BN ON CT.BN_IDENT = BN.IDENT INNER JOIN DBO.BPP_EPAYCENTERS AS EP ON CT.EPAYCNT_IDENT = EP.IDENT INNER JOIN DBO.BANKS AS BNEP ON BNEP.BANLKCODE = EP.CNT_BANKLOCALCODE WHERE YEAR(CT.CT_STOP_DATE) = {##} ORDER BY CTTYPE ASC;2;292056;146028.00;1777;888.50;0;0.00;250;125.00
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_Œœ≈–Œ Ã”À‹“»¬€œ»— ¿();4;59987;14996.75;639;159.75;1;0.25;48;12.00
BPP_CONTEXTINFO_SET;23532;3612813;153.53;0;0.00;0;0.00;3522;0.15
BPP_TRANSACTION_CLOSEINVESTIGATION;60;36147;602.45;623;10.38;0;0.00;48;0.80
APP_BATCHPROTOCOL_LIST;2;22929011;11464505.50;62295;31147.50;12;6.00;14735;7367.50
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO, CORRNMB FROM DBO.FN_TAB_ACCMANAGE_OWN_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;970;346519394;357236.49;14823265;15281.72;52149;53.76;177765;183.26
BPP_GET_TRNMB_BY_TRHEADER_ID;2203;503787;228.68;6723;3.05;0;0.00;313;0.14
BEGIN SET XACT_ABORT OFF SET NOCOUNT ON DECLARE @ERR INT DECLARE @COUNT SMALLINT DECLARE @LANG VARCHAR({##}) DECLARE @UUID UNIQUEIDENTIFIER DECLARE @UUID_STR VARCHAR({##}) SET @ERR = {##} SET @UUID = NEWID() SET @UUID_STR = ISNULL(NULLIF(CONVERT(VARCHAR({##}),{STR}), {STR}), CONVERT(VARCHAR({##}), @UUID)) SET @LANG = CONVERT(VARCHAR({##}),{STR}) BEGIN TRANSACTION UPDATE DBO.BPP_ACTIVE_USERS SET UU_LANG_FLAG = CASE WHEN @LANG = {STR} THEN {STR} ELSE {STR} END, SDC_IDENT = SDC.IDENT FROM DBO.BPP_ACTIVE_USERS LEFT JOIN DBO.BPP_SDC AS SDC ON SDC_UUID = CONVERT(UNIQUEIDENTIFIER, @UUID_STR) WHERE UU_SPID = @@SPID SELECT @ERR = @@ERROR, @COUNT = @@ROWCOUNT IF (@ERR <> {##} OR @COUNT = {##}) BEGIN ROLLBACK TRANSACTION SET @ERR = {##} END ELSE BEGIN COMMIT TRANSACTION END SELECT @ERR AS ERR SET LANGUAGE @LANG END;676;9139414;13519.84;12210;18.06;8;0.01;4266;6.31
BPP_CREDIT_CARD_ACCOUNT_ATTRIBUTES_BY_KEY;3;302345;100781.67;3815;1271.67;7;2.33;203;67.67
BPP_GET_CUSTOMER_IDENT;114;36420;319.47;1875;16.45;0;0.00;16;0.14
BPP_FASTSEARCH_CHOOSE;481;3306309;6873.82;16100;33.47;162;0.34;1284;2.67
[RPT_NOSTRO_»“Œ√» œŒ —◊≈“¿Ã];1;46788157;46788157.00;1503986;1503986.00;7;7.00;18781;18781.00
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TAB_CREDIT_CARDS_TABLE END CREATE TABLE #TAB_CREDIT_CARDS_TABLE ( IDENT INT NOT NULL, ACCCTYPE VARCHAR({##}) NULL, ACCCNUMBER VARCHAR({##}) NULL, FULLACCOUNT VARCHAR({##}) NULL, ACCAMNT NUMERIC({##},{##}) NULL, CLNAME VARCHAR({##}) NULL, CCHOLDER VARCHAR({##}) NULL, BNNAME VARCHAR({##}) NULL, PROC_CNTR VARCHAR({##}) NULL, OFFICE VARCHAR({##}) NULL, PHASE VARCHAR({##}) NULL, ACCMATUR DATETIME NULL, CC_BLANK INT NULL, CC_WAIT INT NULL, CC_ACTIVE INT NULL, CC_CLOSED INT NULL, ACCOUNT VARCHAR({##}) NULL, ACCKIND CHAR({##}) NULL, ACCSUB VARCHAR({##}) NULL, ACCCURR VARCHAR({##}) NULL, ACCREFTYPE VARCHAR({##}) NULL, ACCINTER NUMERIC({##},{##}) NULL, CARDCOUNT INT NULL );24;153057;6377.38;5423;225.96;9;0.38;109;4.54
BPP_CHECK_VALDATE_CHANGING;556;229911;413.51;4228;7.60;0;0.00;315;0.57
[DOC_BDDTURNOVER];25;13423142;536925.68;970589;38823.56;19;0.76;8794;351.76
BPP_EPAYMENT_CENTER_GET;25;758224;30328.96;15762;630.48;0;0.00;687;27.48
SELECT DISTINCT OWN.IDENT, CAST(OWN.AN_MONIKER AS CHAR({##})) AS ACCOUNT, DBO.FN_CHOOSE_LANGUAGE(OWN.AN_NAME_RUS, OWN.AN_NAME_ENG) AS CLNAME FROM (SELECT * FROM DBO.VADE_MECUM WHERE AN_PATH = {STR} AND DELETED = {##}) AS OWN INNER JOIN DBO.BPP_OWN_TAG_LINKS AS LNK ON OWN.IDENT = LNK.AN_IDENT INNER JOIN DBO.BPP_ACCOUNTS AS ACC ON LNK.AC_IDENT = ACC.IDENT AND ACC.DELETED = {##} AND ACC.AC_CLOSED <> {STR} LEFT JOIN DBO.BPP_ALL_RIGHTS_VIEW AS UR ON ACC.ACCESS_RIGHT = UR.RT_MONIKER AND UR.USR_CODE_LOWER = LOWER(HOST_NAME()) AND UR.FINAL_FLAG <> {STR} WHERE UR.RT_MONIKER IS NOT NULL OR ACC.ACCESS_RIGHT IS NULL ORDER BY ACCOUNT ASC;103;16202875;157309.47;1336760;12978.25;373;3.62;11575;112.38
BPP_CURRENCY_ATTRIBUTES_BY_ISO;146;79342;543.44;1214;8.32;0;0.00;62;0.42
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_PLASTIC_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;14;1444984;103213.14;7905;564.64;34;2.43;267;19.07
[DOC_DEBADVICE];33;1222982;37060.06;22873;693.12;207;6.27;1144;34.67
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TAB_ACCMANAGE_FO_ITEMACCOUNTSBALANCE END CREATE TABLE #TAB_ACCMANAGE_FO_ITEMACCOUNTSBALANCE ( IDENT INT, FO_BIN_IDENT VARBINARY({##}) NOT NULL, MONIKER VARCHAR({##}) NOT NULL, AC_NAME VARCHAR({##}) NULL, CURRENCY CHAR({##}) NULL, CURR_IDENT INT, CR_BAL_IN NUMERIC({##},{##}) NULL, DR_BAL_IN NUMERIC({##},{##}) NULL, CR_TURN NUMERIC({##},{##}) NULL, DR_TURN NUMERIC({##},{##}) NULL, CR_TURN_CLR NUMERIC({##},{##}) NULL, DR_TURN_CLR NUMERIC({##},{##}) NULL, CR_BAL_OUT NUMERIC({##},{##}) NULL, DR_BAL_OUT NUMERIC({##},{##}) NULL, FULL_PATH VARCHAR({##}) NULL, OF_IDENT INT, AMOUNT_FLAG CHAR({##}), TERMINAL_FLAG CHAR({##}), FO_LEFT NUMERIC({##},{##}), FO_RIGHT NUMERIC({##},{##}), TOTALFLAG INT NOT NULL DEFAULT({##}), SEARCHBY VARCHAR({##}) NULL );3;21858;7286.00;719;239.67;2;0.67;15;5.00
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY CONVERT(VARCHAR,TRVALDATE,{##})+CAST(IDENT AS VARCHAR) ASC;1;26297;26297.00;413;413.00;0;0.00;0;0.00
BPP_PREPARE_XML;45;152951;3398.91;28;0.62;0;0.00;94;2.09
BPP_TRANSACTION_DOC_SIGN_CHECK;97;52383;540.03;503;5.19;0;0.00;31;0.32
BPP_ACCITEMPROP_GET;4;4944482;1236120.50;19280;4820.00;5;1.25;3516;879.00
SELECT IDENT, DBO.FN_CHOOSE_LANGUAGE(AN_NAME_RUS, AN_NAME_ENG) AS REF_NAME, ISNULL(AN_PATH + {STR},{STR}) + AN_MONIKER AS FULL_PATH FROM DBO.VADE_MECUM WHERE AN_PATH = {STR} AND DELETED = {##} AND AN_ACTIVE_FLAG = {STR};810;513889;634.43;16985;20.97;42;0.05;562;0.69
APP_MAIN_TREE_GET;195;1051569;5392.66;247862;1271.09;0;0.00;750;3.85
[RPT_Œœ≈–Œ »—’ŒƒﬂŸ»≈ œÀ¿“≈∆»  À»≈Õ“Œ¬];4;14731812;3682953.00;397814;99453.50;47;11.75;8298;2074.50
SELECT {##} * ISNULL(FLD.IDENT, {##}) + RPT.IDENT AS IDENT, ISNULL(FLD.AN_MONIKER, {STR}) AS FOLDER, RPT.NAME AS REPORT_NAME, ISNULL(FLD.AN_NAME_RUS, {STR}) AS FOLDER_NAME, RPT.REPORT AS REPORT_PROC, RPT.FLAG AS REPORT_FLAG, {STR} AS UUID FROM DBO.FN_BDD_REPORT_LIST() AS RPT LEFT JOIN ( SELECT IDENT, AN_MONIKER, AN_NAME_RUS, DD_FOLDER FROM DBO.VADE_MECUM LEFT JOIN ( SELECT DISTINCT DD_FOLDER FROM DBO.BPP_DAY_DOCUMENTS WHERE DD_UUID = {STR} ) AS SEL ON AN_MONIKER = DD_FOLDER WHERE AN_PATH = {STR} ) AS FLD ON RPT.FLAG = {STR} WHERE (RPT.FLAG = {STR}) OR (RPT.FLAG = {STR} AND DD_FOLDER IS NOT NULL) ORDER BY {##} ASC;25;8656404;346256.16;471486;18859.44;20;0.80;2717;108.68
[RPT_Œ Œ»Ã– ¿“–»¡”“€  Œ––—◊≈“Œ¬];1;25479234;25479234.00;1800538;1800538.00;1898;1898.00;22984;22984.00
APP_MESSAGING_TREE_GET;25;179688;7187.52;29591;1183.64;0;0.00;47;1.88
BPP_OPTIONS_PREPARE_XML;925;12496028;13509.22;225313;243.58;6307;6.82;7088;7.66
SELECT CUR.IDENT AS IDENT, CUR.CURRENCY AS CURRENCY, CASE WHEN CUR.CURRENCY IN(LIST) THEN {##} ELSE {##} END AS RANK FROM DBO.CURRENCY AS CUR WHERE CUR.DELETED = {##} ORDER BY RANK, CURRENCY;24;56211;2342.13;3954;164.75;14;0.58;77;3.21
BPP_GET_TRHEADER_ID_BY_TRNMB;8445;1907400;225.86;50735;6.01;0;0.00;2051;0.24
BPP_OPERATION_ATTRIBUTES;820;7318550;8925.06;46499;56.71;15;0.02;2869;3.50
BPP_TRANSACTION_NOSTRO_ACCOUNT_UPDATE;4;68825046;17206261.50;842412;210603.00;149;37.25;47784;11946.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_APO_DEALS_Œ–ƒ≈–();3;41110;13703.33;327;109.00;1;0.33;15;5.00
SET XACT_ABORT OFF SET NOCOUNT ON DECLARE @ERR INT DECLARE @COUNT INT SET @ERR = {##} BEGIN TRANSACTION DELETE FROM DBO.BPP_ACTIVE_USERS WHERE UU_SPID = @@SPID DELETE DBO.BPP_ACTIVE_USERS FROM DBO.BPP_ACTIVE_USERS INNER JOIN DBO.BPP_USERS AS USR ON BPP_ACTIVE_USERS.USR_IDENT = USR.IDENT WHERE USR.USR_CODE_LOWER = LOWER(HOST_NAME()) AND USR.USR_STOP_DATE = CONVERT(DATETIME,{STR},{##}) AND UU_PROCESS = {STR} INSERT INTO DBO.BPP_ACTIVE_USERS ( UU_SPID, USR_IDENT, UU_PROCESS ) SELECT @@SPID, USR.IDENT, {STR} FROM DBO.BPP_USERS AS USR WHERE USR.USR_CODE_LOWER = LOWER(HOST_NAME()) AND USR.USR_STOP_DATE = CONVERT(DATETIME,{STR},{##}) SELECT @ERR = @@ERROR, @COUNT = @@ROWCOUNT IF (@ERR <> {##} OR @COUNT = {##}) BEGIN ROLLBACK TRANSACTION SET @ERR = {##} END ELSE BEGIN COMMIT TRANSACTION END EXECUTE BPP_CONTEXTINFO_RESET SELECT @ERR AS RET;1002;5478456;5467.52;21731;21.69;72;0.07;1236;1.23
APP_EXCHANGECONTROLSUSAGEPARAMS_EDIT;1;50386;50386.00;456;456.00;1;1.00;16;16.00
[RPT_DAY_ENDUP];7;588483995;84069142.14;13685761;1955108.71;1545;220.71;304731;43533.00
SELECT AC_IDENT, CU_CODE, CURR_IDENT, CURRENCY, AC_KIND, AC_SUB, AC_OPEN_DATE, MATURITY_DATE, VALDATE, PROPSTOPDATE, ISNULL(MV.INT_RATE,{##}) AS INT_RATE, ISNULL(TA.INT_RATE,{##}) AS AC_INT_RATE, ISNULL(DBO.FN_BPP_YTM_DAYSINYEAR(YTM_BASIS, NULL, NULL),{##}) AS YTMDAYSINYEAR, ISNULL(CUTOFF_AMOUNT,{##}) AS CUTOFF_AMOUNT, DEBIT, CREDIT, ACCRUED, PAIDACCRUED, PAIDINTEREST, HIST_AIRATE, RATETOBASE, INTBENEFICIARY, DAYTOPAY FROM #ACCOUNTS AS TA INNER JOIN ( SELECT ISNULL(AP.AC_IDENT, TR.AC_IDENT) AS ACCIDENT, ISNULL(ISNULL(AP.START_DATE, TR.VALUE_DATE), DBO.FN_BPP_OPTIONS_FIELD(NULL, NULL, {STR}, NULL)) AS VALDATE, STOP_DATE AS PROPSTOPDATE, INT_RATE , YTM_BASIS , CUTOFF_AMOUNT, DEBIT , CREDIT , ACCRUED , PAIDACCRUED, PAIDINTEREST, HIST_AIRATE FROM #ACCPROPS AS AP FULL JOIN #TRANSACTIONS AS TR ON AP.AC_IDENT = TR.AC_IDENT AND CONVERT(CHAR({##}),AP.START_DATE,{##}) = CONVERT(CHAR({##}),TR.VALUE_DATE,{##}) ) MV ON MV.ACCIDENT = TA.AC_IDENT ORDER BY AC_IDENT,VALDATE;17;799701;47041.24;3730;219.41;16;0.94;672;39.53
BPP_CUSTOMER_SETXML;63;53733053;852905.60;152514;2420.86;1045;16.59;40707;646.14
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_SUBACC, BALANCE, SEARCHBY, AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY, CASHOFFICE FROM DBO.FN_TAB_ACCMANAGE_CASH_ACCOUNTS ( {STR}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, AC_LOCAL ASC;345;143306242;415380.41;1394398;4041.73;110;0.32;98072;284.27
BPP_PAYMPLAN_RESETACC;7;22931;3275.86;213;30.43;16;2.29;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_LOANS_RPPU();2;72039;36019.50;387;193.50;0;0.00;31;15.50
[RPT_ –≈ƒ  –≈ƒ»“€ —Œ“–”ƒÕ» ¿Ã];1;3738420;3738420.00;15825;15825.00;2;2.00;7797;7797.00
APP_RIGHTS_GET_FOR_USER;69;1455614;21095.86;66371;961.90;0;0.00;364;5.28
BS_ADMIN_GET_CUSTOMERS;4;9159314;2289828.50;104111;26027.75;820;205.00;2658;664.50
SELECT CLMNS.NAME AS NAME FROM SYS.TABLES AS TBL INNER JOIN SYS.ALL_COLUMNS AS CLMNS ON CLMNS.OBJECT_ID=TBL.OBJECT_ID WHERE (TBL.NAME={STRN} AND SCHEMA_NAME(TBL.SCHEMA_ID)={STRN}) ORDER BY CLMNS.COLUMN_ID ASC;1;98696;98696.00;143;143.00;0;0.00;62;62.00
BPP_CRCARD_IDENT_BY_ACCKEY;43;197354;4589.63;1142;26.56;0;0.00;157;3.65
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”   ¿Õ ≈“€  À»≈Õ“Œ¬();26;281947;10844.12;545;20.96;12;0.46;15;0.58
BPP_BEN_DELETE;4;10202;2550.50;24;6.00;6;1.50;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¿œŒ Œ“◊≈“ œŒ ƒŒ’Œƒ¿Ã Œ“  ŒÕ¬≈–“¿÷»…();1;48320;48320.00;107;107.00;0;0.00;31;31.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¿œŒ Œ“◊≈“ œŒ ƒŒ’Œƒ¿Ã Œ“  ŒÕ¬≈–“¿÷»…();2;28398;14199.00;355;177.50;0;0.00;15;7.50
UPDATE BPP_SYNCHRONIZATION_OUTBOX SET OB_DELAY_FLAG = {##} WHERE OB_OPEN_DATE >= {STR} AND OB_QUEUE_NAME = {STR} AND OB_FLAG = {STR};1;52687;52687.00;0;0.00;0;0.00;0;0.00
UTL_ALL_BR_TURNS_BY_TWINS;1;8164965;8164965.00;1933330;1933330.00;2416;2416.00;7391;7391.00
BPP_TRANSACTION_TRANSHDR_INSERT;4915;44213323;8995.59;593325;120.72;4982;1.01;25763;5.24
EXEC @P#=TAB_CUSTOMERS_PAYMNG_BOX_PROC;116;268212209;2312174.22;20801481;179323.11;140;1.21;168381;1451.56
BPP_ACCOUNT_TOTALS_BY_DATES;1168;5731621;4907.21;159003;136.13;13;0.01;4037;3.46
SELECT IDENT, {STR} AS AC_LOCAL, ORDDATE, ORDNUMBER, TRCODE, CURRENCY, AMOUNT, STATUS, STATUSDESCR, ERRORDESCR, CU_CODE, CU_CODE AS SEARCHBY, CU_CODE AS AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_NONEXECUTEDORDERS ( {STR}, {STR}, {STR}, {##} , {##} ) ORDER BY ORDDATE ASC;1;5364780;5364780.00;609113;609113.00;1;1.00;1890;1890.00
APP_EXCHCNTR_CHECKIN;6;822;137.00;12;2.00;0;0.00;0;0.00
BPP_TRANSACTION_CARD_ACCOUNT_UPDATE;43;52381;1218.16;125;2.91;17;0.40;31;0.72
TAB_ACCMANAGE_CUSTOMERSFOUND_PREPARE;1726;3221058541;1866198.46;204300750;118366.60;416;0.24;2398608;1389.69
BPP_TRANSACTION_BELONGTOCLOSEPERIOD;39;35571;912.08;1488;38.15;0;0.00;15;0.38
SELECT SEL.IDENT AS IDENT, SEL.TAG AS TAG, SEL.NAME AS NAME, SEL.LORO AS LORO FROM ( SELECT DISTINCT ISNULL(-OAT.IDENT, CUS.IDENT) AS IDENT, OAT.IDENT AS OAT_IDENT, CAST(CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_CODE ELSE OAT.AN_MONIKER END AS VARCHAR({##})) AS TAG, CUS.CU_BANK_LOCAL_CODE AS LORO, CONVERT ( VARCHAR({##}), DBO.FN_CHOOSE_LANGUAGE ( CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_NAME_RUS ELSE OAT.AN_NAME_RUS END, CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_NAME_ENG ELSE OAT.AN_NAME_ENG END ) ) AS NAME FROM DBO.BPP_OPTIONS AS OPT INNER JOIN DBO.BPP_ACCOUNTS AS ACC ON OPT.BN_IDENT = ACC.BN_IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUS ON ACC.CU_IDENT = CUS.IDENT LEFT JOIN DBO.BPP_ALL_RIGHTS_VIEW AS UR ON ACC.ACCESS_RIGHT = UR.RT_MONIKER AND UR.USR_CODE_LOWER = LOWER(HOST_NAME()) AND UR.FINAL_FLAG <> {STR} LEFT JOIN DBO.BPP_OWN_TAG_LINKS AS OWN INNER JOIN DBO.VADE_MECUM AS OAT ON OAT.IDENT = OWN.AN_IDENT ON OWN.AC_IDENT = ACC.IDENT WHERE (ACC.AC_CLOSED <> {STR}) AND (ACC.DELETED = {##}) AND (UR.RT_MONIKER IS NOT NULL OR ACC.ACCESS_RIGHT IS NULL) ) AS SEL CROSS JOIN ( SELECT DBO.FN_OWNACCPATTERN({STR}) AS PAT ) AS PAT WHERE DBO.FN_TAB_CUSTOMERS_BOX_FILTER ( SEL.OAT_IDENT, SEL.TAG, SEL.LORO, {##}, {##}, {##}, {##}, {##}, PAT.PAT ) = {##} ORDER BY SEL.TAG;6;66948281;11158046.83;959012;159835.33;802;133.67;54828;9138.00
BPP_EPAYMENT_CENTER_GETLIST;1;4245;4245.00;15;15.00;0;0.00;15;15.00
BPP_SYNCHRONIZATION_REQUEST_ADD;856;4401681;5142.15;28160;32.90;33;0.04;655;0.77
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_SUBACC, BALANCE, PRINCIPAL, PRINCIPAL_OVERDUE, ADVANCED_REPAYMENT, INTEREST, INTEREST_OVERDUE, PENALTY, COVERAGE, SEARCHBY, AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, OF_CODE, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY, MATURITYDATE FROM DBO.FN_TAB_ACCMANAGE_CULOANS ( {STR}, {STR}, {##}, {##} ) ORDER BY FLAG ASC, AC_LOCAL ASC;219;262964553;1200751.38;1476909;6743.88;165;0.75;175283;800.38
SELECT BPP_TRORDERS.IDENT, (CASE TRO_STATUS WHEN {##} THEN (CASE WHEN TH_IDENT IS NULL THEN {STR} ELSE CAST(BPP_TR_HEADS.TH_NUMBER AS VARCHAR) + {STR} + CAST(BPP_TR_HEADS.TH_SEQ_NMB AS VARCHAR) END) WHEN {##} THEN (CASE WHEN TH_IDENT IS NULL THEN {STR} ELSE CAST(BPP_TR_HEADS.TH_NUMBER AS VARCHAR) + {STR} + CAST(BPP_TR_HEADS.TH_SEQ_NMB AS VARCHAR) END) ELSE {STR} END) AS TRNUM, DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) AS DOCNMB, (CASE WHEN ISDATE(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) = {##} THEN NULL ELSE CONVERT(DATETIME, DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}), {##}) END) AS VALUEDATE, CONVERT(NUMERIC({##},{##}), ISNULL( CASE ISNUMERIC(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) WHEN {##} THEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) ELSE NULL END, CASE ISNUMERIC(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) WHEN {##} THEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) ELSE NULL END ) ) AS AMOUNT, CASE WHEN NOT ( DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) IS NULL OR RTRIM(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) = {STR}) THEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) WHEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) IS NULL OR RTRIM(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) = {STR} THEN CASE WHEN NOT ( DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) IS NULL OR RTRIM(DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##})) = {STR}) THEN DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) ELSE (SELECT TOP {##} BASE CURRENCY FROM DBO.BPP_OPTIONS WHERE DELETED = {##}) END ELSE (SELECT TOP {##} BASE CURRENCY FROM DBO.BPP_OPTIONS WHERE DELETED = {##}) END AS CURR, DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) AS CODE, DBO.FN_TAB_EPAY_FIELD(BPP_TRORDERS.IDENT, {STR}, {##}) AS NM, BPP_EPAYFILE.FIL_NAME AS FL, CASE TRO_STATUS WHEN {##} THEN {##} WHEN {##} THEN {##} WHEN {##} THEN {##} WHEN {##} THEN {##} ELSE {##} END AS MES_ISPROCESSED, CNT_IDENT, PRT_IDENT, BPP_TR_HEADS.TH_NUMBER AS TRNUMBER, CASE WHEN (CNT_IDENT <> {##} AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLOROWNDEBIT, CASE WHEN (CNT_IDENT IS NULL AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORDEBITOUR, CASE WHEN (CNT_IDENT <> {##} AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORCREDIT, CASE WHEN (CNT_IDENT IS NULL AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORCREDITOUR, CASE WHEN (CNT_IDENT <> {##} AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORDEBITCONFIRMATION, CASE WHEN (CNT_IDENT IS NULL AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORCONFIRMATIONOUR, CASE WHEN (CNT_IDENT IS NULL AND TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLOROURNOSTRO, CASE WHEN (TRO_BPPNAME={STR}) THEN {##} ELSE {##} END AS COLORUNKNOWN, CASE WHEN (TRO_STATUS = {##}) THEN {##} ELSE {##} END AS COLORREJECTED, CASE WHEN (TRO_STATUS = {##}) THEN {##} ELSE {##} END AS COLORPROCESSED, CASE WHEN (TRO_STATUS = {##}) THEN {##} ELSE {##} END AS COLORDELETED FROM DBO.BPP_TRORDERS LEFT OUTER JOIN DBO.BPP_TR_HEADS ON BPP_TR_HEADS.IDENT = BPP_TRORDERS.TH_IDENT LEFT OUTER JOIN DBO.BPP_EPAYFILE ON FIL_IDENT = BPP_EPAYFILE.IDENT AND FIL_IDENT IS NOT NULL LEFT OUTER JOIN DBO.BPP_EPAYPART ON PRT_IDENT = BPP_EPAYPART.IDENT WHERE TRO_START_DATE <= GETDATE() AND TRO_STOP_DATE > GETDATE() AND ISNULL(BPP_TRORDERS.CNT_IDENT, {##}) = {##} AND BPP_EPAYFILE.FIL_CREATE BETWEEN CONVERT(DATETIME, {STR}, {##}) AND CONVERT(DATETIME, {STR}, {##}) AND (CASE TRO_STATUS WHEN {##} THEN {##} WHEN {##} THEN {##} WHEN {##} THEN {##} ELSE {##} END) != {##} AND CONVERT(INT, BPP_EPAYFILE.FIL_ISOUTPUT) != {##} AND ((CONVERT(UNIQUEIDENTIFIER, BPP_EPAYPART.PRT_DRIVER) = CONVERT(UNIQUEIDENTIFIER, {STR})) OR ({##} = {##})) AND {##} = {##} AND BPP_TRORDERS.IDENT IN(SELECT MIN(TRO.IDENT) FROM DBO.BPP_TRORDERS TRO LEFT OUTER JOIN DBO.BPP_EPAYFILE ON FIL_IDENT = BPP_EPAYFILE.IDENT AND FIL_IDENT IS NOT NULL WHERE TRO.TRO_START_DATE <= GETDATE() AND TRO.TRO_STOP_DATE > GETDATE() AND ISNULL(TRO.CNT_IDENT, {##}) = {##} AND BPP_EPAYFILE.FIL_CREATE BETWEEN CONVERT(DATETIME, {STR}, {##}) AND CONVERT(DATETIME, {STR}, {##}) GROUP BY CASE WHEN {##} = {##} THEN {##} ELSE TRO.IDENT END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END, CASE WHEN {##} = {##} THEN {STR} ELSE DBO.FN_TAB_EPAY_FIELD(TRO.IDENT, {STR}, {##}) END ) ORDER BY TRNUM DESC;2;398196;199098.00;9870;4935.00;2;1.00;313;156.50
BPP_TRANSACTION_IDENT;603;217035;359.93;3667;6.08;0;0.00;184;0.31
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY CONVERT(VARCHAR,TRVALDATE,{##})+CAST(IDENT AS VARCHAR) DESC;1020;258454033;253386.31;18391023;18030.41;49772;48.80;121202;118.83
BS_PAYSYSPAY;20;2284309;114215.45;25525;1276.25;292;14.60;951;47.55
SELECT BPP_EPAYCENTERS.IDENT, CNT_NAME AS NAME, CASE WHEN (BNK.BANNAME IS NULL) THEN CASE WHEN (BIC.INSTNAME1 IS NULL) THEN CNT_BANKLOCALCODE ELSE RTRIM(BIC.INSTNAME1) END ELSE RTRIM(BNK.BANNAME) END AS BANK, BPP_EPAYCENTERS.IDENT AS ID FROM DBO.BPP_EPAYCENTERS LEFT OUTER JOIN DBO.BANKS AS BNK ON CNT_BANKLOCALCODE = BNK.BANLKCODE LEFT OUTER JOIN DBO.BICDBFIT AS BIC ON CNT_BANKLOCALCODE = RTRIM(BIC.BANKCODE) + RTRIM(BIC.BRANCHCODE) WHERE CNT_START_DATE <= GETDATE() AND CNT_STOP_DATE > GETDATE() AND CNT_ISOWNCENTER = {##} ORDER BY NAME DESC;1;1090982;1090982.00;7056;7056.00;2;2.00;969;969.00
[RPT_¡”’√_¬€œ»— ¿ œŒ —◊≈“”];4;597759428;149439857.00;39444888;9861222.00;6382;1595.50;372875;93218.75
CRM_GET_CUSTOMERS;1;2100819;2100819.00;27788;27788.00;20;20.00;1187;1187.00
SELECT IDENT, SC_DATE, TRANCHES, PAYINGSUM, PAYINGPERCENT, PAYING, REMAINDER, SEARCHBY, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY, CU_CODE, AC_KIND, CURRENCY, AC_SUBACC FROM DBO.FN_TAB_ACCMANAGE_LOAN_SCHEDULES({STR},{STR},{STR}, {##}, {##}) ORDER BY FLAG ASC, SC_DATE ASC;32;37842220;1182569.38;7706161;240817.53;56;1.75;34672;1083.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ  –≈ƒ»“Õ€… œŒ–“‘≈À‹();14;285068;20362.00;2789;199.21;2;0.14;171;12.21
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ  –≈ƒ»“Õ€… œŒ–“‘≈À‹();7;26511;3787.29;423;60.43;0;0.00;15;2.14
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCOUNTS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCPROPS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TRANSACTIONS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #AC_XML_RESULTS END CREATE TABLE #ACCOUNTS ( AC_IDENT INT NOT NULL , CU_CODE VARCHAR({##}), CURR_IDENT INT, CURRENCY VARCHAR({##}), AC_KIND VARCHAR({##}), AC_SUB VARCHAR({##}), AC_OPEN_DATE DATETIME, OPEN_BALANCE NUMERIC({##},{##}), MATURITY_DATE DATETIME, INT_RATE NUMERIC({##},{##}), RATETOBASE NUMERIC({##},{##}), INTBENEFICIARY CHAR({##}), INTPAYPERIOD INT, INTPAYDAY INT, DAYTOPAY DATETIME ) CREATE TABLE #ACCPROPS ( AC_IDENT INT, START_DATE DATETIME, STOP_DATE DATETIME, INT_RATE NUMERIC({##},{##}), YTM_BASIS INT, CUTOFF_AMOUNT NUMERIC({##},{##}) ) CREATE TABLE #TRANSACTIONS ( AC_IDENT INT NOT NULL , VALUE_DATE DATETIME, DEBIT NUMERIC({##},{##}), CREDIT NUMERIC({##},{##}), ACCRUED NUMERIC({##},{##}), PAIDACCRUED NUMERIC({##},{##}), PAIDINTEREST NUMERIC({##},{##}), HIST_AIRATE NUMERIC({##},{##}) ) CREATE TABLE #AC_XML_RESULTS ( AC_IDENT INT NOT NULL , AC_XML_ITEMS VARCHAR({##}), AC_LOG TEXT ) INSERT INTO #ACCOUNTS ( AC_IDENT , CU_CODE , CURR_IDENT , CURRENCY , AC_KIND , AC_SUB , AC_OPEN_DATE , MATURITY_DATE , INT_RATE ) SELECT AC.IDENT, CU.CU_CODE, AC.CURR_IDENT, CURR.CURRENCY, AC.AC_KIND, CAST(AC_NUMBER AS VARCHAR({##})), AC_OPEN_DATE, ISNULL(DP.DP_MATURITY_DATE,CAST({STR} AS DATETIME)), ACINT.AI_INTEREST FROM DBO.BPP_ACCOUNTS AS AC INNER JOIN DBO.BPP_CUSTOMERS AS CU ON AC.CU_IDENT = CU.IDENT INNER JOIN DBO.CURRENCY AS CURR ON AC.CURR_IDENT = CURR.IDENT INNER JOIN DBO.BPP_AC_DEPOSITS AS DP ON DP.AC_IDENT = AC.IDENT AND {STR} BETWEEN DP_START_DATE AND DP_STOP_DATE AND DP.DELETED = {##} INNER JOIN DBO.BPP_AC_INTEREST AS ACINT ON ACINT.AC_IDENT = AC.IDENT AND {STR} BETWEEN AI_START_DATE AND AI_STOP_DATE AND ACINT.DELETED = {##} AND ACINT.AI_ACCRUALS_FLAG={STR} CROSS JOIN DBO.BPP_OPTIONS AS OPT WHERE AC.IDENT = {##} AND AC.CU_IDENT <> OPT.CU_IDENT AND AC.BN_IDENT = OPT.BN_IDENT AND AC_CLOSED <> {STR} AND AC.AC_KIND IN(LIST) AND AC.DELETED = {##} AND CU.DELETED = {##} AND CURR.DELETED = {##} AND OPT.DELETED = {##};17;1512196;88952.71;9307;547.47;12;0.71;1344;79.06
SELECT * FROM #TAB_CREDIT_CARDS_TABLE ORDER BY FULLACCOUNT ASC;27;2617897;96959.15;231577;8576.93;3967;146.93;2000;74.07
SELECT IDENT, AG_IDENT, ISCHILD, CAPTION, BN_BN_CODE, BN_BR_CODE, RTRIM(BN_BN_CODE)+BN_BR_CODE AS SWIFTCODE, SWF_IDENT, SWF_DATE, SWF_TIME, SWF_FLAG, SWF_LEN, SWF_ACTUAL, RECORD, FOUND, SWF_TR_NMB, SWF_TR_SEQ_NMB FROM DBO.FN_TAB_TELEX_MANAGEMENT_TREE ( {STR}, NULL, NULL, NULL, {STR}, {STR}, {##}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR} ) ORDER BY SORTKEY;4;17999677;4499919.25;197731;49432.75;35;8.75;9811;2452.75
BPP_TRANSACTION_SIGNIMAGE_DELETE;15;1821328;121421.87;5179;345.27;47;3.13;657;43.80
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_NBKR_¬¿Àﬁ“Õ€… ¡¿À¿Õ—();3;3618;1206.00;107;35.67;0;0.00;0;0.00
BPP_PERIOD_WORKS_GET;16;51749;3234.31;443;27.69;0;0.00;62;3.88
BPP_ISPAYMPLAN_RECORD;514;150840;293.46;3144;6.12;0;0.00;171;0.33
SELECT IDENT, ACCKIND, NSACCOUNT, ACCCURR, ACCAMNT, ACCMATUR, ACCINTER, NSAREPCODE, NOACCCASH, NOACCCASHLESS, ACCCLOSEDFLAG, ACCOUNT, ACCREFTYPE, ACCSUB, ACCLOCALNMB FROM DBO.FN_TAB_NOSTRO_ACCOUNTS ( {##}, {STR}, {STR}, {##} ) ORDER BY ACCKIND ASC;465;330105134;709903.51;129544502;278590.33;197;0.42;233574;502.31
SELECT IDENT, {STR} AS AC_LOCAL, CU_CODE, SEQNMB, BALANCE, PRINCIPAL, INTEREST, OF_CODE, CU_CODE AS SEARCHBY, CU_CODE AS AC_NUMBER, CU_NAME, ISNULL(ISOPENACC,{##}) AS ISOPENACC, DOCSIGNDAYS, {STR} AS BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_CREDITORS ( {STR}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, CU_NAME ASC;8;20728727;2591090.88;872884;109110.50;920;115.00;17891;2236.38
SELECT OPR.IDENT, BR.BR_NAME + {STR} + OFC.OF_CODE AS OFFICE, DBO.FN_TAB_NAME ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_NAME_RUS, OAT.AN_NAME_ENG, CUS.CU_NAME_RUS, CUS.CU_NAME_ENG, BAN.BANNAME ) AS NAME, DBO.FN_TAB_ACCOUNT ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_MONIKER, CUS.CU_CODE, ACC.AC_NUMBER, ACC.AC_KIND, C2.CURRENCY ) AS ACCOUNT, OPR.OP_TYPE AS TRTYPE, CONVERT(VARCHAR,TRH.TH_NUMBER)+{STR}+CONVERT(VARCHAR,TRH.TH_SEQ_NMB)+{STR}+CONVERT(VARCHAR, OPR.OP_SEQ_NMB) AS TRNUMBER, TRH.TH_ORDER_NUMBER AS ORDERNMB, OPR.OP_DEBIT AS TRDEBIT, OPR.OP_CREDIT AS TRCREDIT, C2.CURRENCY AS TCURRENCY, DBO.FN_CHOOSE_LANGUAGE(USR.USR_NAME_RUS, USR.USR_NAME_ENG) AS AUTHOR, CASE WHEN TRH.TH_STORNO_FLAG = {STR} THEN {##} ELSE {##} END AS TRSTORNOFLAG, CASE WHEN OPR.OP_WAIT_FLAG = {STR} THEN {##} ELSE {##} END AS TRWAITFLAG, CASE WHEN TRH.TH_PENDING_FLAG = {STR} THEN {##} ELSE {##} END AS TRCOMPLETEFLAG, CASE WHEN OPR.OP_VALID_FLAG = {STR} THEN {##} ELSE {##} END AS TRVALIDFLAG, OPR.OP_NARRATIVE AS TRBNAME, OPR.OP_VALUE_DATE AS TRVALDATE, OPR.TH_IDENT AS TH_IDENT, TRH.TH_NUMBER AS TH_NUMBER, TRH.TH_SEQ_NMB AS TH_SEQ_NMB, TRH.TH_DETAILS AS TH_DETAILS FROM DBO.BPP_TR_OPERS AS OPR INNER JOIN DBO.BPP_TR_HEADS AS TRH ON OPR.TH_IDENT = TRH.IDENT INNER JOIN DBO.BPP_ACCOUNTS AS ACC ON OPR.AC_IDENT = ACC.IDENT INNER JOIN DBO.CURRENCY AS C1 ON ACC.CURR_IDENT = C1.IDENT INNER JOIN DBO.CURRENCY AS C2 ON C1.ORIGINAL = C2.ORIGINAL AND OPR.OP_VALUE_DATE BETWEEN C2.CUR_START_DATE AND C2.CUR_STOP_DATE INNER JOIN DBO.BPP_CUSTOMERS AS CUS ON ACC.CU_IDENT = CUS.IDENT INNER JOIN DBO.BANKS AS BAN ON ACC.BN_IDENT = BAN.IDENT INNER JOIN DBO.BPP_USERS AS USR ON LOWER(TRH.TH_SIGN_1) = USR.USR_CODE_LOWER AND USR.USR_START_DATE <= OPR.OP_START_DATE AND USR.USR_STOP_DATE > OPR.OP_START_DATE LEFT JOIN DBO.BPP_OFFICES AS OFC ON USR.OF_IDENT = OFC.IDENT LEFT JOIN DBO.BPP_BRANCHES AS BR ON OFC.BR_IDENT = BR.IDENT AND BR.BR_MODE IN(LIST) LEFT JOIN DBO.VADE_MECUM AS OAT INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON OAT.IDENT = OWN.AN_IDENT ON ACC.IDENT = OWN.AC_IDENT CROSS JOIN DBO.BPP_OPTIONS AS OPT WHERE OPR.OP_VALUE_DATE = CONVERT(DATETIME, {STR}, {##}) AND (( {STR} = {STR}) OR (DBO.FN_TAB_NAME ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_NAME_RUS, OAT.AN_NAME_ENG, CUS.CU_NAME_RUS, CUS.CU_NAME_ENG, BAN.BANNAME ) = {STR})) AND (( {STR} = {STR}) OR (DBO.FN_TAB_ACCOUNT ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_MONIKER, CUS.CU_CODE, ACC.AC_NUMBER, ACC.AC_KIND, C2.CURRENCY ) = {STR})) AND DBO.FN_TAB_ACCOUNT_TYPE ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, {STR} ) = {##} AND DBO.FN_TAB_AMOUNT_TYPE ( OPR.OP_DEBIT, OPR.OP_CREDIT, {STR} ) = {##} AND (CASE WHEN OPR.OP_VALID_FLAG = {STR} THEN {##} ELSE {##} END IN(LIST)) AND (CASE WHEN OPR.OP_RED_ST_FLAG = {STR} THEN {##} ELSE {##} END IN(LIST)) AND ({STR} + ISNULL(BR.BR_NAME,{STR})+{STR}+ISNULL(OFC.OF_CODE,{STR}) LIKE ( {STR}+{STR})) AND (OPT.DELETED = {##}) AND (OPR.DELETED = {##}) ORDER BY TRNUMBER ASC OPTION (FAST {##});82;400150144;4879879.80;19107412;233017.22;21246;259.10;304342;3711.49
DECLARE @REGPATHPARAMS SYSNAME DECLARE @ARG SYSNAME DECLARE @PARAM SYSNAME DECLARE @MASTERPATH NVARCHAR({##}) DECLARE @LOGPATH NVARCHAR({##}) DECLARE @ERRORLOGPATH NVARCHAR({##}) DECLARE @N INT SELECT @N={##} SELECT @REGPATHPARAMS={STRN}+{STR} SELECT @PARAM={STR} WHILE(NOT @PARAM IS NULL) BEGIN SELECT @PARAM=NULL SELECT @ARG={STR}+CONVERT(NVARCHAR,@N) EXEC MASTER.DBO.XP_INSTANCE_REGREAD {STRN}, @REGPATHPARAMS, @ARG, @PARAM OUTPUT IF(@PARAM LIKE {STR}) BEGIN SELECT @PARAM=SUBSTRING(@PARAM, {##}, {##}) SELECT @MASTERPATH=SUBSTRING(@PARAM, {##}, LEN(@PARAM) - CHARINDEX({STR}, REVERSE(@PARAM))) END ELSE IF(@PARAM LIKE {STR}) BEGIN SELECT @PARAM=SUBSTRING(@PARAM, {##}, {##}) SELECT @LOGPATH=SUBSTRING(@PARAM, {##}, LEN(@PARAM) - CHARINDEX({STR}, REVERSE(@PARAM))) END ELSE IF(@PARAM LIKE {STR}) BEGIN SELECT @PARAM=SUBSTRING(@PARAM, {##}, {##}) SELECT @ERRORLOGPATH=SUBSTRING(@PARAM, {##}, LEN(@PARAM) - CHARINDEX({STR}, REVERSE(@PARAM))) END SELECT @N=@N{##} END DECLARE @SMOROOT NVARCHAR({##}) EXEC MASTER.DBO.XP_INSTANCE_REGREAD {STRN}, {STRN}, {STRN}, @SMOROOT OUTPUT SELECT CAST(CASE WHEN {STR} <> {STR} THEN {##} ELSE {##} END AS BIT) AS ISCASESENSITIVE, CAST(FULLTEXTSERVICEPROPERTY({STR}) AS BIT) AS ISFULLTEXTINSTALLED, @LOGPATH AS MASTERDBLOGPATH, @MASTERPATH AS MASTERDBPATH, @ERRORLOGPATH AS ERRORLOGPATH, @@MAX_PRECISION AS MAXPRECISION, @SMOROOT AS ROOTDIRECTORY, SERVERPROPERTY({STRN}) AS VERSIONSTRING, CAST(SERVERPROPERTY({STRN}) AS SYSNAME) AS NETNAME, CAST(SERVERPROPERTY({STRN}) AS SYSNAME) AS EDITION, CAST(SERVERPROPERTY({STRN}) AS SYSNAME) AS PRODUCTLEVEL, CAST(SERVERPROPERTY({STR}) AS BIT) AS ISCLUSTERED, CAST(SERVERPROPERTY({STR}) AS BIT) AS ISSINGLEUSER, CAST(SERVERPROPERTY({STR}) AS INT) AS ENGINEEDITION, CONVERT(SYSNAME, SERVERPROPERTY({STRN})) AS COLLATION;2;76807;38403.50;0;0.00;0;0.00;32;16.00
SELECT * FROM #TAB_CREDIT_CARDS_TABLE ORDER BY ACCAMNT ASC;7;572064;81723.43;57158;8165.43;982;140.29;517;73.86
APP_MESSAGING_READ_MESSAGE;29;121854;4201.86;423;14.59;32;1.10;0;0.00
BS_OFFLINE_INSERT_MESSAGE;30;313511;10450.37;1033;34.43;54;1.80;47;1.57
SELECT U.NAME AS NAME FROM SYS.DATABASE_PRINCIPALS AS U WHERE (U.TYPE IN(LIST));2;4927;2463.50;12;6.00;0;0.00;0;0.00
BPP_REPORTS_LIST_GET;271;4960851;18305.72;35703;131.75;0;0.00;2283;8.42
SP_UNPREPARE;336;17269;51.40;0;0.00;0;0.00;16;0.05
APP_PSB_ACCOUNTS;4;40059981;10014995.25;4310;1077.50;0;0.00;1827;456.75
[RPT_Œ Œ»Ã–  À»≈Õ“— »≈ œÀ¿“≈∆» œŒ ÕŒ—“–Œ];2;3354471;1677235.50;143502;71751.00;0;0.00;2797;1398.50
SELECT IDENT, NSACCOUNT,NSACURR,NSACODE FROM DBO.FN_TAB_CORRBANKSACCOUNTS_BOX ( {STR}, {STR}, {STR}, {STR} ) ORDER BY NSACCOUNT;51;7413754;145367.73;398146;7806.78;42;0.82;5690;111.57
BPP_SCHEDULE_DRIVERS_LIST;152;76454;502.99;5997;39.45;0;0.00;110;0.72
BPP_CASH_WRONG_TOTALS;1;452662;452662.00;6019;6019.00;0;0.00;437;437.00
EXEC @P#=TAB_URGENCY_BOX_PROC;250;328333;1313.33;5641;22.56;44;0.18;204;0.82
BPP_FO_ADDITIONAL;1623;111045654;68420.00;590483;363.82;11;0.01;72788;44.85
EXEC @P#=TAB_CARDPROCESSING_BOX_PROC;24;49264;2052.67;1263;52.63;9;0.38;0;0.00
SELECT SERVERPROPERTY({STRN});2;605;302.50;0;0.00;0;0.00;0;0.00
SELECT @@TRANCOUNT;6;1305;217.50;0;0.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_œ–¡Œ 1 –¿«ƒ≈À D();2;40440;20220.00;433;216.50;0;0.00;47;23.50
SELECT CUSTS.IDENT, CUSTS.CU_CODE AS CLACCOUNT, DBO.FN_CHOOSE_LANGUAGE(CUSTS.CU_NAME_RUS, CUSTS.CU_NAME_ENG) AS CLNAME, ISNULL(CUSTS.CU_SEQ_NMB, {##}) AS CLSEQNMB, OFFIC_.OF_CODE AS CLREPCODE, CUSTS.CU_AMOUNT AS CLAMOUNT, CUSTS.CU_MATURITY AS CLMATUR, ISNULL(BAL_._BALANCE, {##}) AS CLBALANCE, ISNULL(ISOPENACC,{##}) AS CLISOPENACC, ISNULL((SELECT COUNT(*) FROM DBO.BPP_CUSTOMERS WHERE CU_MIDDLEMANIDENT = CUSTS.IDENT AND DELETED = {##} AND (YEAR(CUSTS.CU_STOP_DATE) = {##})),{##}) AS ISMIDDLEMAN, CASE WHEN ( ISNULL(CUSTS.CU_DOC_END_DATE,{##}) > {##} AND CAST({STR} AS DATETIME) > (CASE WHEN ISNULL(CUSTS.CU_DOC_PROLONG_DATE,{##})>{##} THEN ISNULL(CUSTS.CU_DOC_PROLONG_DATE,{##}) ELSE ISNULL(CUSTS.CU_DOC_END_DATE,{##}) END - DBO.FN_BPP_OPTIONS_FIELD_INT(NULL, NULL, {STR}, NULL)) ) OR ( ISNULL(CUSTS.CU_SIGN_END_DATE,{##}) > {##} AND CAST({STR} AS DATETIME) > (CASE WHEN ISNULL(CUSTS.CU_SIGN_PROLONG_DATE,{##})>{##} THEN ISNULL(CUSTS.CU_SIGN_PROLONG_DATE,{##}) ELSE ISNULL(CUSTS.CU_SIGN_END_DATE,{##}) END - DBO.FN_BPP_OPTIONS_FIELD_INT(NULL, NULL, {STR}, NULL)) ) THEN {##} ELSE {##} END AS DOC_SIGN_FINISH FROM DBO.BPP_OPTIONS CROSS JOIN (SELECT * FROM DBO.BPP_CUSTOMERS WHERE DELETED = {##}) AS CUSTS LEFT OUTER JOIN DBO.BPP_OFFICES AS OFFIC_ ON CUSTS.OF_IDENT = OFFIC_.IDENT LEFT OUTER JOIN ( SELECT CU_IDENT, MAX(CASE WHEN AC_CLOSED = {STR} THEN {##} ELSE {##} END) AS ISOPENACC FROM DBO.BPP_ACCOUNTS WHERE DELETED = {##} GROUP BY CU_IDENT ) AS GRACC_ ON (GRACC_.CU_IDENT = CUSTS.IDENT) LEFT OUTER JOIN ( SELECT ACCB.CU_IDENT AS _CUST, CONVERT(NUMERIC({##},{##}), ISNULL(SUM(A * ISNULL(RT.RT_RATE, {##})), {##})) AS _BALANCE FROM (SELECT * FROM DBO.BPP_ACCOUNTS WHERE DELETED={##} AND AC_KIND IN(LIST)) AS ACCB LEFT OUTER JOIN ( SELECT ISNULL(AMT.AM_CR_BAL_OUT, {##})- ISNULL(AMT.AM_DR_BAL_OUT, {##}) AS A, AMT.FO_IDENT - {##} AS AC_IDENT FROM DBO.BPP_AMOUNTS AS AMT WITH(INDEX(BPP_AMOUNTS__KEY)) INNER JOIN DBO.BKPERIOD AS PER ON ((PER.IDENT = AMT.PR_IDENT) AND (PER.BPTODATE = {STR})) INNER JOIN BPP_FOREST_REAL AS FO ON AMT.FO_BIN_IDENT = FO.FO_BINARY_PATH AND FO.FO_PATH LIKE {STR} ) AS AM ON (AM.AC_IDENT = ACCB.IDENT) LEFT JOIN DBO.BPP_LAST_RATES_TABLE AS RT ON (RT.RT_FR_CURRCY = ACCB.CURR_IDENT) GROUP BY ACCB.CU_IDENT ) AS BAL_ ON (CUSTS.IDENT = BAL_._CUST) WHERE CUSTS.IDENT <> BPP_OPTIONS.CU_IDENT AND ISNULL(OFFIC_.OF_CODE, {STR}) IN(LIST) AND ISNULL(ISOPENACC,{##}) IN(LIST) ORDER BY CLACCOUNT ASC;6;98436087;16406014.50;2831783;471963.83;1612;268.67;66796;11132.67
SELECT OPR.IDENT, BR.BR_NAME + {STR} + OFC.OF_CODE AS OFFICE, DBO.FN_TAB_NAME ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_NAME_RUS, OAT.AN_NAME_ENG, CUS.CU_NAME_RUS, CUS.CU_NAME_ENG, BAN.BANNAME ) AS NAME, DBO.FN_TAB_ACCOUNT ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_MONIKER, CUS.CU_CODE, ACC.AC_NUMBER, ACC.AC_KIND, C2.CURRENCY ) AS ACCOUNT, OPR.OP_TYPE AS TRTYPE, CONVERT(VARCHAR,TRH.TH_NUMBER)+{STR}+CONVERT(VARCHAR,TRH.TH_SEQ_NMB)+{STR}+CONVERT(VARCHAR, OPR.OP_SEQ_NMB) AS TRNUMBER, TRH.TH_ORDER_NUMBER AS ORDERNMB, OPR.OP_DEBIT AS TRDEBIT, OPR.OP_CREDIT AS TRCREDIT, C2.CURRENCY AS TCURRENCY, DBO.FN_CHOOSE_LANGUAGE(USR.USR_NAME_RUS, USR.USR_NAME_ENG) AS AUTHOR, CASE WHEN TRH.TH_STORNO_FLAG = {STR} THEN {##} ELSE {##} END AS TRSTORNOFLAG, CASE WHEN OPR.OP_WAIT_FLAG = {STR} THEN {##} ELSE {##} END AS TRWAITFLAG, CASE WHEN TRH.TH_PENDING_FLAG = {STR} THEN {##} ELSE {##} END AS TRCOMPLETEFLAG, CASE WHEN OPR.OP_VALID_FLAG = {STR} THEN {##} ELSE {##} END AS TRVALIDFLAG, OPR.OP_NARRATIVE AS TRBNAME, OPR.OP_VALUE_DATE AS TRVALDATE, OPR.TH_IDENT AS TH_IDENT, TRH.TH_NUMBER AS TH_NUMBER, TRH.TH_SEQ_NMB AS TH_SEQ_NMB, TRH.TH_DETAILS AS TH_DETAILS FROM DBO.BPP_TR_OPERS AS OPR INNER JOIN DBO.BPP_TR_HEADS AS TRH ON OPR.TH_IDENT = TRH.IDENT INNER JOIN DBO.BPP_ACCOUNTS AS ACC ON OPR.AC_IDENT = ACC.IDENT INNER JOIN DBO.CURRENCY AS C1 ON ACC.CURR_IDENT = C1.IDENT INNER JOIN DBO.CURRENCY AS C2 ON C1.ORIGINAL = C2.ORIGINAL AND OPR.OP_VALUE_DATE BETWEEN C2.CUR_START_DATE AND C2.CUR_STOP_DATE INNER JOIN DBO.BPP_CUSTOMERS AS CUS ON ACC.CU_IDENT = CUS.IDENT INNER JOIN DBO.BANKS AS BAN ON ACC.BN_IDENT = BAN.IDENT INNER JOIN DBO.BPP_USERS AS USR ON LOWER(TRH.TH_SIGN_1) = USR.USR_CODE_LOWER AND USR.USR_START_DATE <= OPR.OP_START_DATE AND USR.USR_STOP_DATE > OPR.OP_START_DATE LEFT JOIN DBO.BPP_OFFICES AS OFC ON USR.OF_IDENT = OFC.IDENT LEFT JOIN DBO.BPP_BRANCHES AS BR ON OFC.BR_IDENT = BR.IDENT AND BR.BR_MODE IN(LIST) LEFT JOIN DBO.VADE_MECUM AS OAT INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON OAT.IDENT = OWN.AN_IDENT ON ACC.IDENT = OWN.AC_IDENT CROSS JOIN DBO.BPP_OPTIONS AS OPT WHERE OPR.OP_VALUE_DATE = CONVERT(DATETIME, {STR}, {##}) AND (( {STR} = {STR}) OR (DBO.FN_TAB_NAME ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_NAME_RUS, OAT.AN_NAME_ENG, CUS.CU_NAME_RUS, CUS.CU_NAME_ENG, BAN.BANNAME ) = {STR})) AND (( {STR} = {STR}) OR (DBO.FN_TAB_ACCOUNT ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_MONIKER, CUS.CU_CODE, ACC.AC_NUMBER, ACC.AC_KIND, C2.CURRENCY ) = {STR})) AND DBO.FN_TAB_ACCOUNT_TYPE ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, {STR} ) = {##} AND DBO.FN_TAB_AMOUNT_TYPE ( OPR.OP_DEBIT, OPR.OP_CREDIT, {STR} ) = {##} AND (CASE WHEN OPR.OP_VALID_FLAG = {STR} THEN {##} ELSE {##} END IN(LIST)) AND (CASE WHEN OPR.OP_RED_ST_FLAG = {STR} THEN {##} ELSE {##} END IN(LIST)) AND ({STR} + ISNULL(BR.BR_NAME,{STR})+{STR}+ISNULL(OFC.OF_CODE,{STR}) LIKE ( {STR}+{STR})) AND (OPT.DELETED = {##}) AND (OPR.DELETED = {##}) ORDER BY AUTHOR ASC OPTION (FAST {##});1;4935236;4935236.00;247836;247836.00;274;274.00;4812;4812.00
BS_OFFLINE_GET_CUSTOMER;291;22155628;76136.18;502497;1726.79;1765;6.07;15452;53.10
BPP_TRANSACTION_GET_CUSTOMER_DATA;58;46510;801.90;648;11.17;0;0.00;47;0.81
BPP_WORK_MESSAGE_INSERT_TRANS_IMPORT;141;167827;1190.26;763;5.41;8;0.06;15;0.11
EXEC @P#=TAB_CUSTOMERS_INVEST_BOX_PROC;11;5741326;521938.73;728722;66247.45;517;47.00;3969;360.82
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, TR_NUMBER, TH_SEQ_NUMBER, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_DEPOSITOPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CREDIT ASC;3;129594;43198.00;1379;459.67;3;1.00;62;20.67
BPP_APPLOCK_GET;6792;1918463;282.46;123;0.02;0;0.00;1582;0.23
BS_APPLICATIONS_LOGIN;7481;69159607;9244.70;2478875;331.36;0;0.00;47916;6.41
BPP_ACCOUNT_IDENT_BY_ACCKEY;143;1223813;8558.13;55933;391.14;0;0.00;235;1.64
[RPT_Œ —Ã–_Œ—“¿“ » œŒ ÀŒ–Œ-ÕŒ—“–Œ];1;13214655;13214655.00;1087478;1087478.00;990;990.00;9563;9563.00
DBO.LNS_RESERVENEWACCOUNTNUMBER;90;854221;9491.34;1591;17.68;46;0.51;79;0.88
SELECT IDENT, CURRENCY, MONIKER, AC_NAME, CR_BAL_IN - DR_BAL_IN AS BAL_IN, DR_TURN_CLR, CR_TURN_CLR, CR_BAL_OUT - DR_BAL_OUT AS BAL_OUT, FULL_PATH, {##} AS OBJ_CATEGORY, TOTALFLAG, {STR} AS AC_NUMBER, {STR} AS CU_NAME, {STR} AS AC_LOCAL, {STR} AS BNK_ANNAME FROM DBO.FN_TAB_ACCMANAGE_FO_ITEMCURRBALANCE ( {STR}, {STR}, {STR}, {STR}, {##} ) ORDER BY TOTALFLAG ASC, CURRENCY ASC;791;996801964;1260179.47;148974468;188336.87;293;0.37;638191;806.82
[RPT_¿œŒ Œ“◊≈“ œŒ ƒŒ’Œƒ¿Ã Œ“  ŒÕ¬≈–“¿÷»…];5;27140829;5428165.80;3324432;664886.40;16;3.20;16923;3384.60
BPP_TRANSACTION_GET_FREE_SUBACCOUNT;50;2377708;47554.16;17838;356.76;0;0.00;2031;40.62
[RPT_¡”’√_œ–Œ¡Õ€… ¡¿À¿Õ—];2;217883714;108941857.00;91337259;45668629.50;120;60.00;192688;96344.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ“◊≈“ œŒ  ŒÀ»◊≈—“¬”  À»≈Õ“Œ¬ 2();1;10356;10356.00;111;111.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ“◊≈“ œŒ  ŒÀ»◊≈—“¬”  À»≈Õ“Œ¬ 2();2;46779;23389.50;436;218.00;0;0.00;47;23.50
APP_MESSAGING_GET_ARCHIVE;15;9013709;600913.93;158448;10563.20;10;0.67;5705;380.33
BS_ADMIN_UPDATE_GROUPRIGHTS;1;6634309;6634309.00;359685;359685.00;607;607.00;6404;6404.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_LOANS_RPPU();1;21905;21905.00;107;107.00;0;0.00;15;15.00
BPP_ACCOUNT_CURRENT_BALANCE_BY_ACCKEY;3171;377919081;119179.78;888142;280.08;17;0.01;299762;94.53
BPP_GET_CUST_BUSINESS_TYPES;112;20119849;179641.51;1835511;16388.49;319;2.85;15102;134.84
[DOC_PAYMENTORDER];125;9337705;74701.64;91901;735.21;823;6.58;4929;39.43
[RPT_Œœ≈–Œ Õ¿◊»—À≈Õ»ﬂ œŒ  ƒ≈œŒ«»“¿Ã];2;4482328;2241164.00;201295;100647.50;0;0.00;3578;1789.00
BPP_TRANSACTION_OPERATION_INSERT;9943;2044967979;205669.11;28736484;2890.12;14537;1.46;1437189;144.54
[RPT_ –≈ƒ_œ–Œ“Œ ŒÀ Õ¿◊»—À≈Õ»ﬂ œ–Œ÷≈Õ“Œ¬ œŒ  –≈ƒ»“¿Ã];4;195590972;48897743.00;3550808;887702.00;2856;714.00;163078;40769.50
SELECT PRE.IDENT, PRE.PRE_MONIKER, PRE_DESCR FROM DBO.BPP_PREDICATES AS PRE INNER JOIN DBO.BPP_TR_PREDICATES AS TRP ON TRP.PRE_IDENT = PRE.IDENT WHERE (TRP.TPR_TR_CODE = {STR}) AND (PRE.DELETED = {##}) AND (TRP.DELETED = {##});37;650669;17585.65;624;16.86;12;0.32;16;0.43
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_œ–Œ¡Õ€… ¡¿À¿Õ—();2;15201;7600.50;111;55.50;0;0.00;0;0.00
BPP_TELEX_INSERT;166;5331236;32115.88;43906;264.49;247;1.49;3300;19.88
USE MASTER;4;1031;257.75;0;0.00;0;0.00;16;4.00
BPP_FASTSEARCH_CLEAR;1;9369;9369.00;83;83.00;1;1.00;0;0.00
SELECT SYSTEM_USER;3;899;299.67;0;0.00;0;0.00;0;0.00
[RPT_¡”’√_Œ¡Œ–Œ“ÕŒ-—¿À‹ƒŒ¬¿ﬂ ¬≈ƒŒÃŒ—“‹];47;11128293106;236772193.74;911857878;19401231.45;249543;5309.43;8805500;187351.06
SELECT SWF.IDENT AS IDENT, CONVERT(VARCHAR, SWF.SWF_START_DATE, {##}) + {STR} + LEFT(CONVERT(VARCHAR, SWF.SWF_START_DATE, {##}), {##}) AS SWF_DATETIME, ISNULL(USR.USR_CODE, {STR}), SWF.IDENT AS SWF_IDENT, DATALENGTH(SWF.SWF_TEXT) AS SWF_LEN, CASE WHEN YEAR(SWF.SWF_STOP_DATE) = {##} THEN {##} ELSE {##} END AS SWF_ACTUAL FROM DBO.BPP_SWIFT_MESSAGES AS SWF LEFT JOIN DBO.BPP_USERS AS USR ON USR.IDENT = SWF.SWF_USER_IDENT WHERE SWF.SWF_KEY = {##} ORDER BY SWF.SWF_START_DATE;203;2775596;13672.89;6506;32.05;71;0.35;1673;8.24
BPP_NEWTREE_BRANCHES;522;3922034;7513.48;72625;139.13;33;0.06;1301;2.49
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_œ–Œ¡Õ€… ¡¿À¿Õ—();4;358218;89554.50;9420;2355.00;29;7.25;203;50.75
[RPT_Œ Œ»Ã– œÀ¿“≈∆» œŒ √–”œœ¿Ã IT];3;94876689;31625563.00;1450902;483634.00;795;265.00;36923;12307.67
BPP_TRANSACTION_GET_TRANSACTION_NOSTRO_ACCOUNT;73;563487;7719.00;6622;90.71;0;0.00;408;5.59
SELECT ACC.IDENT, ACC.AC_NUMBER AS NSACCOUNT, CURR.CURRENCY AS NSACURR, CAST({STR} + RIGHT(CAST((ACC.IDENT + {##}) AS VARCHAR), {##}) AS CHAR({##})) AS NSACODE FROM DBO.BPP_ACCOUNTS AS ACC LEFT JOIN DBO.BPP_ALL_RIGHTS_VIEW AS UR ON ACC.ACCESS_RIGHT = UR.RT_MONIKER AND UR.USR_CODE_LOWER = LOWER(HOST_NAME()) AND UR.FINAL_FLAG <> {STR} INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OTL ON ACC.IDENT = OTL.AC_IDENT RIGHT OUTER JOIN DBO.VADE_MECUM AS VM ON VM.IDENT = OTL.AN_IDENT LEFT JOIN DBO.CURRENCY AS CURR ON ACC.CURR_IDENT = CURR.IDENT WHERE VM.AN_PATH = {STR} AND (ACC.AC_CLOSED <> {STR}) AND (ACC.AC_KIND = {STR}) AND (( {STR} = {STR}) OR (CURR.CURRENCY = {STR})) AND (ACC.DELETED = {##}) AND (UR.RT_MONIKER IS NOT NULL OR ACC.ACCESS_RIGHT IS NULL) ORDER BY NSACCOUNT;624;17618003;28233.98;571721;916.22;22;0.04;11642;18.66
SELECT CAST(CAST(G.NAME AS VARBINARY({##})) AS SYSNAME) AS NAME, G.DATA_SPACE_ID AS ID, G.IS_DEFAULT AS ISDEFAULT, G.IS_READ_ONLY AS READONLY, CAST(ISNULL((SELECT SUM(GS.SIZE)*CONVERT(FLOAT,{##}) FROM SYS.DATABASE_FILES GS WHERE GS.DATA_SPACE_ID = G.DATA_SPACE_ID), {##}) AS FLOAT) AS SIZE FROM SYS.FILEGROUPS AS G ORDER BY NAME ASC;2;40250;20125.00;141;70.50;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ »«Ã≈Õ≈Õ»≈ —¬Œ…—“¬  À»≈Õ“Œ¬();4;16518;4129.50;330;82.50;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ »«Ã≈Õ≈Õ»≈ —¬Œ…—“¬  À»≈Õ“Œ¬();8;147050;18381.25;1389;173.63;0;0.00;125;15.63
[RPT_Œœ≈–Œ œ¿ ≈“ ¬€œ»—Œ ];1;1356667;1356667.00;18679;18679.00;13;13.00;907;907.00
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_WRONG_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {##}, {##}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, TRNUMBER DESC;1;29217;29217.00;1403;1403.00;4;4.00;31;31.00
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_WRONG_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {##}, {##}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, CREDIT ASC;3;160247;53415.67;4980;1660.00;3;1.00;94;31.33
BS_ADMIN_INSERT_GROUP;1;45984;45984.00;110;110.00;2;2.00;0;0.00
BPP_NOSTROATTRIBUTESBYBANKANDACC;45;15464735;343660.78;758334;16851.87;1;0.02;11706;260.13
BPP_TRANSACTION_GET_BANK_DATA;1570;13722341;8740.34;126567;80.62;0;0.00;9166;5.84
APP_CUSTOMER_COMMENTS_LIST;8;488512;61064.00;1402;175.25;3;0.38;141;17.63
[RPT_NBKR_—ŒÃŒ¬€… ¡¿À¿Õ—];3;12800890;4266963.33;2585027;861675.67;84;28.00;12452;4150.67
BPP_CUSTOMER_INTERESTTAX_GET;4;51919;12979.75;87;21.75;0;0.00;16;4.00
BPP_ACCITEMPROP_SAVE;2;1843094;921547.00;5559;2779.50;2;1.00;1499;749.50
SP_CURSORFETCH;8921485;716203488;80.28;12378442;1.39;0;0.00;648910;0.07
BPP_DEPOSIT_TERMCREDIT;23;1247091;54221.35;14286;621.13;0;0.00;922;40.09
BPP_PERIOD_WORKS_BALANCES_TRANSFER;1;396159;396159.00;1374;1374.00;0;0.00;187;187.00
APP_ORDER_ANALYTIC_GET;4;113092;28273.00;2960;740.00;0;0.00;45;11.25
SELECT IDENT, {STR} AS AC_LOCAL, CU_CODE, BALANCE, PRINCIPAL, PRINCIPAL_OVERDUE, INTEREST, INTEREST_OVERDUE, PENALTY, CU_CODE AS SEARCHBY, CU_CODE AS AC_NUMBER, CU_NAME, ISNULL(ISOPENACC,{##}) AS ISOPENACC, DOCSIGNDAYS, {STR} AS BNK_ANNAME, OF_CODE, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_DEBTORS ( {STR}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, CU_CODE ASC;37;220324500;5954716.22;9864180;266599.46;12258;331.30;124045;3352.57
BPP_NEWTREE_EXECUTECOMMANDS;5134;2976414153;579745.65;43541052;8480.92;127759;24.88;1593251;310.33
APP_EXCHANGECONTROLSUSAGE_LIST;2;332525;166262.50;1533;766.50;1;0.50;46;23.00
BPP_ISCASHPAYMENT;122;49639;406.88;885;7.25;0;0.00;64;0.52
SELECT AC_IDENT AS IDENT, AC_LOCAL, AC_KEY, CU_CODE, CU_NAME, AC_KIND, CURRENCY, AC_SUBACC, TYPE, INTRATE, BALANCE, DATETO, INTEREST, INTERESTBASE, VALUEDATE, NEARESTDATE, OF_CODE, NOTE, AC_KEY AS SEARCHBY, AC_KEY AS AC_NUMBER, FLAG, {STR} AS BNK_ANNAME, FULL_PATH, {##} AS OBJ_CATEGORY, BYHAND FROM DBO.FN_TAB_ACCMANAGE_CREDITORS_ACCRUAL_INTEREST ( {STR}, {##}, {##}, {STR}, {STR}, {STR}, {##}, {STR}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, AC_KEY ASC;1;12500896;12500896.00;1003588;1003588.00;11;11.00;7125;7125.00
BS_ADMIN_UPDATE_GROUP;1;74104;74104.00;189;189.00;12;12.00;31;31.00
BPP_CASH_TOTALS;1;1905218;1905218.00;285364;285364.00;0;0.00;1968;1968.00
BPP_ACCOUNTAVAILABLEAMOUNT;2706;737146820;272411.98;4016681;1484.36;48;0.02;578007;213.60
BDD_CREATE_DAY_DOCUMENTS;26;2122140191;81620776.58;16269090;625734.23;21311;819.65;1764868;67879.54
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, OF_CODE, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_CURRENT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;1085;107166050;98770.55;2244382;2068.55;6784;6.25;31122;28.68
[RPT_LOANS_RPPU];1;690343131;690343131.00;60265871;60265871.00;28772;28772.00;516860;516860.00
SET SHOWPLAN_TEXT OFF;1;84;84.00;0;0.00;0;0.00;0;0.00
SELECT (@@MICROSOFTVERSION / {BS}) & {BS} AS VERSIONMAJOR;2;550;275.00;0;0.00;0;0.00;0;0.00
BPP_TRANSACTION_TELEX_IDENT;2;73804;36902.00;92;46.00;0;0.00;16;8.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ  ŒÕ¬≈–“¿÷»»();2;21932;10966.00;214;107.00;0;0.00;0;0.00
EXEC @P#=TAB_BICSYSTEM_BOX_PROC;95;18351271;193171.27;22187;233.55;10;0.11;13041;137.27
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_Œ“◊≈“ œŒ «¿¡¿À¿Õ—Œ¬€Ã —◊≈“¿Ã();2;629763;314881.50;4816;2408.00;16;8.00;157;78.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_Œ“◊≈“ œŒ «¿¡¿À¿Õ—Œ¬€Ã —◊≈“¿Ã();1;35957;35957.00;111;111.00;0;0.00;0;0.00
CREATE TABLE #TMPLOGSPC (DATABASENAME SYSNAME, LOGSIZE FLOAT, SPACEUSEDPERC FLOAT, STATUS BIT) INSERT #TMPLOGSPC EXEC(DBCC SQLPERF(LOGSPACE)) SELECT S.NAME AS NAME, S.PHYSICAL_NAME AS FILENAME, CAST(CASE S.IS_PERCENT_GROWTH WHEN {##} THEN S.GROWTH ELSE S.GROWTH*{##} END AS FLOAT) AS GROWTH, CAST(CASE WHEN S.GROWTH={##} THEN {##} ELSE S.IS_PERCENT_GROWTH END AS INT) AS GROWTHTYPE, S.FILE_ID AS ID, CASE WHEN S.MAX_SIZE={##} THEN {##} ELSE S.MAX_SIZE * CONVERT(FLOAT,{##}) END AS MAXSIZE, S.SIZE * CONVERT(FLOAT,{##}) AS SIZE, TSPCLOG.LOGSIZE * TSPCLOG.SPACEUSEDPERC * {##}.{##} AS USEDSPACE, CAST(CASE S.STATE WHEN {##} THEN {##} ELSE {##} END AS BIT) AS ISOFFLINE, S.IS_READ_ONLY AS ISREADONLY, S.IS_MEDIA_READ_ONLY AS ISREADONLYMEDIA, S.IS_SPARSE AS ISSPARSE FROM SYS.MASTER_FILES AS S INNER JOIN #TMPLOGSPC TSPCLOG ON TSPCLOG.DATABASENAME = DB_NAME() WHERE (S.TYPE = {##} AND S.DATABASE_ID = DB_ID()) ORDER BY NAME ASC DROP TABLE #TMPLOGSPC;2;176738;88369.00;598;299.00;2;1.00;62;31.00
BPP_EPAYMENT_MESSAGE_GET;68;6194655;91097.87;171249;2518.37;0;0.00;5310;78.09
APP_EXCHCNTR_REJECT;1;28701;28701.00;366;366.00;2;2.00;15;15.00
SELECT IDENT, AG_IDENT, ISCHILD, CAPTION, BN_BN_CODE, BN_BR_CODE, RTRIM(BN_BN_CODE)+BN_BR_CODE AS SWIFTCODE, SWF_IDENT, SWF_DATE, SWF_TIME, SWF_FLAG, SWF_LEN, SWF_ACTUAL, RECORD, FOUND, SWF_TR_NMB, SWF_TR_SEQ_NMB FROM DBO.FN_TAB_TELEX_MANAGEMENT_TREE ( {STR}, {##}, {##}, NULL, {STR}, {STR}, NULL, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR} ) ORDER BY SORTKEY;1;3004987;3004987.00;60933;60933.00;6;6.00;2015;2015.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ  À»–»Õ√Œ¬€… ‘¿…À();2;10191;5095.50;116;58.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ  À»–»Õ√Œ¬€… ‘¿…À();1;4264;4264.00;111;111.00;0;0.00;0;0.00
BPP_CC_TYPES_ATTRIBUTES_BY_TYPE;2;166934;83467.00;2529;1264.50;0;0.00;171;85.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ œ¿ ≈“ ¬€œ»—Œ ();2;78040;39020.00;475;237.50;0;0.00;15;7.50
BS_OFFLINE_CHECK_USER;1791;1422825;794.43;29871;16.68;0;0.00;776;0.43
SELECT DISTINCT OP_TYPE AS OP_TYPE FROM DBO.BPP_TR_OPERS WITH(NOLOCK);4;26452661;6613165.25;172013;43003.25;2;0.50;60267;15066.75
BS_ADMIN_INSERT_GROUPRIGHTS;1;3797192;3797192.00;359217;359217.00;1899;1899.00;4042;4042.00
SELECT IDENT AS BRIDENT, BR_NAME AS BRNAME FROM DBO.BPP_BRANCHES WHERE DELETED = {##} AND BR_MODE IN(LIST) ORDER BY BRNAME;116;130882;1128.29;2807;24.20;30;0.26;108;0.93
SELECT * FROM BPP_TR_OPERS WHERE IDENT = {##};298;105308;353.38;894;3.00;0;0.00;93;0.31
[RPT_œ–¡Œ 1 –¿«ƒ≈À D];1;17629441;17629441.00;1588926;1588926.00;1065;1065.00;14625;14625.00
[RPT_¡”’√_–¿—◊≈“ –œœ”];2;24272202;12136101.00;1335858;667929.00;243;121.50;21391;10695.50
[RPT_Œœ≈–Œ —œ»—Œ  ¬Œ«¬–¿“Œ¬];2;1081298;540649.00;73566;36783.00;3;1.50;1031;515.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_IT_ENDPOINT();5;80661;16132.20;300;60.00;5;1.00;0;0.00
BPP_TRANSACTION_TELEX_TRANS_NMB_INSERT;151;544291;3604.58;21892;144.98;63;0.42;405;2.68
BPP_MQ_OPENQUEUEBYNAME;15;120104;8006.93;187;12.47;0;0.00;0;0.00
BPP_CURRENCY_ATTRIBUTES_BY_CODE;15;74071;4938.07;340;22.67;0;0.00;47;3.13
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY TRBNAME DESC;2;501363;250681.50;43171;21585.50;124;62.00;344;172.00
DECLARE @VALUEDATE DATETIME SELECT @VALUEDATE = CONVERT(DATETIME, @MINVALUEDATE, {##}) DECLARE @SIMILARIDENT INT EXEC EXCHCTRL_SIMILARITY_DAYS_CHECK @VALUEDATE, @SIMILARITYDAYS, @BENNAME, @DETAILS, @ORDER_XML, @SIMILARITY, @SIMILARIDENT OUTPUT SELECT @SIMILARIDENT;327;1416129083;4330669.98;275380;842.14;10;0.03;3055;9.34
SELECT DTB.COLLATION_NAME AS COLLATION, DTB.NAME AS DATABASENAME2 FROM MASTER.SYS.DATABASES AS DTB WHERE (DTB.NAME={STRN}) DROP TABLE #TMP_SP_DB_VARDECIMAL_STORAGE_FORMAT;2;26539;13269.50;8;4.00;0;0.00;16;8.00
BPP_ACCOUNT_OPERATIONS_COUNT;70;85877;1226.81;468;6.69;0;0.00;46;0.66
SELECT IDENT, WK_NAME, WK_ORDER, CONVERT(VARCHAR({##}), WK_START, {##}) AS WK_START, CONVERT(VARCHAR({##}), WK_FINAL, {##}) AS WK_FINAL, CASE WHEN WK_START IS NULL AND WK_FINAL IS NULL THEN {##} WHEN WK_START IS NOT NULL AND WK_FINAL IS NULL THEN {##} ELSE {##} END AS WK_EXECUTED_FLAG, WK_CONDITION FROM #PERIOD_WORKS ORDER BY #PERIOD_WORKS.WK_ORDER;14;13059;932.79;192;13.71;0;0.00;16;1.14
BPP_TRANSQUEUE_RETRIEVE_XML;77;637555;8279.94;5190;67.40;37;0.48;188;2.44
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_œ–¡Œ 1 –¿«ƒ≈À D();1;14067;14067.00;107;107.00;0;0.00;15;15.00
BPP_CUSTOMER_ATTRIBUTES_BY_IDENT;112;448960;4008.57;9226;82.38;0;0.00;450;4.02
BPP_BRANCHES_ATTRIBUTES_BY_LOCALCODE;168;16938666;100825.39;23551;140.18;0;0.00;12497;74.39
[RPT__ÿ“–»’- Œƒ];11;415505;37773.18;4611;419.18;61;5.55;248;22.55
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, OF_CODE, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_CURRENT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, NARRATIVE ASC;11;1303818;118528.91;103962;9451.09;384;34.91;1189;108.09
BPP_TELEX_CONTENT_PREPARE;102;216678;2124.29;2027;19.87;18;0.18;47;0.46
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_WRONG_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {##}, {##}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, DEBIT ASC;3;84311;28103.67;5067;1689.00;12;4.00;62;20.67
SELECT IDENT , NSASWIFT , NSACCOUNT , NSACURR , NSABALANCE, NSATOTAL FROM DBO.FN_BPP_NOSTRO_PLANBALANCES ( {##}, {STR}, {STR}, {STR}, {##}, {STR} ) ORDER BY NSACCOUNT ASC;4;299616;74904.00;8902;2225.50;0;0.00;312;78.00
SELECT IDENT, ACCKIND, NSACCOUNT, ACCCURR, ACCAMNT, ACCMATUR, ACCINTER, NSAREPCODE, NOACCCASH, NOACCCASHLESS, ACCCLOSEDFLAG, ACCOUNT, ACCREFTYPE, ACCSUB, ACCLOCALNMB FROM DBO.FN_TAB_NOSTRO_ACCOUNTS ( {##}, {STR}, {STR}, {##} ) ORDER BY ACCCURR ASC;1;845176;845176.00;279545;279545.00;0;0.00;844;844.00
BPP_SYNCHRO_IBT_TO_PSB_GET;194;76445074;394046.77;1101451;5677.58;3975;20.49;38296;197.40
SELECT IDENT , NSASWIFT , NSACCOUNT , NSACURR , NSABALANCE, NSATOTAL FROM DBO.FN_BPP_NOSTRO_PLANBALANCES ( {##}, {STR}, {STR}, {STR}, {##}, {STR} ) ORDER BY NSASWIFT DESC;9;1249072;138785.78;175555;19506.11;4;0.44;1250;138.89
SELECT CC.IDENT, CC.CCHOLDER AS CCHOLDER FROM DBO.FN_BPP_ACCOUNT_IDENTS({STR},{STR},NULL,NULL,NULL,NULL) AS ACC INNER JOIN DBO.CCARDS AS CC ON CC.CC_CARD_IDENT = ACC.AC_IDENT INNER JOIN ( SELECT MAX(CC_.IDENT) AS GRID, CC_.CCHOLDER FROM DBO.CCARDS AS CC_ WHERE LEFT(CC_.CCFLAGS, {##}) <> {STR} AND RTRIM(LTRIM(CC_.CCHOLDER)) <> {STR} AND CC_.CCHACC = {STR} AND CC_.DELETED = {##} GROUP BY CC_.CCHOLDER ) AS CC__ ON CC__.GRID = CC.IDENT ORDER BY CC.CCHOLDER;3;608145;202715.00;835;278.33;0;0.00;265;88.33
SELECT IDENT, {STR} AS AC_LOCAL, CU_CODE, CU_NAME, SEQNMB, MAX(ISOPENACC) AS ISOPENACC, DOCSTATUS, OF_CODE, CU_CODE AS SEARCHBY, CU_CODE AS AC_NUMBER, {STR} AS BNK_ANNAME, FULL_PATH, OBJ_CATEGORY FROM #TAB_ACCMANAGE_CUSTOMERS GROUP BY IDENT,CU_CODE,CU_NAME,SEQNMB,DOCSTATUS,OF_CODE,FULL_PATH,OBJ_CATEGORY ORDER BY CU_CODE ASC;327;499370375;1527126.53;5607514;17148.36;45771;139.97;393508;1203.39
SET LOCK_TIMEOUT {##};4;276;69.00;0;0.00;0;0.00;0;0.00
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY TRBNAME ASC;9;687786;76420.67;60658;6739.78;157;17.44;454;50.44
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, TR_NUMBER, TH_SEQ_NUMBER, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_DEPOSITOPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, NARRATIVE ASC;1;12295;12295.00;349;349.00;1;1.00;15;15.00
BS_ADMIN_GET_RIGHTSFORGROUP;5;3534127;706825.40;84132;16826.40;127;25.40;2189;437.80
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ  ¿——Œ¬€≈ Œœ≈–¿÷»» Ã≈Õ≈ƒ∆≈–¿();25;255932;10237.28;403;16.12;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ  ¿——Œ¬€≈ Œœ≈–¿÷»» Ã≈Õ≈ƒ∆≈–¿();50;161417;3228.34;4027;80.54;5;0.10;30;0.60
[RPT_Œœ≈–Œ »«Ã≈Õ≈Õ»≈ —¬Œ…—“¬  À»≈Õ“Œ¬];4;1006696;251674.00;25596;6399.00;0;0.00;640;160.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ Œ»Ã– œÀ¿“≈∆» œŒ √–”œœ¿Ã IT();4;54745;13686.25;623;155.75;2;0.50;31;7.75
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ Œ»Ã– œÀ¿“≈∆» œŒ √–”œœ¿Ã IT();2;50066;25033.00;214;107.00;3;1.50;0;0.00
BPP_WORK_INSERT_TRANS_IMPORT;2;486525;243262.50;1035;517.50;6;3.00;187;93.50
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_NUMBER AS AC_SUBACC, BALANCE, CU_CODE + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS SEARCHBY, CU_CODE + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, OF_CODE, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_CURRENT ( {STR}, {STR}, {##}, {##} ) ORDER BY FLAG ASC, AC_LOCAL ASC;184;455981028;2478157.76;30779436;167279.54;88438;480.64;320264;1740.57
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_–¿—◊≈“ –œœ”();2;44642;22321.00;456;228.00;0;0.00;16;8.00
BPP_BEN_ATTRIBUTES_BY_ACCOUNT;38;360568;9488.63;873;22.97;0;0.00;62;1.63
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_NBKR_—ŒÃŒ¬€… ¡¿À¿Õ—();3;3598;1199.33;131;43.67;0;0.00;0;0.00
[RPT_œ— —œ»—Œ   ¿–“Œ◊Õ€’ —◊≈“Œ¬];12;7476621;623051.75;124604;10383.67;3;0.25;4781;398.42
BPP_SCHEDULE_PROPERIES_LIST;146;29636035;202986.54;971104;6651.40;26;0.18;10769;73.76
[DOC_BDDCONSOLIDATEDTICKETS];22;4279579;194526.32;414637;18847.14;1;0.05;3732;169.64
BPP_ORDER_FIELD_GET;1470;281394;191.42;5948;4.05;0;0.00;172;0.12
[RPT_œ–¡Œ 26 –¿«ƒ≈À];7;892470613;127495801.86;22376586;3196655.14;23427;3346.71;742069;106009.86
SELECT IDENT, ANNAME, OVERDUE, DUE, RESIDUE, BALANCE, SEARCHBY, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY, CU_CODE, AC_KIND, CURRENCY, AC_SUBACC FROM DBO.FN_TAB_ACCMANAGE_LOANANALYTICS({STR},{STR},{STR}, {##}) ORDER BY FLAG ASC, FULL_PATH ASC;941;3446679022;3662783.23;25484716;27082.59;854;0.91;2333659;2479.98
SELECT NAME, RECOVERY_MODEL_DESC, STATE_DESC, CONVERT(INTEGER, IS_IN_STANDBY) FROM MASTER.SYS.DATABASES;1;372851;372851.00;57;57.00;0;0.00;15;15.00
BS_OFFLINE_GET_BUSINESSTYPES;2;1649865;824932.50;22963;11481.50;6;3.00;1578;789.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_IT_SWIFTLIST();9;47671;5296.78;315;35.00;0;0.00;0;0.00
BPP_TRANSACTION_CUSTOMER_ACCOUNT_INSERT;67;1191044175;17776778.73;30689914;458058.42;6096;90.99;1073326;16019.79
BPP_TELEX_CONTENT_INSERT;231;8591772;37193.82;38548;166.87;109;0.47;5129;22.20
BPP_ACCOUNT_CURRENT_BALANCE;70;190225;2717.50;525;7.50;0;0.00;110;1.57
BPP_TRANSACTION_TRANSHDR_COMPLETE;4976;711059071;142897.72;6412676;1288.72;4696;0.94;536320;107.78
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ —Ã–_Œ—“¿“ » œŒ ÀŒ–Œ-ÕŒ—“–Œ();2;20678;10339.00;146;73.00;0;0.00;15;7.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ —Ã–_Œ—“¿“ » œŒ ÀŒ–Œ-ÕŒ—“–Œ();1;38528;38528.00;107;107.00;2;2.00;0;0.00
BS_ADMIN_UPDATE_SDC;2;165819;82909.50;1862;931.00;14;7.00;156;78.00
BPP_TRANSACTION_ORDER_GET;2759;3505246;1270.48;42058;15.24;0;0.00;2722;0.99
TAB_ACCMANAGE_FO_ITEMACCOUNTSBALANCE_PREPARE;4;51062584;12765646.00;5921491;1480372.75;1;0.25;18782;4695.50
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_WRONG_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {##}, {##}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;17;716113;42124.29;36283;2134.29;53;3.12;487;28.65
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    À»≈Õ“€ - ¬—≈ œÀ¿“≈∆» œŒ “»œ¿Ã();14;26748;1910.57;447;31.93;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    À»≈Õ“€ - ¬—≈ œÀ¿“≈∆» œŒ “»œ¿Ã();28;119458;4266.36;1072;38.29;8;0.29;47;1.68
BPP_BEN_INSERT;131;1338713;10219.18;7142;54.52;148;1.13;770;5.88
BPP_EPAYMENT_FIELD_COPY;67;97269;1451.78;13284;198.27;21;0.31;30;0.45
[DOC_TICKET];4;25537207;6384301.75;831602;207900.50;2086;521.50;17641;4410.25
BPP_TELEX_NBKR_PSB_INSERT;116;2476814;21351.84;17433;150.28;148;1.28;1130;9.74
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO, CORRNMB FROM DBO.FN_TAB_ACCMANAGE_OWN_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CREDIT ASC;11;1108587;100780.64;40308;3664.36;42;3.82;766;69.64
SELECT IDENT ,SR_PRIM_IDENT ,OB_OPEN_DATE ,SR_OPEN_DATE ,OB_SERVER_UUID ,OB_QUEUE_NAME ,OB_TOPIC_UUID ,OB_GROUP ,OB_FLAG ,OB_DELAY_LEVEL ,OB_MESSAGE ,OB_ERROR FROM AUBBPPDATABASE.DBO.BPP_SYNCHRONIZATION_OUTBOX WHERE OB_OPEN_DATE >= {STR} AND OB_QUEUE_NAME = {STR} AND OB_FLAG = {STR};26;1098358;42244.54;86572;3329.69;0;0.00;470;18.08
SELECT BEN.IDENT, BEN.BF_NAME AS BFNAME, BEN.BF_ACCNUMB AS BFACCNUMB FROM DBO.BPP_BENEFICIARIES AS BEN WHERE BEN.DELETED = {##} AND BEN.BF_CU_CODE = {STR} ORDER BY BFNAME ASC;705;19779694;28056.30;939290;1332.33;1410;2.00;7635;10.83
SELECT CUST.IDENT AS IDENT, CUST.CU_CODE AS ACCOUNT, DBO.FN_CHOOSE_LANGUAGE(CUST.CU_NAME_RUS, CUST.CU_NAME_ENG) AS CLNAME FROM DBO.BPP_CUSTOMERS AS CUST INNER JOIN ( SELECT DISTINCT CU_IDENT AS IDN FROM DBO.BPP_ACCOUNTS WHERE (AC_CLOSED <> {STR}) AND (DELETED = {##}) ) AS ACC ON ACC.IDN = CUST.IDENT LEFT JOIN DBO.BPP_ALL_RIGHTS_VIEW AS UR ON CUST.ACCESS_RIGHT = UR.RT_MONIKER AND UR.USR_CODE_LOWER = LOWER(HOST_NAME()) AND UR.FINAL_FLAG <> {STR} WHERE (CUST.DELETED = {##}) AND (NULLIF(RTRIM(CUST.CU_BANK_LOCAL_CODE), {STR}) IS NOT NULL) AND (UR.RT_MONIKER IS NOT NULL OR CUST.ACCESS_RIGHT IS NULL) ORDER BY ACCOUNT ASC;29;4761830;164201.03;150835;5201.21;3;0.10;3079;106.17
SELECT WP.IDENT, CONVERT (CHAR({##}), WP.WK_DATE, {##}) AS DATETO FROM DBO.BPP_WORK_PROJECTS AS WP INNER JOIN DBO.BPP_BRANCHES AS BR WITH(NOLOCK) ON WP.BR_IDENT = BR.IDENT AND BR.DELETED = {##} WHERE WP.DELETED = {##} AND WP.WK_CODE = {STR} ORDER BY WP.WK_DATE DESC;1;33148;33148.00;35;35.00;1;1.00;0;0.00
BPP_SYNCHRO_IBT_TO_PSB_PUT;23;143582;6242.70;96;4.17;0;0.00;46;2.00
BPP_PROBLEM_BANK_CONTROL;10627;1054393;99.22;58;0.01;0;0.00;952;0.09
SELECT IS_SRVROLEMEMBER({STR}) * {##} +IS_SRVROLEMEMBER({STR}) * {##} +IS_SRVROLEMEMBER({STR}) * {##} +IS_SRVROLEMEMBER({STR}) * {##} +IS_SRVROLEMEMBER({STR}) * {##} +IS_SRVROLEMEMBER({STR}) * {##} +IS_SRVROLEMEMBER({STR}) * {##}+ IS_SRVROLEMEMBER({STR}) * {##};6;8197;1366.17;132;22.00;0;0.00;0;0.00
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCOUNTS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCPROPS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TRANSACTIONS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #AC_XML_RESULTS END;24;507386;21141.08;14063;585.96;0;0.00;392;16.33
[RPT_NBKR_¬¿Àﬁ“Õ€… ¡¿À¿Õ—];1;2707256;2707256.00;434124;434124.00;20;20.00;2703;2703.00
SELECT IDENT, UP_IDENT, HASCHILD, OBJ_NAME, TR_FULL_NUMBER, OBJ_CODE, OBJ_IDENT, OBJ_FLAGS, OBJ_FLAGSHEAD, OBJ_REF_TYPE, OBJ_FIRST_TYPE FROM DBO.FN_BPP_TRANSACTION_TREE_VIEW( {##}) ORDER BY IDENT;2203;4016452;1823.17;89240;40.51;1;0.00;3222;1.46
BS_ADMIN_GET_PROGRAMRIGHTS;5;10209774;2041954.80;97104;19420.80;52;10.40;4578;915.60
SELECT CONVERT(FLOAT,LOW/{##}.{##}) FROM MASTER.DBO.SPT_VALUES WHERE NUMBER = {##} AND TYPE = {STR};2;35089;17544.50;61;30.50;0;0.00;16;8.00
SELECT @@MAX_PRECISION;11;2230;202.73;0;0.00;0;0.00;0;0.00
SELECT IDENT, CU_CODE, CU_CODE AS AC_NUMBER, {STR} AS AC_LOCAL, CU_NAME, BALANCE, CU_CODE AS SEARCHBY, FLAG, BNK_ANNAME, FULL_PATH, OBJ_CATEGORY, OWNOFFICE, ISOPENACC FROM DBO.FN_TAB_ACCMANAGE_OWNS ( {STR}, {##}, {##}, {STR}, {STR}, {##} ) ORDER BY FLAG ASC, BNK_ANNAME ASC;4;9913503;2478375.75;459230;114807.50;96;24.00;9328;2332.00
SELECT * FROM #TAB_CREDIT_CARDS_TABLE ORDER BY CCHOLDER ASC;25;106102;4244.08;7322;292.88;132;5.28;79;3.16
BPP_MQ_CHECKQUEUE;1031885;168358280;163.16;3097147;3.00;0;0.00;144103;0.14
BPP_CERTIFICATE_GET;8;81210;10151.25;1965;245.63;0;0.00;63;7.88
SELECT IDENT, RTRIM(DBO.FN_CHOOSE_LANGUAGE(AN_NAME_RUS, AN_NAME_ENG)) AS REF_NAME, RTRIM(AN_MONIKER) AS FULL_PATH FROM DBO.VADE_MECUM WHERE AN_PATH LIKE {STR} AND DELETED = {##};304;184329;606.35;3498;11.51;40;0.13;171;0.56
USP_WHO;17;26603782;1564928.35;292242;17190.71;567;33.35;8937;525.71
SELECT IDENT, AF_NAME AS NAME, AF_VALUE AS VALUE, AN_IDENT FROM DBO.VADE_MECUM_FIELDS WHERE DELETED = {##} AND AN_IDENT = {##} ORDER BY NAME ASC;48;468273;9755.69;432;9.00;0;0.00;235;4.90
BPP_SYNCHRO_FILTER_GET;119;89300967;750428.29;662973;5571.20;216;1.82;27234;228.86
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_«¿¡¿À¿Õ—Œ¬¿ﬂ ¬≈ƒŒÃŒ—“‹();6;416831;69471.83;14291;2381.83;43;7.17;343;57.17
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_«¿¡¿À¿Õ—Œ¬¿ﬂ ¬≈ƒŒÃŒ—“‹();3;11401;3800.33;331;110.33;0;0.00;16;5.33
BS_OFFLINE_PRINT_CLIENTSTATEMENT;66;16477318;249656.33;79884;1210.36;365;5.53;9126;138.27
BS_OFFLINE_CHECK_ENVELOPE;1;70827;70827.00;80;80.00;0;0.00;15;15.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    À»≈Õ“€ - Õ¿À»◊Õ€≈ Œœ≈–¿÷»»();2;22179;11089.50;107;53.50;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    À»≈Õ“€ - Õ¿À»◊Õ€≈ Œœ≈–¿÷»»();4;10461;2615.25;168;42.00;1;0.25;15;3.75
IF (OBJECT_ID({STRN}) IS NULL) BEGIN CREATE TABLE #TAB_ACCMANAGE_FSEARCHRESULT ( IDENT INT, FOUND VARCHAR({##}) NULL, CU_CODE VARCHAR({##}) NOT NULL, CU_NAME VARCHAR({##}) NULL, OF_IDENT INT NULL, OF_CODE CHAR({##}) NULL, FLAG INT NOT NULL DEFAULT({##}), FULL_PATH VARCHAR({##}) NULL, OBJ_CATEGORY INT NULL, ISOPENACC INT NULL ) INSERT INTO #TAB_ACCMANAGE_FSEARCHRESULT ( IDENT, FOUND, CU_CODE, FLAG, OBJ_CATEGORY, FULL_PATH, CU_NAME, OF_IDENT, OF_CODE, ISOPENACC ) VALUES( LIST) END IF (OBJECT_ID({STRN}) IS NULL) BEGIN CREATE TABLE #TAB_ACCMANAGE_FSEARCHCHOSEN ( IDENT INT, FOUND VARCHAR({##}) NULL, CU_CODE VARCHAR({##}) NOT NULL, CU_NAME VARCHAR({##}) NULL, OF_IDENT INT NULL, OF_CODE CHAR({##}) NULL, FLAG INT NOT NULL DEFAULT({##}), FULL_PATH VARCHAR({##}) NULL, OBJ_CATEGORY INT NULL, ISOPENACC INT NULL ) END;1087;1617570;1488.10;24044;22.12;29;0.03;947;0.87
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ Ã”À‹“»¬€œ»— ¿();1;10086;10086.00;75;75.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_Œ¡Œ–Œ“€ » Œ—“¿“ » œŒ —◊≈“”();2;11056;5528.00;219;109.50;0;0.00;16;8.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_Œ¡Œ–Œ“€ » Œ—“¿“ » œŒ —◊≈“”();4;335850;83962.50;9355;2338.75;29;7.25;219;54.75
BPP_GET_OFFICE_BY_ACC;7598;11395518;1499.80;280415;36.91;2;0.00;9747;1.28
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_SUBACC, BALANCE, PRINCIPAL, INTEREST, SEARCHBY, AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, OF_CODE, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY, MATURITYDATE, REFNAME FROM DBO.FN_TAB_ACCMANAGE_CUDEPOSITS ( {STR}, {STR}, {##}, {##} ) ORDER BY FLAG ASC, AC_LOCAL ASC;53;49460337;933213.91;376471;7103.23;45;0.85;39574;746.68
APP_GET_AGR_BRANCHES;6;164249;27374.83;177;29.50;0;0.00;125;20.83
BPP_TRANSACTION_CUSTOMER_ACCOUNT_UPDATE;95;1353992765;14252555.42;18413066;193821.75;3914;41.20;1136204;11960.04
EXEC @P#=TAB_CORR_NUMBERS_BOX_PROC;655;313260;478.26;8059;12.30;11;0.02;282;0.43
SELECT TH_IDENT AS IDENT, TH_IDENT AS TH_IDENT, CAST(TH_NUMBER AS VARCHAR({##})) +{STR}+ CAST(TH_SEQ_NMB AS VARCHAR({##})) AS TRNUMBER, ORGNAME AS ORGNAME, ORGACC AS ORGACC, BENNAME AS BENNAME, CASH_AC_NUMBER AS CASHACC, CASHACID AS CASHACCID, AMOUNT AS TRAMOUNT, PAYMCURR AS THCURR, PLANDATE AS TRDATE, DETAILS AS THDETAILS, TH_PENDING_FLAG AS WAITFLAG, TH_STORNO_FLAG AS STORNOFLAG, TH_STORNO_FLAG AS STORNO_FLAG, TH_NUMBER AS TR_NUMBER, TH_SEQ_NMB AS TH_SEQ_NUMBER, BENDOC AS BENDOC, TH_NOTE AS THNOTE, TRO_IDENT AS TRO_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_CSPAYMENTS ( {STR}, {STR}, {STR}, {##}, {##}, {##}, {##} ) ORDER BY FLAG ASC, TRDATE DESC;876;189922406;216806.40;1952869;2229.30;154;0.18;128388;146.56
SELECT IDENT, ANNAME, OPENBALANCE, DEBIT, CREDIT, CLOSEDBALANCE, SEARCHBY, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY, CU_CODE, AC_KIND, CURRENCY, AC_SUBACC, ANALITICS FROM DBO.FN_TAB_ACCMANAGE_DEPOSITSTERMS({STR},{STR},{STR},{##}) ORDER BY FLAG ASC, FULL_PATH ASC;192;142441975;741885.29;1303154;6787.26;95;0.49;103657;539.88
SELECT NAME, CMPTLEVEL, SID, STATUS FROM DBO.SYSDATABASES ORDER BY NAME;1;327372;327372.00;148;148.00;0;0.00;31;31.00
BPP_TRANSACTION_STATUS_ADDITION;327;1574884;4816.16;1311;4.01;60;0.18;187;0.57
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ Ã”À‹“»¬€œ»— ¿();2;7243;3621.50;239;119.50;1;0.50;0;0.00
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY TRDEBIT ASC;41;6124498;149378.00;868554;21184.24;2304;56.20;5019;122.41
BPP_TRANSACTION_TELEX_INSERT;383;1673765;4370.14;22495;58.73;851;2.22;542;1.42
SELECT OPR.IDENT, BR.BR_NAME + {STR} + OFC.OF_CODE AS OFFICE, DBO.FN_TAB_NAME ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_NAME_RUS, OAT.AN_NAME_ENG, CUS.CU_NAME_RUS, CUS.CU_NAME_ENG, BAN.BANNAME ) AS NAME, DBO.FN_TAB_ACCOUNT ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_MONIKER, CUS.CU_CODE, ACC.AC_NUMBER, ACC.AC_KIND, C2.CURRENCY ) AS ACCOUNT, OPR.OP_TYPE AS TRTYPE, CONVERT(VARCHAR,TRH.TH_NUMBER)+{STR}+CONVERT(VARCHAR,TRH.TH_SEQ_NMB)+{STR}+CONVERT(VARCHAR, OPR.OP_SEQ_NMB) AS TRNUMBER, TRH.TH_ORDER_NUMBER AS ORDERNMB, OPR.OP_DEBIT AS TRDEBIT, OPR.OP_CREDIT AS TRCREDIT, C2.CURRENCY AS TCURRENCY, DBO.FN_CHOOSE_LANGUAGE(USR.USR_NAME_RUS, USR.USR_NAME_ENG) AS AUTHOR, CASE WHEN TRH.TH_STORNO_FLAG = {STR} THEN {##} ELSE {##} END AS TRSTORNOFLAG, CASE WHEN OPR.OP_WAIT_FLAG = {STR} THEN {##} ELSE {##} END AS TRWAITFLAG, CASE WHEN TRH.TH_PENDING_FLAG = {STR} THEN {##} ELSE {##} END AS TRCOMPLETEFLAG, CASE WHEN OPR.OP_VALID_FLAG = {STR} THEN {##} ELSE {##} END AS TRVALIDFLAG, OPR.OP_NARRATIVE AS TRBNAME, OPR.OP_VALUE_DATE AS TRVALDATE, OPR.TH_IDENT AS TH_IDENT, TRH.TH_NUMBER AS TH_NUMBER, TRH.TH_SEQ_NMB AS TH_SEQ_NMB, TRH.TH_DETAILS AS TH_DETAILS FROM DBO.BPP_TR_OPERS AS OPR INNER JOIN DBO.BPP_TR_HEADS AS TRH ON OPR.TH_IDENT = TRH.IDENT INNER JOIN DBO.BPP_ACCOUNTS AS ACC ON OPR.AC_IDENT = ACC.IDENT INNER JOIN DBO.CURRENCY AS C1 ON ACC.CURR_IDENT = C1.IDENT INNER JOIN DBO.CURRENCY AS C2 ON C1.ORIGINAL = C2.ORIGINAL AND OPR.OP_VALUE_DATE BETWEEN C2.CUR_START_DATE AND C2.CUR_STOP_DATE INNER JOIN DBO.BPP_CUSTOMERS AS CUS ON ACC.CU_IDENT = CUS.IDENT INNER JOIN DBO.BANKS AS BAN ON ACC.BN_IDENT = BAN.IDENT INNER JOIN DBO.BPP_USERS AS USR ON LOWER(TRH.TH_SIGN_1) = USR.USR_CODE_LOWER AND USR.USR_START_DATE <= OPR.OP_START_DATE AND USR.USR_STOP_DATE > OPR.OP_START_DATE LEFT JOIN DBO.BPP_OFFICES AS OFC ON USR.OF_IDENT = OFC.IDENT LEFT JOIN DBO.BPP_BRANCHES AS BR ON OFC.BR_IDENT = BR.IDENT AND BR.BR_MODE IN(LIST) LEFT JOIN DBO.VADE_MECUM AS OAT INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON OAT.IDENT = OWN.AN_IDENT ON ACC.IDENT = OWN.AC_IDENT CROSS JOIN DBO.BPP_OPTIONS AS OPT WHERE OPR.OP_VALUE_DATE = CONVERT(DATETIME, {STR}, {##}) AND (( {STR} = {STR}) OR (DBO.FN_TAB_NAME ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_NAME_RUS, OAT.AN_NAME_ENG, CUS.CU_NAME_RUS, CUS.CU_NAME_ENG, BAN.BANNAME ) = {STR})) AND (( {STR} = {STR}) OR (DBO.FN_TAB_ACCOUNT ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, OAT.AN_PATH, OAT.AN_MONIKER, CUS.CU_CODE, ACC.AC_NUMBER, ACC.AC_KIND, C2.CURRENCY ) = {STR})) AND DBO.FN_TAB_ACCOUNT_TYPE ( OPT.CU_IDENT, OPT.BN_IDENT, CUS.IDENT, BAN.IDENT, {STR} ) = {##} AND DBO.FN_TAB_AMOUNT_TYPE ( OPR.OP_DEBIT, OPR.OP_CREDIT, {STR} ) = {##} AND (CASE WHEN OPR.OP_VALID_FLAG = {STR} THEN {##} ELSE {##} END IN(LIST)) AND (CASE WHEN OPR.OP_RED_ST_FLAG = {STR} THEN {##} ELSE {##} END IN(LIST)) AND ({STR} + ISNULL(BR.BR_NAME,{STR})+{STR}+ISNULL(OFC.OF_CODE,{STR}) LIKE ( {STR}+{STR})) AND (OPT.DELETED = {##}) AND (OPR.DELETED = {##}) ORDER BY TRNUMBER DESC OPTION (FAST {##});9;85164562;9462729.11;2959212;328801.33;3423;380.33;59438;6604.22
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_NUMBER AS AC_SUBACC, BALANCE, RTRIM(CU_CODE) + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS SEARCHBY, RTRIM(CU_CODE) + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_OWN_ACCOUNTS ( {STR}, {STR}, {##}, {##} ) ORDER BY FLAG ASC, AC_LOCAL ASC;910;344486212;378556.28;2795355;3071.82;280;0.31;251390;276.25
SELECT IDENT, TRNUMBER, ORDER_NMB, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, TH_IDENT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETE_FLAG, TRO_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO, CORRNMB FROM DBO.FN_TAB_ACCMANAGE_OWN_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, DEBIT ASC;1;535136;535136.00;26108;26108.00;22;22.00;531;531.00
SELECT TOP {##} *, {STR} AS PARAMETER FROM FN_BPP_OPTIONS_TREE() CROSS JOIN FN_BPP_TRANSACTION_TREE({##});4966;1700526862;342433.92;1863825;375.32;2289;0.46;1265215;254.78
SELECT OP1.IDENT AS IDENT, OP1.NMB AS NMB, OP1.TYPE AS TYPE, OP1.ACCOUNT AS ACCOUNT, OP1.CURRENCY AS CURRENCY, OP1.DEBIT AS DEBIT, OP1.CREDIT AS CREDIT, OP2.ACCOUNT + {STR} +OP1.NARRATIVE AS NARRATIVE, OP1.VALUEDATE AS VALUEDATE, OP1.TRSUBNMB*{##}+OP1.TROPNMB AS SORTNMB FROM ( SELECT OPERS.IDENT AS IDENT, OPERS.TW_IDENT AS TW_IDENT, CONVERT(VARCHAR,TH.TH_NUMBER)+{STR}+ CONVERT(VARCHAR,TH.TH_SEQ_NMB)+{STR}+ CONVERT(VARCHAR,OPERS.OP_SEQ_NMB) AS NMB, OPERS.OP_TYPE AS TYPE, {STR}+DBO.FN_TAB_ACCOUNT ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, VM.AN_PATH, VM.AN_MONIKER, CUSTS.CU_CODE, ACCS.AC_NUMBER, ACCS.AC_KIND, NULL )+ {STR}+DBO.FN_TAB_NAME ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, VM.AN_PATH, VM.AN_NAME_RUS, VM.AN_NAME_ENG, CUSTS.CU_NAME_RUS, CUSTS.CU_NAME_ENG, BANKS.BANNAME ) AS ACCOUNT, CURR.CURRENCY AS CURRENCY, OPERS.OP_DEBIT AS DEBIT, OPERS.OP_CREDIT AS CREDIT, OPERS.OP_NARRATIVE AS NARRATIVE, OPERS.OP_VALUE_DATE AS VALUEDATE, TH.TH_SEQ_NMB AS TRSUBNMB, OPERS.OP_SEQ_NMB AS TROPNMB FROM DBO.BPP_TR_OPERS AS OPERS INNER JOIN DBO.BPP_ACCOUNTS AS ACCS ON OPERS.AC_IDENT = ACCS.IDENT INNER JOIN DBO.BPP_TR_HEADS AS TH ON OPERS.TH_IDENT = TH.IDENT INNER JOIN DBO.CURRENCY AS CURR ON ACCS.CURR_IDENT = CURR.IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUSTS ON ACCS.CU_IDENT = CUSTS.IDENT INNER JOIN DBO.BANKS AS BANKS ON ACCS.BN_IDENT = BANKS.IDENT LEFT JOIN DBO.VADE_MECUM AS VM INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON VM.IDENT = OWN.AN_IDENT ON ACCS.IDENT = OWN.AC_IDENT LEFT JOIN DBO.BPP_OPTIONS ON BPP_OPTIONS.DELETED={##} WHERE (OPERS.TH_IDENT = {##}) ) AS OP1 INNER JOIN ( SELECT OPERS.IDENT AS IDENT, OPERS.TW_IDENT AS TW_IDENT, CONVERT(VARCHAR,TH.TH_NUMBER)+{STR}+ CONVERT(VARCHAR,TH.TH_SEQ_NMB)+{STR}+ CONVERT(VARCHAR,OPERS.OP_SEQ_NMB) AS NMB, OPERS.OP_TYPE AS TYPE, {STR}+DBO.FN_TAB_ACCOUNT ( BPP_OPTIONS.CU_IDENT, BPP_OPTIONS.BN_IDENT, CUSTS.IDENT, BANKS.IDENT, VM.AN_PATH, VM.AN_MONIKER, CUSTS.CU_CODE, ACCS.AC_NUMBER, ACCS.AC_KIND, NULL ) AS ACCOUNT, CURR.CURRENCY AS CURRENCY, OPERS.OP_VALUE_DATE AS VALUEDATE, TH.TH_SEQ_NMB AS TRSUBNMB, OPERS.OP_SEQ_NMB AS TROPNMB FROM DBO.BPP_TR_OPERS AS OPERS INNER JOIN DBO.BPP_ACCOUNTS AS ACCS ON OPERS.AC_IDENT = ACCS.IDENT INNER JOIN DBO.BPP_TR_HEADS AS TH ON OPERS.TH_IDENT = TH.IDENT INNER JOIN DBO.CURRENCY AS CURR ON ACCS.CURR_IDENT = CURR.IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUSTS ON ACCS.CU_IDENT = CUSTS.IDENT INNER JOIN DBO.BANKS AS BANKS ON ACCS.BN_IDENT = BANKS.IDENT LEFT JOIN DBO.VADE_MECUM AS VM INNER JOIN DBO.BPP_OWN_TAG_LINKS AS OWN ON VM.IDENT = OWN.AN_IDENT ON ACCS.IDENT = OWN.AC_IDENT LEFT JOIN DBO.BPP_OPTIONS ON BPP_OPTIONS.DELETED={##} WHERE (OPERS.TH_IDENT = {##}) ) AS OP2 ON OP1.TW_IDENT = OP2.IDENT ORDER BY DEBIT ASC;4;1074092;268523.00;2505;626.25;3;0.75;984;246.00
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_NOSTRO_»“Œ√» œŒ —◊≈“¿Ã();2;96620;48310.00;292;146.00;0;0.00;15;7.50
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_NOSTRO_»“Œ√» œŒ —◊≈“¿Ã();1;2687;2687.00;107;107.00;0;0.00;0;0.00
BPP_EPAYMENT_MESSAGE_INSERT;134;1413371;10547.54;20759;154.92;45;0.34;1001;7.47
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY WRDEST ASC;3;194106;64702.00;15169;5056.33;52;17.33;109;36.33
EXEC @P#=TAB_CARDBANKS_BOX_PROC;24;468217;19509.04;1817;75.71;10;0.42;218;9.08
SELECT CAST(COLLATIONPROPERTY(NAME, {STR}) AS INT) AS LOCALEID FROM SYS.FN_HELPCOLLATIONS() CL WHERE (CL.NAME={STRN});2;101971;50985.50;32;16.00;0;0.00;15;7.50
[RPT_¡”’√_À» ¬»ƒÕŒ—“‹_ 3];6;4305645561;717607593.50;92155842;15359307.00;174;29.00;3440016;573336.00
BPP_CREDIT_CARD_ACCOUNT_ATTRIBUTES;169;8497412;50280.54;209545;1239.91;427;2.53;4995;29.56
SET SHOWPLAN_XML OFF;1;67;67.00;0;0.00;0;0.00;0;0.00
SELECT IDENT, CU_CODE, ACC_FULL, BALANCE, MATURITYDATE, TOPAYMENT, OUTSTANDING, PENALTY, REPAYMENT, REPAYDATE, PER_CENT, COVER, AC_NUMBER AS SEARCHBY, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, OF_CODE, FLAG, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_DEBTORS_TERMS ( {STR}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, ACC_FULL ASC;3;22753633;7584544.33;523883;174627.67;554;184.67;10250;3416.67
SELECT IDENT, FS_NAME, FS_QUERY, START_DATE, STOP_DATE, LASTEL, SEARCHBY, FULL_PATH, OBJ_CATEGORY, ISOPENACC FROM DBO.FN_TAB_ACCMANAGE_FO_ITEMCORRSCRIPTS ( {STR}, {STR}, {STR}, {##}, {##} ) ORDER BY FS_NAME ASC;17;277884;16346.12;1189;69.94;5;0.29;139;8.18
BPP_FO_ACCOUNTING_ANALYTIC_FROM_BANKING;102;29131149;285599.50;673151;6599.52;0;0.00;22815;223.68
BPP_TELEX_COMPLETE_NEW;4;34143;8535.75;48;12.00;0;0.00;32;8.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”   ƒ»Õ¿Ã» ¿ Œ¡Œ–Œ“Œ¬ (¿ “»¬€)();1;12798;12798.00;114;114.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”   ƒ»Õ¿Ã» ¿ Œ¡Œ–Œ“Œ¬ (¿ “»¬€)();2;50988;25494.00;434;217.00;0;0.00;47;23.50
BS_ADMIN_INSERT_SDC;3;346928;115642.67;1528;509.33;23;7.67;94;31.33
BS_PAYSYSTEST;5460;571589;104.69;32;0.01;0;0.00;408;0.07
SELECT IDENT, AC_LOCAL, CU_CODE, AC_KIND, CURRENCY, AC_NUMBER AS AC_SUBACC, BALANCE, RTRIM(CU_CODE) + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS SEARCHBY, RTRIM(CU_CODE) + {STR} + AC_KIND + {STR} + CURRENCY + {STR} + AC_NUMBER AS AC_NUMBER, CU_NAME, {STR} AS BNK_ANNAME, FLAG, CLOSED, FULL_PATH, OBJ_CATEGORY FROM DBO.FN_TAB_ACCMANAGE_WRONG_ACCOUNTS ( {STR}, {STR}, {##}, {##} ) ORDER BY FLAG ASC, AC_LOCAL ASC;17;8426659;495685.82;60715;3571.47;24;1.41;5001;294.18
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_Œ¡Œ–Œ“ÕŒ-—¿À‹ƒŒ¬¿ﬂ ¬≈ƒŒÃŒ—“‹();88;2015813;22906.97;21652;246.05;32;0.36;1234;14.02
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_Œ¡Œ–Œ“ÕŒ-—¿À‹ƒŒ¬¿ﬂ ¬≈ƒŒÃŒ—“‹();44;27126;616.50;152;3.45;0;0.00;0;0.00
BPP_TELEX_FIND;1;97064;97064.00;210;210.00;0;0.00;62;62.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_¡”’√_À» ¬»ƒÕŒ—“‹_ 3();6;107229;17871.50;1248;208.00;0;0.00;62;10.33
SELECT SEL.IDENT AS IDENT, SEL.CODE AS CODE, SEL.CURRENCY AS CURRENCY, SEL.LOCALACC+{STR}+SEL.FULLACC+{STR} AS LOCALFULLACC FROM ( SELECT DISTINCT ISNULL(-OAT.IDENT, CUS.IDENT) AS IDENT, CAST(CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_CODE ELSE OAT.AN_MONIKER END AS VARCHAR({##})) AS CODE, CURR.CURRENCY AS CURRENCY, DBO.FN_BPP_LOCAL_NUMBER_DIRECT(ACC.IDENT,NULL, NULL) AS LOCALACC, RTRIM(CAST(CASE WHEN OAT.IDENT IS NULL THEN CUS.CU_CODE ELSE OAT.AN_MONIKER END AS VARCHAR({##})))+{STR}+ACC.AC_KIND+{STR}+CURR.CURRENCY+{STR}+(CASE WHEN ACC.AC_NUMBER = {STR} THEN {STR} ELSE ACC.AC_NUMBER END) AS FULLACC FROM DBO.BPP_OPTIONS AS OPT INNER JOIN (SELECT * FROM DBO.BPP_ACCOUNTS WHERE DELETED={##} AND AC_CLOSED <> {STR}) AS ACC ON OPT.BN_IDENT = ACC.BN_IDENT INNER JOIN DBO.CURRENCY AS CURR ON CURR.IDENT = ACC.CURR_IDENT INNER JOIN DBO.BPP_CUSTOMERS AS CUS ON ACC.CU_IDENT = CUS.IDENT LEFT JOIN DBO.BPP_OFFICES AS OFC ON ACC.OF_IDENT = OFC.IDENT LEFT JOIN DBO.BPP_OWN_TAG_LINKS AS OWN INNER JOIN DBO.VADE_MECUM AS OAT ON OAT.IDENT = OWN.AN_IDENT ON OWN.AC_IDENT = ACC.IDENT WHERE (OFC.IDENT IS NULL OR ( {STR} = {STR}) OR (OFC.OF_CODE = {STR})) ) AS SEL WHERE DBO.FN_TAB_LOCAL_ACCOUNTS_BOX_FILTER ( SEL.IDENT, SEL.CODE, {STR} ) = {##} ORDER BY SEL.LOCALACC;488;618661513;1267749.00;299384;613.49;103;0.21;464934;952.73
SET XACT_ABORT OFF SET NOCOUNT ON BEGIN TRANSACTION DELETE DBO.BPP_ACTIVE_USERS WHERE UU_SPID = @@SPID COMMIT TRANSACTION;2060;3773638;1831.86;7464;3.62;69;0.03;386;0.19
[RPT_ –≈ƒ œ–Œ—–Œ◊≈ÕÕ€≈  –≈ƒ»“€];8;251852239;31481529.88;11692851;1461606.38;5746;718.25;96670;12083.75
SELECT OP.IDENT AS IDENT, OP.TH_IDENT AS TH_IDENT, BAL.AN_MONIKER+{STR}+BAL.AN_DESCR_RUS AS BALACCOUNT, CASE WHEN FO.FO_OBJ_IDENT = BAL.IDENT THEN {STR} ELSE DBO.FN_BPP_FOREST_GETFIELD({STR}, FO.FO_OBJ_IDENT, FO.FO_OBJ_CATEGORY) END AS ANACCOUNT, REPLACE(DBO.FN_BPP_BN_ACCOUNT_INFO(OP.AC_IDENT,{##}) +{STR}+RTRIM(AC.AC_KIND)+{STR}+RTRIM(AC.AC_NUMBER),{STR},{STR}) AS BANKACCOUNT, OP.OP_TYPE AS TYPE, OP.OP_VALUE_DATE AS VALUE_DATE, CURR.CURRENCY AS CURRENCY, OP.OP_DEBIT AS DEBIT, OP.OP_CREDIT AS CREDIT, OP.OP_NARRATIVE AS NARRATIVE FROM DBO.BPP_TR_OPERS AS OP WITH(NOLOCK) INNER JOIN DBO.BPP_ACCOUNTS AS AC WITH(NOLOCK) ON OP.AC_IDENT = AC.IDENT INNER JOIN DBO.CURRENCY AS CURR WITH(NOLOCK) ON AC.CURR_IDENT = CURR.IDENT INNER JOIN DBO.BPP_TR_OP_AMOUNTS AS OA WITH(NOLOCK) ON OP.IDENT = OA.OP_IDENT INNER JOIN DBO.BPP_FOREST_REAL AS FO WITH(NOLOCK) ON OA.FO_BIN_IDENT = FO.FO_BINARY_PATH INNER JOIN DBO.VADE_MECUM AS BAL WITH(NOLOCK) ON FO.FO_FULL_PATH LIKE BAL.AN_PATH+{STR}+BAL.AN_MONIKER+{STR} INNER JOIN DBO.VADE_MECUM_FIELDS AS VMF WITH(NOLOCK) ON BAL.IDENT = VMF.AN_IDENT AND VMF.AF_NAME ={STR} AND VMF.AF_VALUE={STR} WHERE OP.TH_IDENT = {##} OPTION(FORCE ORDER);101;244358083;2419386.96;11053694;109442.51;89358;884.73;171819;1701.18
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCOUNTS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCTURNOVERS END IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #ACCPROPERTIES END;38;597868;15733.37;15452;406.63;0;0.00;377;9.92
SELECT IDENT, ACCKIND, NSACCOUNT, ACCCURR, ACCAMNT, ACCMATUR, ACCINTER, NSAREPCODE, NOACCCASH, NOACCCASHLESS, ACCCLOSEDFLAG, ACCOUNT, ACCREFTYPE, ACCSUB, ACCLOCALNMB FROM DBO.FN_TAB_NOSTRO_ACCOUNTS ( {##}, {STR}, {STR}, {##} ) ORDER BY ACCAMNT ASC;1;376051;376051.00;279658;279658.00;0;0.00;359;359.00
BS_OFFLINE_PRINT_TOS;32;10839335;338729.22;219032;6844.75;194;6.06;6876;214.88
BPP_ISSTORNOALLOWED_REP;2;9036273;4518136.50;299746;149873.00;0;0.00;13919;6959.50
BPP_TRANSACTION_INVESTIGATION_STATUS_SET;4;152526;38131.50;497;124.25;40;10.00;31;7.75
BPP_FO_BUILD_TREE;3499;5099503640;1457417.44;143503276;41012.65;58696;16.78;4958328;1417.07
BS_PAYSYSVALIDATE;27;3326367;123198.78;52184;1932.74;257;9.52;1734;64.22
BPP_TRANSACTION_GET_BANK_CODES;5631;48285125;8574.88;451161;80.12;0;0.00;36224;6.43
BS_OFFLINE_GET_CASHDESKS;275;2476432;9005.21;279267;1015.52;0;0.00;1923;6.99
SELECT IDENT AS IDENT, THIDENT AS THIDENT, BALACCOUNT AS BALACCOUNT, TRNUMBER AS TRNUMBER, OPTYPE AS OPTYPE, VALUE_DATE AS VALUE_DATE, DEBIT AS DEBIT, CREDIT AS CREDIT, NARRATIVE AS NARRATIVE, DETAILS AS DETAILS, TOTALFLAG FROM DBO.FN_TAB_FO_ITEMOPERATIONS( {BS}, {STR}, {STR}, {STR}, {STR}, {STR}, {##} ) ORDER BY TOTALFLAG ASC,DEBIT ASC;1;16541794;16541794.00;106333;106333.00;15;15.00;15953;15953.00
SP_CURSORCLOSE;59614;14278358;239.51;188837;3.17;1161;0.02;5370;0.09
[DOC_ACCOUNTSTATEMENT];61;65591372;1075268.39;359478;5893.08;451;7.39;33952;556.59
CREATE TABLE #SCRIPT_HEADERS ( IDENT INT , FS_NAME VARCHAR({##}), FS_BIN_PATH VARBINARY({##}), FS_CONNECTOR VARCHAR({##}), FS_QUERY VARCHAR({##}) ) CREATE TABLE #SCRIPT_TAGS ( IDENT INT IDENTITY({##},{##}), FS_IDENT INT, TAG_NAME VARCHAR({##}), NS_PATH VARCHAR({##}), NS_MONIKER VARCHAR({##}), SQL_EXPR VARCHAR({##}) ) INSERT INTO #SCRIPT_TAGS ( FS_IDENT , TAG_NAME , NS_PATH , NS_MONIKER, SQL_EXPR ) SELECT FS_IDENT, TAG_NAME, NS_PATH, NS_MONIKER, SQL_EXPR FROM DBO.BPP_FO_CORR_QUERY WHERE FS_IDENT = {##} INSERT INTO #SCRIPT_HEADERS ( IDENT , FS_NAME , FS_BIN_PATH, FS_CONNECTOR, FS_QUERY ) SELECT IDENT, FS_NAME, FS_BIN_PATH, FS_CONNECTOR, FS_QUERY FROM DBO.BPP_FO_CORR_SCRIPTS WHERE IDENT = {##};2;36375;18187.50;652;326.00;3;1.50;31;15.50
BPP_ISUNIQUE_CARDNMB;41;28794;702.29;167;4.07;0;0.00;16;0.39
BPP_CUST_GET_BASIC_ACTIVITY;112;126234;1127.09;2688;24.00;0;0.00;125;1.12
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_DAY_ENDUP();4;74415;18603.75;677;169.25;1;0.25;48;12.00
APP_EXCHCNTR_APPROVE;197;1070921;5436.15;63897;324.35;409;2.08;639;3.24
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ“◊≈“ œŒ  ŒÀ»◊≈—“¬”  À»≈Õ“Œ¬();1;2740;2740.00;108;108.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ“◊≈“ œŒ  ŒÀ»◊≈—“¬”  À»≈Õ“Œ¬();2;25143;12571.50;425;212.50;0;0.00;31;15.50
APP_MESSAGING_INSERT_MESSAGE;54;21553094;399131.37;257439;4767.39;38;0.70;12652;234.30
BPP_TRANSACTION_OPEN_INVESTIGATION_IDENT;7;56545;8077.86;250;35.71;0;0.00;15;2.14
BPP_SCHEDULE_OPTIONS;146;9742561;66729.87;92040;630.41;4;0.03;5700;39.04
BPP_SYNCHRO_EXPORT_PUT;91;34920191;383738.36;2001625;21995.88;2585;28.41;20471;224.96
BPP_CHARGES_GROUP_GET;5331;10526789;1974.64;223348;41.90;0;0.00;9081;1.70
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_NBKR_—ŒÃŒ¬€… ¡¿À¿Õ—();6;307895;51315.83;13116;2186.00;45;7.50;235;39.17
SELECT CUR.IDENT AS IDENT FROM DBO.CURRENCY AS CUR WHERE (CUR.DELETED = {##}) AND (CUR.CURRENCY IN(LIST));48;32041;667.52;280;5.83;0;0.00;0;0.00
BPP_CC_TYPES_ATTRIBUTES;2;594270;297135.00;2604;1302.00;0;0.00;298;149.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ Œ»Ã– ¿Õ¿À»« ¡¿Õ Œ¬();2;21013;10506.50;107;53.50;0;0.00;16;8.00
SELECT PR_DESCR_E, PR_VALUE_E FROM FN_RPT_VERIFY_BALANCES();4;383457;95864.25;1440;360.00;0;0.00;47;11.75
CREATE TABLE #TMPSPC (FILEID INT, FILEGROUP INT, TOTALEXTENTS INT, USEDEXTENTS INT, NAME SYSNAME, FILENAME NCHAR({##})) INSERT #TMPSPC EXEC(DBCC SHOWFILESTATS) SELECT CAST(CAST(G.NAME AS VARBINARY({##})) AS SYSNAME) AS FILEGROUP_NAME, S.NAME AS NAME, (TSPC.TOTALEXTENTS - TSPC.USEDEXTENTS)*CONVERT(FLOAT,{##}) AS AVAILABLESPACE, S.PHYSICAL_NAME AS FILENAME, CAST(CASE S.IS_PERCENT_GROWTH WHEN {##} THEN S.GROWTH ELSE S.GROWTH*{##} END AS FLOAT) AS GROWTH, CAST(CASE WHEN S.GROWTH={##} THEN {##} ELSE S.IS_PERCENT_GROWTH END AS INT) AS GROWTHTYPE, S.FILE_ID AS ID, CAST(CASE S.FILE_ID WHEN {##} THEN {##} ELSE {##} END AS BIT) AS ISPRIMARYFILE, CASE WHEN S.MAX_SIZE={##} THEN {##} ELSE S.MAX_SIZE * CONVERT(FLOAT,{##}) END AS MAXSIZE, S.SIZE * CONVERT(FLOAT,{##}) AS SIZE, CAST(TSPC.USEDEXTENTS*CONVERT(FLOAT,{##}) AS FLOAT) AS USEDSPACE, CAST(CASE S.STATE WHEN {##} THEN {##} ELSE {##} END AS BIT) AS ISOFFLINE, S.IS_READ_ONLY AS ISREADONLY, S.IS_MEDIA_READ_ONLY AS ISREADONLYMEDIA, S.IS_SPARSE AS ISSPARSE FROM SYS.FILEGROUPS AS G INNER JOIN SYS.MASTER_FILES AS S ON (S.TYPE = {##} AND S.DATABASE_ID = DB_ID() AND (S.DROP_LSN IS NULL)) AND (S.DATA_SPACE_ID=G.DATA_SPACE_ID) INNER JOIN #TMPSPC TSPC ON TSPC.FILEID = S.FILE_ID ORDER BY FILEGROUP_NAME ASC,NAME ASC DROP TABLE #TMPSPC;2;292500;146250.00;657;328.50;7;3.50;125;62.50
CREATE TABLE #NEWTREE ( IDENT INT IDENTITY ({##}, {##}) NOT NULL , BINPATH VARBINARY({##}) NOT NULL DEFAULT(CONVERT(VARBINARY({##}), {STR})), PATH VARCHAR({##}) NOT NULL, MONIKER AS (REPLACE(CASE WHEN CHARINDEX({STR}, PATH) = {##} THEN {STR} ELSE SUBSTRING(PATH, CHARINDEX({STR}, PATH) + {##}, {##}) END, {STR}, {STR})), CAPTION VARCHAR({##}) NOT NULL, TOOLTIP VARCHAR({##}) NULL, CATEGORY INT NOT NULL DEFAULT({##}), OBJECT INT NULL, OFFICE INT NULL, CHILDS INT NOT NULL DEFAULT({##}), CLOSED INT NOT NULL DEFAULT({##}), RIGHT VARCHAR({##}) NULL, DATA VARCHAR({##}) NULL, PRIMARY KEY(BINPATH, IDENT) );522;6505595;12462.83;134167;257.02;205;0.39;2141;4.10
APP_EXCHCNTR_COMPLAIN;12;108539;9044.92;3995;332.92;39;3.25;47;3.92
[RPT_”    ¿——Œ¬€≈ Œœ≈–¿÷»»];3;303721902;101240634.00;15192809;5064269.67;2172;724.00;244859;81619.67
BPP_TRANSQUEUE_ORDER_FIELDS_KEEP;1084;3069684;2831.81;7;0.01;0;0.00;1686;1.56
IF (OBJECT_ID({STRN}) IS NOT NULL) BEGIN DROP TABLE #TAB_BANKS_TABLE END CREATE TABLE #TAB_BANKS_TABLE ( IDENT INT NOT NULL, SWIFT VARCHAR({##}) NULL, BANNAME VARCHAR({##}) NULL, BANLKCODE VARCHAR({##}) NULL, BANLOCATN VARCHAR({##}) NULL, NOBALANCE NUMERIC({##},{##}) NULL, NOISOPENACC INT NULL, CURR_IDENT INT NULL, AC_IDENT INT NULL, NOISEMPTY INT NULL, AC_KIND CHAR({##}) NULL, DOC_SIGN_FINISH INT NULL );144;675715;4692.47;19453;135.09;34;0.24;454;3.15
BPP_SIGNATURE_GET;357;15925784;44610.04;178603;500.29;0;0.00;1076;3.01
BPP_CUSTOMER_KEYCODE;64;19573;305.83;204;3.19;0;0.00;16;0.25
SP_STORED_PROCEDURES;1889;8532452;4516.91;60477;32.02;0;0.00;6298;3.33
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, OF_CODE, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_CURRENT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CREDIT DESC;3;206049;68683.00;4190;1396.67;11;3.67;93;31.00
EXEC @P#=TAB_INVESTIGATION_STATUS_PROC;11;32768;2978.91;218;19.82;3;0.27;0;0.00
BS_ADMIN_GET_RIGHTSFORUSER;1;683324;683324.00;25268;25268.00;34;34.00;640;640.00
BS_OFFLINE_GET_POSTBOX_ITEM;39;1196385;30676.54;19019;487.67;76;1.95;141;3.62
SELECT C.NAME, T.NAME + CASE WHEN T.NAME IN(LIST) THEN {STR} + CASE C.LENGTH WHEN {##} THEN {STR} ELSE CONVERT(VARCHAR, C.LENGTH) END + {STR} WHEN T.NAME IN(LIST) THEN {STR} + CONVERT(VARCHAR, C.PREC) + {STR} + CONVERT(VARCHAR, C.SCALE) + {STR} ELSE {STR} END, CASE WHEN C.ISNULLABLE = {##} THEN {STR} ELSE {STR} END FROM AUBBPPDATABASE.DBO.SYSCOLUMNS C JOIN AUBBPPDATABASE.DBO.SYSTYPES T ON C.XTYPE = T.XTYPE AND C.XUSERTYPE = T.XUSERTYPE WHERE C.ID = @B0 AND C.NUMBER = {##} ORDER BY C.COLID;1;109893;109893.00;111;111.00;0;0.00;47;47.00
MASTER.DBO.SP_MSDBUSERPRIV;2;22999;11499.50;21;10.50;0;0.00;0;0.00
BPP_BKPERIODS_GET;1047;23409997;22359.12;9868;9.43;0;0.00;5894;5.63
SELECT BAN.IDENT, BAN.BANNAME, BAN.BANLKCODE, BAN.BANKCODE+BAN.BANBRCODE AS SWIFT FROM DBO.BANKS AS BAN INNER JOIN ( SELECT DISTINCT ACC.BN_IDENT FROM DBO.BPP_ACCOUNTS AS ACC LEFT JOIN DBO.BPP_ALL_RIGHTS_VIEW AS UR ON ACC.ACCESS_RIGHT = UR.RT_MONIKER AND UR.USR_CODE_LOWER = LOWER(HOST_NAME()) AND UR.FINAL_FLAG <> {STR} WHERE (ACC.AC_CLOSED <> {STR}) AND (ACC.AC_KIND = {STR}) AND (ACC.DELETED = {##}) AND (( {STR} = {STR}) OR (ACC.AC_CASHALLOWED = {STR})) AND (({STR} = {STR}) OR (ACC.AC_CASHLESSALLOWED = {STR})) AND (ACC.BN_IDENT <> (SELECT TOP {##} BN_IDENT FROM DBO.BPP_OPTIONS WHERE DELETED = {##})) AND (UR.RT_MONIKER IS NOT NULL OR ACC.ACCESS_RIGHT IS NULL) ) AS _ACC ON _ACC.BN_IDENT = BAN.IDENT ORDER BY BAN.BANNAME;47;5866469;124818.49;375344;7986.04;15;0.32;4428;94.21
[RPT_NBKR_Œ“◊≈“ œŒ ¡≈«Õ¿À”];2;41835974;20917987.00;977018;488509.00;4079;2039.50;24598;12299.00
BPP_TELEX_UPDATE_OFFSET;377;71944;190.83;1147;3.04;0;0.00;94;0.25
SELECT BAN.IDENT, BAN.BANNAME, BANKCODE+BANBRCODE AS SWIFT FROM DBO.BANKS AS BAN INNER JOIN ( SELECT DISTINCT ACC.BN_IDENT FROM DBO.BPP_ACCOUNTS AS ACC INNER JOIN DBO.CURRENCY AS CURR ON CURR.IDENT = ACC.CURR_IDENT WHERE (ACC.AC_CLOSED <> {STR}) AND (ACC.AC_KIND = {STR}) AND (ACC.DELETED = {##}) AND (( {STR} = {STR}) OR (ACC.AC_CASHALLOWED = {STR})) AND (({STR} = {STR}) OR (ACC.AC_CASHLESSALLOWED = {STR})) AND (({STR} = {STR}) OR (CURR.CURRENCY = {STR})) ) AS _ACC ON _ACC.BN_IDENT = BAN.IDENT ORDER BY BAN.BANNAME;116;11298267;97398.85;941195;8113.75;26;0.22;8743;75.37
BS_OFFLINE_GET_BALANCES;505;56049730;110989.56;718951;1423.67;2805;5.55;25696;50.88
TAB_BANKS_TABLE_PREPARE;150;544727351;3631515.67;58131136;387540.91;104753;698.35;523118;3487.45
BPP_PERIOD_WORKS_SETTIME;5;420265;84053.00;31;6.20;0;0.00;16;3.20
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ_œ–Œ“Œ ŒÀ Õ¿◊»—À≈Õ»ﬂ œ–Œ÷≈Õ“Œ¬ œŒ  –≈ƒ»“¿Ã();2;35419;17709.50;415;207.50;0;0.00;31;15.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ_œ–Œ“Œ ŒÀ Õ¿◊»—À≈Õ»ﬂ œ–Œ÷≈Õ“Œ¬ œŒ  –≈ƒ»“¿Ã();1;25747;25747.00;109;109.00;0;0.00;0;0.00
EXEC @P#=TAB_BKPERIODS_BOX_PROC;2;68697;34348.50;14018;7009.00;12;6.00;48;24.00
DROP TABLE #NEWTREE;332;7660589;23074.06;158853;478.47;350;1.05;2460;7.41
BPP_ACCOUNT_ANALYTIC_AMOUNT;336;5460419;16251.25;9572;28.49;0;0.00;297;0.88
BPP_TELEXORDER_202;28;3991543;142555.11;38394;1371.21;18;0.64;3081;110.04
[RPT_ –≈ƒ  –≈ƒ»“Õ€… œŒ–“‘≈À‹];3;84531620;28177206.67;6000340;2000113.33;2533;844.33;61829;20609.67
BPP_SYNCHRO_IBT_FR_PSB_PUT;9;1376282;152920.22;16280;1808.89;126;14.00;611;67.89
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ ƒ≈œŒ«»“€ ƒŒ ¬Œ—“–≈¡Œ¬¿Õ»ﬂ();2;47833;23916.50;487;243.50;0;0.00;63;31.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ ƒ≈œŒ«»“€ ƒŒ ¬Œ—“–≈¡Œ¬¿Õ»ﬂ();1;3986;3986.00;107;107.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ —–≈ƒÕ»≈ Œ¡Œ–Œ“€ » Œ—“¿“ » œŒ  À»≈Õ“— »Ã —◊≈“¿Ã();4;25121;6280.25;522;130.50;0;0.00;16;4.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ —–≈ƒÕ»≈ Œ¡Œ–Œ“€ » Œ—“¿“ » œŒ  À»≈Õ“— »Ã —◊≈“¿Ã();2;21123;10561.50;179;89.50;0;0.00;16;8.00
SELECT DTB.IS_FULLTEXT_ENABLED AS ISFULLTEXTENABLED FROM MASTER.SYS.DATABASES AS DTB WHERE (DTB.NAME={STRN}) DROP TABLE #TMP_SP_DB_VARDECIMAL_STORAGE_FORMAT;1;23924;23924.00;8;8.00;0;0.00;15;15.00
SELECT IDENT, TRNUMBER, URGENCY, ORG_NAME, ACCOUNT, VALDATE, PLANDATE, CURRENCY, AMOUNT, NOACCOUNT, NSACCFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, NSACODE, ANALITICS, EXCH_FLAG, INCASSO_FLAG, TOPROCESS, PROCESSED, NOTES, COMMISSION, PAYMODE_FLAG FROM DBO.FN_TAB_PAYMPLAN_CASHLESS_TABLE ( {STR}, {STR}, {##}, {STR}, {##}, {STR}, {STR}, {STR}, {STR}, {STR}, {##}, {##}, {STR} ) ORDER BY TH_NUMBER DESC;473;245495321;519017.59;2932947;6200.73;978;2.07;141540;299.24
SELECT COUNT(*) FROM DBO.EXCHCTRL_ORDERS WHERE CU_CODE = @CU_CODE AND CURR_CODE = @CURR_CODE AND DATEPART(YEAR, ORDER_DATE) = DATEPART(YEAR, CONVERT(DATETIME, @MINVALUEDATE, {##})) AND DATEPART(DAYOFYEAR, ORDER_DATE) = DATEPART(DAYOFYEAR, CONVERT(DATETIME, @MINVALUEDATE, {##})) AND KEY_NAME = @KEY_NAME;280;587196;2097.13;1901;6.79;3;0.01;532;1.90
DROP TABLE #SCRIPT_TAGS DROP TABLE #SCRIPT_HEADERS;2;21115;10557.50;508;254.00;0;0.00;31;15.50
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY TRCREDIT ASC;158;5231358;33109.86;519425;3287.50;786;4.97;3033;19.20
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_DAY_ENDUP();2;29842;14921.00;190;95.00;1;0.50;15;7.50
BACKUP DATABASE MODEL TO VIRTUAL_DEVICE={STR} WITH SNAPSHOT,BUFFERCOUNT={##},BLOCKSIZE={##};1;15808250;15808250.00;240;240.00;17;17.00;141;141.00
SELECT IDENT, AG_IDENT, ISCHILD, CAPTION, BN_BN_CODE, BN_BR_CODE, RTRIM(BN_BN_CODE)+BN_BR_CODE AS SWIFTCODE, SWF_IDENT, SWF_DATE, SWF_TIME, SWF_FLAG, SWF_LEN, SWF_ACTUAL, RECORD, FOUND, SWF_TR_NMB, SWF_TR_SEQ_NMB FROM DBO.FN_TAB_TELEX_MANAGEMENT_TREE ( {STR}, {##}, {##}, {##}, {STR}, {STR}, NULL, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR}, {STR} ) ORDER BY SORTKEY;146;353555037;2421609.84;5823197;39884.91;798;5.47;282245;1933.18
BPP_ACCITEMPROP_INSERT;4;6560986;1640246.50;104970;26242.50;88;22.00;2766;691.50
SELECT IDENT, {STR} AS AC_LOCAL, CU_CODE, CU_NAME, SEQNMB, MAX(ISOPENACC) AS ISOPENACC, DOCSTATUS, OF_CODE, CU_CODE AS SEARCHBY, CU_CODE AS AC_NUMBER, {STR} AS BNK_ANNAME, FULL_PATH, OBJ_CATEGORY FROM #TAB_ACCMANAGE_CUSTOMERS GROUP BY IDENT,CU_CODE,CU_NAME,SEQNMB,DOCSTATUS,OF_CODE,FULL_PATH,OBJ_CATEGORY ORDER BY DOCSTATUS ASC;1;1023088;1023088.00;5513;5513.00;40;40.00;328;328.00
APP_ORDER_ANALYTIC_SET;18;99735;5540.83;12260;681.11;0;0.00;62;3.44
BPP_LOCAL_NUMBER_PARSE;17508;271830557;15526.08;12063083;689.00;184;0.01;151428;8.65
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ œ–Œ—–Œ◊≈ÕÕ€≈  –≈ƒ»“€();9;59746;6638.44;780;86.67;1;0.11;64;7.11
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_ –≈ƒ œ–Œ—–Œ◊≈ÕÕ€≈  –≈ƒ»“€();18;553380;30743.33;3403;189.06;9;0.50;327;18.17
BPP_EPAYMENT_CYCLE_INSERT;1;364660;364660.00;1351;1351.00;3;3.00;204;204.00
BS_ADMIN_GET_USERS;19;56991201;2999536.89;722407;38021.42;218;11.47;38375;2019.74
[DOC_CREDADVICE];1;144798;144798.00;833;833.00;6;6.00;94;94.00
BS_ADMIN_UPDATE_LOGINTYPE;2;68758;34379.00;435;217.50;1;0.50;63;31.50
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY TRCREDIT DESC;41;982985;23975.24;127390;3107.07;170;4.15;768;18.73
SELECT CUST.IDENT AS IDENT, CUST.CU_CODE AS ACCOUNT, DBO.FN_CHOOSE_LANGUAGE(CUST.CU_NAME_RUS, CUST.CU_NAME_ENG) AS CLNAME FROM DBO.BPP_CUSTOMERS AS CUST INNER JOIN ( SELECT DISTINCT CU_IDENT AS IDN FROM DBO.BPP_ACCOUNTS WHERE (AC_CLOSED <> {STR}) AND (DELETED = {##}) ) AS ACC ON ACC.IDN = CUST.IDENT LEFT JOIN DBO.BPP_ALL_RIGHTS_VIEW AS UR ON CUST.ACCESS_RIGHT = UR.RT_MONIKER AND UR.USR_CODE_LOWER = LOWER(HOST_NAME()) AND UR.FINAL_FLAG <> {STR} INNER JOIN DBO.BPP_OPTIONS AS OPT ON ACC.IDN <> OPT.CU_IDENT WHERE (CUST.DELETED = {##}) AND (NULLIF(RTRIM(CUST.CU_BANK_LOCAL_CODE), {STR}) IS NULL) AND (UR.RT_MONIKER IS NOT NULL OR CUST.ACCESS_RIGHT IS NULL) ORDER BY ACCOUNT ASC;135;115699037;857029.90;3324021;24622.38;14079;104.29;74996;555.53
BPP_EPAYMENT_PART_COUNT;1;19792;19792.00;37;37.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_œ–¡Œ 9 –¿«ƒ≈À();1;4167;4167.00;107;107.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_NBKR_Œ“◊≈“ œŒ ¡≈«Õ¿À”();1;7143;7143.00;107;107.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_NBKR_Œ“◊≈“ œŒ ¡≈«Õ¿À”();2;154722;77361.00;4265;2132.50;13;6.50;78;39.00
BPP_EPAYMENT_FILE_CHECK;1;208113;208113.00;915;915.00;0;0.00;109;109.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”   ƒ»Õ¿Ã» ¿ Œ¡Œ–Œ“Œ¬ (œ¿——»¬€)();2;41753;20876.50;449;224.50;0;0.00;47;23.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”   ƒ»Õ¿Ã» ¿ Œ¡Œ–Œ“Œ¬ (œ¿——»¬€)();1;11807;11807.00;109;109.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_«Œ_Œ¡Œ–Œ“ÕŒ-—¿À‹ƒŒ¬¿ﬂ ¬≈ƒŒÃŒ—“‹();2;11715;5857.50;111;55.50;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_«Œ_Œ¡Œ–Œ“ÕŒ-—¿À‹ƒŒ¬¿ﬂ ¬≈ƒŒÃŒ—“‹();4;131202;32800.50;792;198.00;4;1.00;62;15.50
BPP_TRANSACTION_GET_ACKIND_BY_ATTR;4;189423;47355.75;608;152.00;0;0.00;124;31.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    À»≈Õ“€ -  ŒÀ»◊≈—“¬Œ œÀ¿“≈∆≈…();2;15258;7629.00;133;66.50;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”    À»≈Õ“€ -  ŒÀ»◊≈—“¬Œ œÀ¿“≈∆≈…();1;12328;12328.00;109;109.00;0;0.00;0;0.00
SELECT IDENT ,SR_PRIM_IDENT ,OB_OPEN_DATE ,SR_OPEN_DATE ,OB_SERVER_UUID ,OB_QUEUE_NAME ,OB_TOPIC_UUID ,OB_GROUP ,OB_FLAG ,OB_DELAY_LEVEL ,OB_MESSAGE ,OB_ERROR FROM AUBBPPDATABASE.DBO.BPP_SYNCHRONIZATION_OUTBOX WHERE OB_OPEN_DATE >= {STR} AND OB_QUEUE_NAME = {STR};1;23003;23003.00;3335;3335.00;0;0.00;15;15.00
BPP_WORK_INSERT;1;175127;175127.00;580;580.00;3;3.00;63;63.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ“◊≈“ œŒ Œ“ –€“€Ã » «¿ –€“€Ã —◊≈“¿Ã();1;2621;2621.00;108;108.00;0;0.00;0;0.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œ“◊≈“ œŒ Œ“ –€“€Ã » «¿ –€“€Ã —◊≈“¿Ã();2;26473;13236.50;438;219.00;0;0.00;15;7.50
BPP_TRANSACTION_STORNO;60;19627265;327121.08;261536;4358.93;778;12.97;13323;222.05
BPP_ACCOUNT_BALANCE;33;223487;6772.33;918;27.82;0;0.00;30;0.91
BPP_BEN_INSERT_BEN;2;77645;38822.50;67;33.50;5;2.50;31;15.50
BS_ADMIN_UPDATE_USER;1;1074244;1074244.00;48832;48832.00;59;59.00;875;875.00
[RPT_NBKR_–¿—◊≈“ À»Ã»“¿ œŒ«»÷»»];3;43873405;14624468.33;443534;147844.67;5;1.67;32454;10818.00
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, CU_CODE, FLAG, STORNO_FLAG, WAIT_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_CASH_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, DEBIT ASC;2;64680;32340.00;2997;1498.50;6;3.00;62;31.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ œ¿ ≈“ ¬€œ»—Œ ();1;2855;2855.00;109;109.00;0;0.00;16;16.00
SELECT *, {STR} AS PARAMETER FROM DBO.FN_BPP_OPTIONS_TREE();14337;405589156;28289.68;1771676;123.57;211;0.01;288601;20.13
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_”   »—“Œ–»ﬂ œÀ¿“≈∆¿();3;19617;6539.00;325;108.33;1;0.33;0;0.00
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, FLAG, STORNO_FLAG, WAIT_FLAG, COMPLETED_FLAG, TH_IDENT, TR_NUMBER, TH_SEQ_NUMBER, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_DEPOSITOPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;33;1427260;43250.30;13297;402.94;46;1.39;625;18.94
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ –¿—ÿ»‘–Œ¬ ¿ Œ—“¿“ Œ¬ œŒ —◊≈“¿Ã  À»≈Õ“Œ¬();2;87187;43593.50;464;232.00;3;1.50;62;31.00
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ –¿—ÿ»‘–Œ¬ ¿ Œ—“¿“ Œ¬ œŒ —◊≈“¿Ã  À»≈Õ“Œ¬();1;48947;48947.00;107;107.00;3;3.00;0;0.00
SELECT @@SPID SELECT SERVERPROPERTY({STR});3;1287;429.00;0;0.00;0;0.00;0;0.00
[DOC_CASHPAYMENTORDER];1;91599;91599.00;787;787.00;7;7.00;78;78.00
[RPT_IT_ENDPOINT];4;79846442;19961610.50;2237292;559323.00;571;142.75;44375;11093.75
BPP_TRANSACTION_GET_DATA;13047;225272434;17266.22;3357903;257.37;0;0.00;131387;10.07
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ »—’ŒƒﬂŸ»≈ œÀ¿“≈∆»  À»≈Õ“Œ¬();6;130940;21823.33;1082;180.33;0;0.00;79;13.17
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_Œœ≈–Œ »—’ŒƒﬂŸ»≈ œÀ¿“≈∆»  À»≈Õ“Œ¬();3;29627;9875.67;326;108.67;0;0.00;15;5.00
APP_EXCHCNTR_GET;855;1228145703;1436427.72;77363780;90483.95;5306;6.21;841756;984.51
BPP_PAYMPLAN_SETACC;359;54143;150.82;1095;3.05;25;0.07;48;0.13
SELECT IDENT, TRNUMBER, TH_CODE, OP_TYPE, NARRATIVE, VALUEDATE, DEBIT, CREDIT, AC_NUMBER, AC_LOCAL, CU_NAME, BNK_ANNAME, CU_CODE, FLAG, STORNO_FLAG, WAIT_FLAG, TH_IDENT, FULL_PATH, OBJ_CATEGORY, BALANCETO FROM DBO.FN_TAB_ACCMANAGE_CASH_ACCOUNT_OPERS ( {STR}, {STR}, {STR}, {##}, {##}, {STR}, {##} ) ORDER BY FLAG ASC, CONVERT(VARCHAR,VALUEDATE,{##})+CAST(IDENT AS VARCHAR) DESC;857;288358317;336474.12;17357638;20253.95;79858;93.18;172703;201.52
BPP_INVESTIGATE_UPDATE;1;479090;479090.00;30981;30981.00;2;2.00;437;437.00
SELECT IDENT, MONIKER, AC_NAME, CURRENCY, CR_BAL_IN - DR_BAL_IN AS BAL_IN, DR_TURN_CLR, CR_TURN_CLR, CR_BAL_OUT - DR_BAL_OUT AS BAL_OUT, FULL_PATH, {##} AS OBJ_CATEGORY, TOTALFLAG, {STR} AS AC_NUMBER, {STR} AS CU_NAME, {STR} AS AC_LOCAL, {STR} AS BNK_ANNAME, SEARCHBY FROM #TAB_ACCMANAGE_FO_ITEMACCOUNTSBALANCE ORDER BY TOTALFLAG ASC, MONIKER ASC;4;21139;5284.75;46;11.50;2;0.50;30;7.50
SELECT PR_DESCR_R, PR_VALUE_R FROM FN_RPT_IT_ENDPOINT();10;60735;6073.50;431;43.10;0;0.00;0;0.00
BPP_EXCHCTRL_PAYMENTS_LIMIT;280;132367;472.74;1208;4.31;0;0.00;91;0.33
SELECT IDENT, ACCKIND, ACCSUB, ACCCURR, ACCLOCALNMB, ACCAMNT, REFNAME, ACCMATUR, ACCINTER, CCHOLDER, ACCCLOSEDFLAG, CCFLAGS, ACCOUNT, CLNAME, ACCREFTYPE, OVERDRAFT, BALANCE, AVAILABLE, FROZEN, CREDITLINE FROM DBO.FN_TAB_CUSTOMER_ACCOUNTS_TABLE ( {##}, {STR}, {##} ) ORDER BY ACCKIND ASC;7;12430250;1775750.00;6432793;918970.43;12;1.71;7640;1091.43
[RPT_¡”’√_«¿¡¿À¿Õ—Œ¬¿ﬂ ¬≈ƒŒÃŒ—“‹];3;509487085;169829028.33;23644363;7881454.33;20725;6908.33;480046;160015.33
BPP_EPAYMENT_FIELD_INSERT;871;635521;729.65;16701;19.17;26;0.03;606;0.70
SELECT IDENT, TRNUMBER, TRTYPE, TRBNAME, TRORGNAME, TRVALDATE, TRORDNMB, TRDEBIT, TRCREDIT, TRSTORNOFLAG, TRWAITFLAG, TRCOMPLETEFLAG, TH_IDENT, TH_NUMBER, TH_SEQ_NMB, TH_DETAILS, CONFDATE, CONFNMB, DEBIT, CREDIT, MINVALDATE, MAXVALDATE, WRDEST FROM DBO.FN_TAB_NOSTRO_OPERATIONS ( {##}, {##}, {STR}, {STR}, {STR}, {##}, {##}, {##}, {STR} ) ORDER BY WRDEST DESC;37;1763775;47669.59;191019;5162.68;564;15.24;1378;37.24
[RPT_VERIFY_BALANCES];3;137108776;45702925.33;4120138;1373379.33;2443;814.33;61969;20656.33
SELECT IDENT, AN_PATH+{STR}+AN_MONIKER AS REF_PATH_CODE, CASE DBO.FN_CHOOSE_LANGUAGE({##}, {##}) WHEN {##} THEN AN_NAME_RUS ELSE AN_NAME_ENG END AS RFNAME, CASE DBO.FN_CHOOSE_LANGUAGE({##}, {##}) WHEN {##} THEN AN_DESCR_RUS ELSE AN_DESCR_ENG END AS RFDESCR FROM DBO.VADE_MECUM WHERE AN_PATH = {STR} AND AN_ACTIVE_FLAG = {STR} ORDER BY {##};55;47941;871.65;825;15.00;16;0.29;108;1.96
